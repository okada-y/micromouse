ARM GAS  C:\Temp\ccxpPsMn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"motor.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Motor_Initialize,"ax",%progbits
  18              		.align	1
  19              		.global	Motor_Initialize
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Motor_Initialize:
  27              	.LFB133:
  28              		.file 1 "Src/motor.c"
   1:Src/motor.c   **** /*
   2:Src/motor.c   ****  * motor.c
   3:Src/motor.c   ****  *
   4:Src/motor.c   ****  *  Created on: Jul 14, 2019
   5:Src/motor.c   ****  *      Author: 岡田 泰裕
   6:Src/motor.c   ****  */
   7:Src/motor.c   **** 
   8:Src/motor.c   **** #include "motor.h"
   9:Src/motor.c   **** #include "stm32f4xx_hal.h"
  10:Src/motor.c   **** #include "tim.h"
  11:Src/motor.c   **** #include "param.h"
  12:Src/motor.c   **** 
  13:Src/motor.c   **** #define PCLK			(HAL_RCC_GetPCLK2Freq())	//マイコンの動作周波数[Hz]
  14:Src/motor.c   **** #define PWMFREQ			(100000)					//モータの動作周波数[Hz]
  15:Src/motor.c   **** #define MOT_DUTY_MIN	(30)						//モータの最低Duty
  16:Src/motor.c   **** #define MOT_DUTY_MAX	(150)						//モータの最大Duty
  17:Src/motor.c   **** 
  18:Src/motor.c   **** //モータの向き設定
  19:Src/motor.c   **** #define MOT_SET_COMPARE_L_REVERSE(x)	__HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, x)
  20:Src/motor.c   **** #define MOT_SET_COMPARE_L_FORWARD(x)	__HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, x)
  21:Src/motor.c   **** #define MOT_SET_COMPARE_R_FORWARD(x)	__HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_3, x)
  22:Src/motor.c   **** #define MOT_SET_COMPARE_R_REVERSE(x)	__HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_4, x)
  23:Src/motor.c   **** 
  24:Src/motor.c   **** static int16_t duty_r;
  25:Src/motor.c   **** static int16_t duty_l;
  26:Src/motor.c   **** 
  27:Src/motor.c   **** /* ---------------------------------------------------------------
  28:Src/motor.c   **** 	モータ用のタイマーを開始する関数
  29:Src/motor.c   **** --------------------------------------------------------------- */
  30:Src/motor.c   **** void Motor_Initialize( void )
ARM GAS  C:\Temp\ccxpPsMn.s 			page 2


  31:Src/motor.c   **** {
  29              		.loc 1 31 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  32:Src/motor.c   **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
  38              		.loc 1 32 2 view .LVU1
  39 0002 094C     		ldr	r4, .L3
  40 0004 0021     		movs	r1, #0
  41 0006 2046     		mov	r0, r4
  42 0008 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  43              	.LVL0:
  33:Src/motor.c   **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
  44              		.loc 1 33 2 view .LVU2
  45 000c 0421     		movs	r1, #4
  46 000e 2046     		mov	r0, r4
  47 0010 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  48              	.LVL1:
  34:Src/motor.c   **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
  49              		.loc 1 34 2 view .LVU3
  50 0014 0821     		movs	r1, #8
  51 0016 2046     		mov	r0, r4
  52 0018 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  53              	.LVL2:
  35:Src/motor.c   **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
  54              		.loc 1 35 2 view .LVU4
  55 001c 0C21     		movs	r1, #12
  56 001e 2046     		mov	r0, r4
  57 0020 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  58              	.LVL3:
  36:Src/motor.c   **** }
  59              		.loc 1 36 1 is_stmt 0 view .LVU5
  60 0024 10BD     		pop	{r4, pc}
  61              	.L4:
  62 0026 00BF     		.align	2
  63              	.L3:
  64 0028 00000000 		.word	htim4
  65              		.cfi_endproc
  66              	.LFE133:
  68              		.section	.text.Motor_StopPWM,"ax",%progbits
  69              		.align	1
  70              		.global	Motor_StopPWM
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv4-sp-d16
  76              	Motor_StopPWM:
  77              	.LFB134:
  37:Src/motor.c   **** 
  38:Src/motor.c   **** /* ---------------------------------------------------------------
  39:Src/motor.c   **** 	モータのの回転を止める関数
  40:Src/motor.c   **** --------------------------------------------------------------- */
ARM GAS  C:\Temp\ccxpPsMn.s 			page 3


  41:Src/motor.c   **** void Motor_StopPWM( void )
  42:Src/motor.c   **** {
  78              		.loc 1 42 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  43:Src/motor.c   **** 	MOT_SET_COMPARE_L_FORWARD( 0xffff );
  83              		.loc 1 43 2 view .LVU7
  84 0000 044B     		ldr	r3, .L6
  85 0002 1B68     		ldr	r3, [r3]
  86 0004 4FF6FF72 		movw	r2, #65535
  87 0008 9A63     		str	r2, [r3, #56]
  44:Src/motor.c   **** 	MOT_SET_COMPARE_L_REVERSE( 0xffff );
  88              		.loc 1 44 2 view .LVU8
  89 000a 5A63     		str	r2, [r3, #52]
  45:Src/motor.c   **** 	MOT_SET_COMPARE_R_FORWARD( 0xffff );
  90              		.loc 1 45 2 view .LVU9
  91 000c DA63     		str	r2, [r3, #60]
  46:Src/motor.c   **** 	MOT_SET_COMPARE_R_REVERSE( 0xffff );
  92              		.loc 1 46 2 view .LVU10
  93 000e 1A64     		str	r2, [r3, #64]
  47:Src/motor.c   **** }
  94              		.loc 1 47 1 is_stmt 0 view .LVU11
  95 0010 7047     		bx	lr
  96              	.L7:
  97 0012 00BF     		.align	2
  98              	.L6:
  99 0014 00000000 		.word	htim4
 100              		.cfi_endproc
 101              	.LFE134:
 103              		.section	.text.set_duty_l,"ax",%progbits
 104              		.align	1
 105              		.global	set_duty_l
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu fpv4-sp-d16
 111              	set_duty_l:
 112              	.LVL4:
 113              	.LFB135:
  48:Src/motor.c   **** 
  49:Src/motor.c   **** /* ---------------------------------------------------------------
  50:Src/motor.c   **** 	左モータを指定のDuty（0～1000）で回転させる関数
  51:Src/motor.c   **** --------------------------------------------------------------- */
  52:Src/motor.c   **** void set_duty_l( int16_t duty_l_tmp )
  53:Src/motor.c   **** {
 114              		.loc 1 53 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		.loc 1 53 1 is_stmt 0 view .LVU13
 119 0000 08B5     		push	{r3, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 3, -8
 123              		.cfi_offset 14, -4
ARM GAS  C:\Temp\ccxpPsMn.s 			page 4


  54:Src/motor.c   **** 	uint32_t	pulse_l;
 124              		.loc 1 54 2 is_stmt 1 view .LVU14
  55:Src/motor.c   **** 
  56:Src/motor.c   **** 	duty_l = duty_l_tmp;
 125              		.loc 1 56 2 view .LVU15
 126              		.loc 1 56 9 is_stmt 0 view .LVU16
 127 0002 2C4B     		ldr	r3, .L21
 128 0004 1880     		strh	r0, [r3]	@ movhi
  57:Src/motor.c   **** 	if( ABS(duty_l) > MOT_DUTY_MAX ) {
 129              		.loc 1 57 2 is_stmt 1 view .LVU17
 130              		.loc 1 57 6 is_stmt 0 view .LVU18
 131 0006 0028     		cmp	r0, #0
 132 0008 B8BF     		it	lt
 133 000a 4042     		rsblt	r0, r0, #0
 134              	.LVL5:
 135              		.loc 1 57 6 view .LVU19
 136 000c 80B2     		uxth	r0, r0
 137              		.loc 1 57 4 view .LVU20
 138 000e 9628     		cmp	r0, #150
 139 0010 1BD8     		bhi	.L18
  58:Src/motor.c   **** 		pulse_l = (uint32_t)(PCLK / PWMFREQ * MOT_DUTY_MAX / 1000) - 1;
  59:Src/motor.c   **** 	} else if( ABS(duty_l) < MOT_DUTY_MIN ) {
 140              		.loc 1 59 9 is_stmt 1 view .LVU21
 141              		.loc 1 59 11 is_stmt 0 view .LVU22
 142 0012 1D28     		cmp	r0, #29
 143 0014 29D8     		bhi	.L11
  60:Src/motor.c   **** 		pulse_l = (uint32_t)(PCLK / PWMFREQ * MOT_DUTY_MIN / 1000) - 1;
 144              		.loc 1 60 3 is_stmt 1 view .LVU23
 145              		.loc 1 60 24 is_stmt 0 view .LVU24
 146 0016 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 147              	.LVL6:
 148              		.loc 1 60 29 view .LVU25
 149 001a 4009     		lsrs	r0, r0, #5
 150 001c 264B     		ldr	r3, .L21+4
 151 001e A3FB0030 		umull	r3, r0, r3, r0
 152 0022 C009     		lsrs	r0, r0, #7
 153              		.loc 1 60 39 view .LVU26
 154 0024 C0EB0013 		rsb	r3, r0, r0, lsl #4
 155 0028 5B00     		lsls	r3, r3, #1
 156              		.loc 1 60 13 view .LVU27
 157 002a 2448     		ldr	r0, .L21+8
 158 002c A0FB0323 		umull	r2, r3, r0, r3
 159 0030 9B09     		lsrs	r3, r3, #6
 160              		.loc 1 60 11 view .LVU28
 161 0032 013B     		subs	r3, r3, #1
 162              	.LVL7:
 163              	.L10:
  61:Src/motor.c   **** 	} else {
  62:Src/motor.c   **** 		pulse_l = (uint32_t)(PCLK / PWMFREQ * ABS(duty_l) / 1000) - 1;
  63:Src/motor.c   **** 	}
  64:Src/motor.c   **** 
  65:Src/motor.c   **** 	if( duty_l > 0 ) {
 164              		.loc 1 65 2 is_stmt 1 view .LVU29
 165              		.loc 1 65 13 is_stmt 0 view .LVU30
 166 0034 1F4A     		ldr	r2, .L21
 167 0036 B2F90020 		ldrsh	r2, [r2]
 168              		.loc 1 65 4 view .LVU31
ARM GAS  C:\Temp\ccxpPsMn.s 			page 5


 169 003a 002A     		cmp	r2, #0
 170 003c 2BDD     		ble	.L14
  66:Src/motor.c   **** 		MOT_SET_COMPARE_L_FORWARD( pulse_l );
 171              		.loc 1 66 3 is_stmt 1 view .LVU32
 172 003e 204A     		ldr	r2, .L21+12
 173 0040 1268     		ldr	r2, [r2]
 174 0042 9363     		str	r3, [r2, #56]
  67:Src/motor.c   **** 		MOT_SET_COMPARE_L_REVERSE( 0 );
 175              		.loc 1 67 3 view .LVU33
 176 0044 0023     		movs	r3, #0
 177              	.LVL8:
 178              		.loc 1 67 3 is_stmt 0 view .LVU34
 179 0046 5363     		str	r3, [r2, #52]
 180              	.LVL9:
 181              	.L8:
  68:Src/motor.c   **** 	} else if( duty_l < 0 ) {
  69:Src/motor.c   **** 		MOT_SET_COMPARE_L_FORWARD( 0 );
  70:Src/motor.c   **** 		MOT_SET_COMPARE_L_REVERSE( pulse_l );
  71:Src/motor.c   **** 	} else {
  72:Src/motor.c   **** 		MOT_SET_COMPARE_L_FORWARD( 0 );
  73:Src/motor.c   **** 		MOT_SET_COMPARE_L_REVERSE( 0 );
  74:Src/motor.c   **** 	}
  75:Src/motor.c   **** }
 182              		.loc 1 75 1 view .LVU35
 183 0048 08BD     		pop	{r3, pc}
 184              	.LVL10:
 185              	.L18:
  58:Src/motor.c   **** 	} else if( ABS(duty_l) < MOT_DUTY_MIN ) {
 186              		.loc 1 58 3 is_stmt 1 view .LVU36
  58:Src/motor.c   **** 	} else if( ABS(duty_l) < MOT_DUTY_MIN ) {
 187              		.loc 1 58 24 is_stmt 0 view .LVU37
 188 004a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 189              	.LVL11:
  58:Src/motor.c   **** 	} else if( ABS(duty_l) < MOT_DUTY_MIN ) {
 190              		.loc 1 58 29 view .LVU38
 191 004e 4009     		lsrs	r0, r0, #5
 192 0050 194B     		ldr	r3, .L21+4
 193 0052 A3FB0023 		umull	r2, r3, r3, r0
 194 0056 D809     		lsrs	r0, r3, #7
  58:Src/motor.c   **** 	} else if( ABS(duty_l) < MOT_DUTY_MIN ) {
 195              		.loc 1 58 39 view .LVU39
 196 0058 9623     		movs	r3, #150
 197 005a 03FB00F3 		mul	r3, r3, r0
  58:Src/motor.c   **** 	} else if( ABS(duty_l) < MOT_DUTY_MIN ) {
 198              		.loc 1 58 13 view .LVU40
 199 005e 174A     		ldr	r2, .L21+8
 200 0060 A2FB0323 		umull	r2, r3, r2, r3
 201 0064 9B09     		lsrs	r3, r3, #6
  58:Src/motor.c   **** 	} else if( ABS(duty_l) < MOT_DUTY_MIN ) {
 202              		.loc 1 58 11 view .LVU41
 203 0066 013B     		subs	r3, r3, #1
 204              	.LVL12:
  58:Src/motor.c   **** 	} else if( ABS(duty_l) < MOT_DUTY_MIN ) {
 205              		.loc 1 58 11 view .LVU42
 206 0068 E4E7     		b	.L10
 207              	.LVL13:
 208              	.L11:
ARM GAS  C:\Temp\ccxpPsMn.s 			page 6


  62:Src/motor.c   **** 	}
 209              		.loc 1 62 3 is_stmt 1 view .LVU43
  62:Src/motor.c   **** 	}
 210              		.loc 1 62 24 is_stmt 0 view .LVU44
 211 006a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 212              	.LVL14:
  62:Src/motor.c   **** 	}
 213              		.loc 1 62 29 view .LVU45
 214 006e 4009     		lsrs	r0, r0, #5
 215 0070 114B     		ldr	r3, .L21+4
 216 0072 A3FB0023 		umull	r2, r3, r3, r0
 217 0076 D809     		lsrs	r0, r3, #7
  62:Src/motor.c   **** 	}
 218              		.loc 1 62 41 view .LVU46
 219 0078 0E4B     		ldr	r3, .L21
 220 007a B3F90030 		ldrsh	r3, [r3]
 221 007e 002B     		cmp	r3, #0
 222 0080 07DB     		blt	.L19
 223              	.L13:
  62:Src/motor.c   **** 	}
 224              		.loc 1 62 39 discriminator 4 view .LVU47
 225 0082 03FB00F3 		mul	r3, r3, r0
  62:Src/motor.c   **** 	}
 226              		.loc 1 62 13 discriminator 4 view .LVU48
 227 0086 0D4A     		ldr	r2, .L21+8
 228 0088 A2FB0323 		umull	r2, r3, r2, r3
 229 008c 9B09     		lsrs	r3, r3, #6
  62:Src/motor.c   **** 	}
 230              		.loc 1 62 11 discriminator 4 view .LVU49
 231 008e 013B     		subs	r3, r3, #1
 232              	.LVL15:
  62:Src/motor.c   **** 	}
 233              		.loc 1 62 11 discriminator 4 view .LVU50
 234 0090 D0E7     		b	.L10
 235              	.LVL16:
 236              	.L19:
  62:Src/motor.c   **** 	}
 237              		.loc 1 62 41 discriminator 1 view .LVU51
 238 0092 5B42     		rsbs	r3, r3, #0
 239 0094 F5E7     		b	.L13
 240              	.LVL17:
 241              	.L14:
  68:Src/motor.c   **** 	} else if( duty_l < 0 ) {
 242              		.loc 1 68 9 is_stmt 1 view .LVU52
  68:Src/motor.c   **** 	} else if( duty_l < 0 ) {
 243              		.loc 1 68 11 is_stmt 0 view .LVU53
 244 0096 002A     		cmp	r2, #0
 245 0098 05DB     		blt	.L20
  72:Src/motor.c   **** 		MOT_SET_COMPARE_L_REVERSE( 0 );
 246              		.loc 1 72 3 is_stmt 1 view .LVU54
 247 009a 094B     		ldr	r3, .L21+12
 248              	.LVL18:
  72:Src/motor.c   **** 		MOT_SET_COMPARE_L_REVERSE( 0 );
 249              		.loc 1 72 3 is_stmt 0 view .LVU55
 250 009c 1B68     		ldr	r3, [r3]
 251 009e 0022     		movs	r2, #0
 252 00a0 9A63     		str	r2, [r3, #56]
ARM GAS  C:\Temp\ccxpPsMn.s 			page 7


  73:Src/motor.c   **** 	}
 253              		.loc 1 73 3 is_stmt 1 view .LVU56
 254 00a2 5A63     		str	r2, [r3, #52]
 255              		.loc 1 75 1 is_stmt 0 view .LVU57
 256 00a4 D0E7     		b	.L8
 257              	.LVL19:
 258              	.L20:
  69:Src/motor.c   **** 		MOT_SET_COMPARE_L_REVERSE( pulse_l );
 259              		.loc 1 69 3 is_stmt 1 view .LVU58
 260 00a6 064A     		ldr	r2, .L21+12
 261 00a8 1268     		ldr	r2, [r2]
 262 00aa 0021     		movs	r1, #0
 263 00ac 9163     		str	r1, [r2, #56]
  70:Src/motor.c   **** 	} else {
 264              		.loc 1 70 3 view .LVU59
 265 00ae 5363     		str	r3, [r2, #52]
 266 00b0 CAE7     		b	.L8
 267              	.L22:
 268 00b2 00BF     		.align	2
 269              	.L21:
 270 00b4 00000000 		.word	.LANCHOR0
 271 00b8 C55A7C0A 		.word	175921861
 272 00bc D34D6210 		.word	274877907
 273 00c0 00000000 		.word	htim4
 274              		.cfi_endproc
 275              	.LFE135:
 277              		.section	.text.set_duty_r,"ax",%progbits
 278              		.align	1
 279              		.global	set_duty_r
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	set_duty_r:
 286              	.LVL20:
 287              	.LFB136:
  76:Src/motor.c   **** 
  77:Src/motor.c   **** /* ---------------------------------------------------------------
  78:Src/motor.c   **** 	右モータを指定のDuty（0～1000）で回転させる関数
  79:Src/motor.c   **** --------------------------------------------------------------- */
  80:Src/motor.c   **** void set_duty_r( int16_t duty_r_tmp )
  81:Src/motor.c   **** {
 288              		.loc 1 81 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		.loc 1 81 1 is_stmt 0 view .LVU61
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI2:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
  82:Src/motor.c   **** 	uint32_t	pulse_r;
 298              		.loc 1 82 2 is_stmt 1 view .LVU62
  83:Src/motor.c   **** 	duty_r = duty_r_tmp;
 299              		.loc 1 83 2 view .LVU63
 300              		.loc 1 83 9 is_stmt 0 view .LVU64
ARM GAS  C:\Temp\ccxpPsMn.s 			page 8


 301 0002 2C4B     		ldr	r3, .L36
 302 0004 1880     		strh	r0, [r3]	@ movhi
  84:Src/motor.c   **** 	if( ABS(duty_r) > MOT_DUTY_MAX ) {
 303              		.loc 1 84 2 is_stmt 1 view .LVU65
 304              		.loc 1 84 6 is_stmt 0 view .LVU66
 305 0006 0028     		cmp	r0, #0
 306 0008 B8BF     		it	lt
 307 000a 4042     		rsblt	r0, r0, #0
 308              	.LVL21:
 309              		.loc 1 84 6 view .LVU67
 310 000c 80B2     		uxth	r0, r0
 311              		.loc 1 84 4 view .LVU68
 312 000e 9628     		cmp	r0, #150
 313 0010 1BD8     		bhi	.L33
  85:Src/motor.c   **** 		pulse_r = (uint32_t)(PCLK / PWMFREQ * MOT_DUTY_MAX / 1000) - 1;
  86:Src/motor.c   **** 	} else if( ABS(duty_r) < MOT_DUTY_MIN ) {
 314              		.loc 1 86 9 is_stmt 1 view .LVU69
 315              		.loc 1 86 11 is_stmt 0 view .LVU70
 316 0012 1D28     		cmp	r0, #29
 317 0014 29D8     		bhi	.L26
  87:Src/motor.c   **** 		pulse_r = (uint32_t)(PCLK / PWMFREQ * MOT_DUTY_MIN / 1000) - 1;
 318              		.loc 1 87 3 is_stmt 1 view .LVU71
 319              		.loc 1 87 24 is_stmt 0 view .LVU72
 320 0016 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 321              	.LVL22:
 322              		.loc 1 87 29 view .LVU73
 323 001a 4009     		lsrs	r0, r0, #5
 324 001c 264B     		ldr	r3, .L36+4
 325 001e A3FB0030 		umull	r3, r0, r3, r0
 326 0022 C009     		lsrs	r0, r0, #7
 327              		.loc 1 87 39 view .LVU74
 328 0024 C0EB0013 		rsb	r3, r0, r0, lsl #4
 329 0028 5B00     		lsls	r3, r3, #1
 330              		.loc 1 87 13 view .LVU75
 331 002a 2448     		ldr	r0, .L36+8
 332 002c A0FB0323 		umull	r2, r3, r0, r3
 333 0030 9B09     		lsrs	r3, r3, #6
 334              		.loc 1 87 11 view .LVU76
 335 0032 013B     		subs	r3, r3, #1
 336              	.LVL23:
 337              	.L25:
  88:Src/motor.c   **** 	} else {
  89:Src/motor.c   **** 		pulse_r = (uint32_t)(PCLK / PWMFREQ * ABS(duty_r) / 1000) - 1;
  90:Src/motor.c   **** 	}
  91:Src/motor.c   **** 
  92:Src/motor.c   **** 	if( duty_r > 0 ) {
 338              		.loc 1 92 2 is_stmt 1 view .LVU77
 339              		.loc 1 92 13 is_stmt 0 view .LVU78
 340 0034 1F4A     		ldr	r2, .L36
 341 0036 B2F90020 		ldrsh	r2, [r2]
 342              		.loc 1 92 4 view .LVU79
 343 003a 002A     		cmp	r2, #0
 344 003c 2BDD     		ble	.L29
  93:Src/motor.c   **** 		MOT_SET_COMPARE_R_FORWARD( pulse_r );
 345              		.loc 1 93 3 is_stmt 1 view .LVU80
 346 003e 204A     		ldr	r2, .L36+12
 347 0040 1268     		ldr	r2, [r2]
ARM GAS  C:\Temp\ccxpPsMn.s 			page 9


 348 0042 D363     		str	r3, [r2, #60]
  94:Src/motor.c   **** 		MOT_SET_COMPARE_R_REVERSE( 0 );
 349              		.loc 1 94 3 view .LVU81
 350 0044 0023     		movs	r3, #0
 351              	.LVL24:
 352              		.loc 1 94 3 is_stmt 0 view .LVU82
 353 0046 1364     		str	r3, [r2, #64]
 354              	.LVL25:
 355              	.L23:
  95:Src/motor.c   **** 	} else if( duty_r < 0 ) {
  96:Src/motor.c   **** 		MOT_SET_COMPARE_R_FORWARD( 0 );
  97:Src/motor.c   **** 		MOT_SET_COMPARE_R_REVERSE( pulse_r );
  98:Src/motor.c   **** 	} else {
  99:Src/motor.c   **** 		MOT_SET_COMPARE_R_FORWARD( 0 );
 100:Src/motor.c   **** 		MOT_SET_COMPARE_R_REVERSE( 0 );
 101:Src/motor.c   **** 	}
 102:Src/motor.c   **** }
 356              		.loc 1 102 1 view .LVU83
 357 0048 08BD     		pop	{r3, pc}
 358              	.LVL26:
 359              	.L33:
  85:Src/motor.c   **** 	} else if( ABS(duty_r) < MOT_DUTY_MIN ) {
 360              		.loc 1 85 3 is_stmt 1 view .LVU84
  85:Src/motor.c   **** 	} else if( ABS(duty_r) < MOT_DUTY_MIN ) {
 361              		.loc 1 85 24 is_stmt 0 view .LVU85
 362 004a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 363              	.LVL27:
  85:Src/motor.c   **** 	} else if( ABS(duty_r) < MOT_DUTY_MIN ) {
 364              		.loc 1 85 29 view .LVU86
 365 004e 4009     		lsrs	r0, r0, #5
 366 0050 194B     		ldr	r3, .L36+4
 367 0052 A3FB0023 		umull	r2, r3, r3, r0
 368 0056 D809     		lsrs	r0, r3, #7
  85:Src/motor.c   **** 	} else if( ABS(duty_r) < MOT_DUTY_MIN ) {
 369              		.loc 1 85 39 view .LVU87
 370 0058 9623     		movs	r3, #150
 371 005a 03FB00F3 		mul	r3, r3, r0
  85:Src/motor.c   **** 	} else if( ABS(duty_r) < MOT_DUTY_MIN ) {
 372              		.loc 1 85 13 view .LVU88
 373 005e 174A     		ldr	r2, .L36+8
 374 0060 A2FB0323 		umull	r2, r3, r2, r3
 375 0064 9B09     		lsrs	r3, r3, #6
  85:Src/motor.c   **** 	} else if( ABS(duty_r) < MOT_DUTY_MIN ) {
 376              		.loc 1 85 11 view .LVU89
 377 0066 013B     		subs	r3, r3, #1
 378              	.LVL28:
  85:Src/motor.c   **** 	} else if( ABS(duty_r) < MOT_DUTY_MIN ) {
 379              		.loc 1 85 11 view .LVU90
 380 0068 E4E7     		b	.L25
 381              	.LVL29:
 382              	.L26:
  89:Src/motor.c   **** 	}
 383              		.loc 1 89 3 is_stmt 1 view .LVU91
  89:Src/motor.c   **** 	}
 384              		.loc 1 89 24 is_stmt 0 view .LVU92
 385 006a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 386              	.LVL30:
ARM GAS  C:\Temp\ccxpPsMn.s 			page 10


  89:Src/motor.c   **** 	}
 387              		.loc 1 89 29 view .LVU93
 388 006e 4009     		lsrs	r0, r0, #5
 389 0070 114B     		ldr	r3, .L36+4
 390 0072 A3FB0023 		umull	r2, r3, r3, r0
 391 0076 D809     		lsrs	r0, r3, #7
  89:Src/motor.c   **** 	}
 392              		.loc 1 89 41 view .LVU94
 393 0078 0E4B     		ldr	r3, .L36
 394 007a B3F90030 		ldrsh	r3, [r3]
 395 007e 002B     		cmp	r3, #0
 396 0080 07DB     		blt	.L34
 397              	.L28:
  89:Src/motor.c   **** 	}
 398              		.loc 1 89 39 discriminator 4 view .LVU95
 399 0082 03FB00F3 		mul	r3, r3, r0
  89:Src/motor.c   **** 	}
 400              		.loc 1 89 13 discriminator 4 view .LVU96
 401 0086 0D4A     		ldr	r2, .L36+8
 402 0088 A2FB0323 		umull	r2, r3, r2, r3
 403 008c 9B09     		lsrs	r3, r3, #6
  89:Src/motor.c   **** 	}
 404              		.loc 1 89 11 discriminator 4 view .LVU97
 405 008e 013B     		subs	r3, r3, #1
 406              	.LVL31:
  89:Src/motor.c   **** 	}
 407              		.loc 1 89 11 discriminator 4 view .LVU98
 408 0090 D0E7     		b	.L25
 409              	.LVL32:
 410              	.L34:
  89:Src/motor.c   **** 	}
 411              		.loc 1 89 41 discriminator 1 view .LVU99
 412 0092 5B42     		rsbs	r3, r3, #0
 413 0094 F5E7     		b	.L28
 414              	.LVL33:
 415              	.L29:
  95:Src/motor.c   **** 	} else if( duty_r < 0 ) {
 416              		.loc 1 95 9 is_stmt 1 view .LVU100
  95:Src/motor.c   **** 	} else if( duty_r < 0 ) {
 417              		.loc 1 95 11 is_stmt 0 view .LVU101
 418 0096 002A     		cmp	r2, #0
 419 0098 05DB     		blt	.L35
  99:Src/motor.c   **** 		MOT_SET_COMPARE_R_REVERSE( 0 );
 420              		.loc 1 99 3 is_stmt 1 view .LVU102
 421 009a 094B     		ldr	r3, .L36+12
 422              	.LVL34:
  99:Src/motor.c   **** 		MOT_SET_COMPARE_R_REVERSE( 0 );
 423              		.loc 1 99 3 is_stmt 0 view .LVU103
 424 009c 1B68     		ldr	r3, [r3]
 425 009e 0022     		movs	r2, #0
 426 00a0 DA63     		str	r2, [r3, #60]
 100:Src/motor.c   **** 	}
 427              		.loc 1 100 3 is_stmt 1 view .LVU104
 428 00a2 1A64     		str	r2, [r3, #64]
 429              		.loc 1 102 1 is_stmt 0 view .LVU105
 430 00a4 D0E7     		b	.L23
 431              	.LVL35:
ARM GAS  C:\Temp\ccxpPsMn.s 			page 11


 432              	.L35:
  96:Src/motor.c   **** 		MOT_SET_COMPARE_R_REVERSE( pulse_r );
 433              		.loc 1 96 3 is_stmt 1 view .LVU106
 434 00a6 064A     		ldr	r2, .L36+12
 435 00a8 1268     		ldr	r2, [r2]
 436 00aa 0021     		movs	r1, #0
 437 00ac D163     		str	r1, [r2, #60]
  97:Src/motor.c   **** 	} else {
 438              		.loc 1 97 3 view .LVU107
 439 00ae 1364     		str	r3, [r2, #64]
 440 00b0 CAE7     		b	.L23
 441              	.L37:
 442 00b2 00BF     		.align	2
 443              	.L36:
 444 00b4 00000000 		.word	.LANCHOR1
 445 00b8 C55A7C0A 		.word	175921861
 446 00bc D34D6210 		.word	274877907
 447 00c0 00000000 		.word	htim4
 448              		.cfi_endproc
 449              	.LFE136:
 451              		.section	.text.get_duty_r,"ax",%progbits
 452              		.align	1
 453              		.global	get_duty_r
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu fpv4-sp-d16
 459              	get_duty_r:
 460              	.LFB137:
 103:Src/motor.c   **** 
 104:Src/motor.c   **** //機能	: 右モータの変調率を取得する
 105:Src/motor.c   **** //引数	: なし
 106:Src/motor.c   **** //返り値	: 右モータの変調率
 107:Src/motor.c   **** int16_t get_duty_r ( void )
 108:Src/motor.c   **** {
 461              		.loc 1 108 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 109:Src/motor.c   **** 	return duty_r;
 466              		.loc 1 109 2 view .LVU109
 110:Src/motor.c   **** }
 467              		.loc 1 110 1 is_stmt 0 view .LVU110
 468 0000 014B     		ldr	r3, .L39
 469 0002 B3F90000 		ldrsh	r0, [r3]
 470 0006 7047     		bx	lr
 471              	.L40:
 472              		.align	2
 473              	.L39:
 474 0008 00000000 		.word	.LANCHOR1
 475              		.cfi_endproc
 476              	.LFE137:
 478              		.section	.text.get_duty_l,"ax",%progbits
 479              		.align	1
 480              		.global	get_duty_l
 481              		.syntax unified
ARM GAS  C:\Temp\ccxpPsMn.s 			page 12


 482              		.thumb
 483              		.thumb_func
 484              		.fpu fpv4-sp-d16
 486              	get_duty_l:
 487              	.LFB138:
 111:Src/motor.c   **** 
 112:Src/motor.c   **** //機能	: 左モータの変調率を取得する
 113:Src/motor.c   **** //引数	: なし
 114:Src/motor.c   **** //返り値	: 左モータの変調率
 115:Src/motor.c   **** int16_t get_duty_l ( void )
 116:Src/motor.c   **** {
 488              		.loc 1 116 1 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 117:Src/motor.c   **** 	return duty_l;
 493              		.loc 1 117 2 view .LVU112
 118:Src/motor.c   **** }...
 494              		.loc 1 118 1 is_stmt 0 view .LVU113
 495 0000 014B     		ldr	r3, .L42
 496 0002 B3F90000 		ldrsh	r0, [r3]
 497 0006 7047     		bx	lr
 498              	.L43:
 499              		.align	2
 500              	.L42:
 501 0008 00000000 		.word	.LANCHOR0
 502              		.cfi_endproc
 503              	.LFE138:
 505              		.section	.bss.duty_l,"aw",%nobits
 506              		.align	1
 507              		.set	.LANCHOR0,. + 0
 510              	duty_l:
 511 0000 0000     		.space	2
 512              		.section	.bss.duty_r,"aw",%nobits
 513              		.align	1
 514              		.set	.LANCHOR1,. + 0
 517              	duty_r:
 518 0000 0000     		.space	2
 519              		.text
 520              	.Letext0:
 521              		.file 2 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\machine\\_default_t
 522              		.file 3 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 523              		.file 4 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 524              		.file 5 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\st
 525              		.file 6 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 526              		.file 7 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 527              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 528              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 529              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 530              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 531              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 532              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 533              		.file 14 "Inc/tim.h"
 534              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  C:\Temp\ccxpPsMn.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 motor.c
  C:\Temp\ccxpPsMn.s:18     .text.Motor_Initialize:00000000 $t
  C:\Temp\ccxpPsMn.s:26     .text.Motor_Initialize:00000000 Motor_Initialize
  C:\Temp\ccxpPsMn.s:64     .text.Motor_Initialize:00000028 $d
  C:\Temp\ccxpPsMn.s:69     .text.Motor_StopPWM:00000000 $t
  C:\Temp\ccxpPsMn.s:76     .text.Motor_StopPWM:00000000 Motor_StopPWM
  C:\Temp\ccxpPsMn.s:99     .text.Motor_StopPWM:00000014 $d
  C:\Temp\ccxpPsMn.s:104    .text.set_duty_l:00000000 $t
  C:\Temp\ccxpPsMn.s:111    .text.set_duty_l:00000000 set_duty_l
  C:\Temp\ccxpPsMn.s:270    .text.set_duty_l:000000b4 $d
  C:\Temp\ccxpPsMn.s:278    .text.set_duty_r:00000000 $t
  C:\Temp\ccxpPsMn.s:285    .text.set_duty_r:00000000 set_duty_r
  C:\Temp\ccxpPsMn.s:444    .text.set_duty_r:000000b4 $d
  C:\Temp\ccxpPsMn.s:452    .text.get_duty_r:00000000 $t
  C:\Temp\ccxpPsMn.s:459    .text.get_duty_r:00000000 get_duty_r
  C:\Temp\ccxpPsMn.s:474    .text.get_duty_r:00000008 $d
  C:\Temp\ccxpPsMn.s:479    .text.get_duty_l:00000000 $t
  C:\Temp\ccxpPsMn.s:486    .text.get_duty_l:00000000 get_duty_l
  C:\Temp\ccxpPsMn.s:501    .text.get_duty_l:00000008 $d
  C:\Temp\ccxpPsMn.s:506    .bss.duty_l:00000000 $d
  C:\Temp\ccxpPsMn.s:510    .bss.duty_l:00000000 duty_l
  C:\Temp\ccxpPsMn.s:513    .bss.duty_r:00000000 $d
  C:\Temp\ccxpPsMn.s:517    .bss.duty_r:00000000 duty_r

UNDEFINED SYMBOLS
HAL_TIM_PWM_Start
htim4
HAL_RCC_GetPCLK2Freq
