ARM GAS  C:\Temp\ccKw3kgB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"exvol.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.set_mode_ctrl,"ax",%progbits
  18              		.align	1
  19              		.global	set_mode_ctrl
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	set_mode_ctrl:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 1 "Src/exvol.c"
   1:Src/exvol.c   **** //軌道制御、軌道補正から得た印加電圧から、
   2:Src/exvol.c   **** //モータに出力する印加電圧を決定する。
   3:Src/exvol.c   **** 
   4:Src/exvol.c   **** #include <stdio.h>
   5:Src/exvol.c   **** #include "main.h"
   6:Src/exvol.c   **** #include "exvol.h"
   7:Src/exvol.c   **** #include "motor.h"
   8:Src/exvol.c   **** #include "control.h"
   9:Src/exvol.c   **** #include "adjust.h"
  10:Src/exvol.c   **** #include "battery.h"
  11:Src/exvol.c   **** 
  12:Src/exvol.c   **** 
  13:Src/exvol.c   **** static ctrl_mode_num ctrl_mode = trace;
  14:Src/exvol.c   **** static float target_vol_sum = 0;
  15:Src/exvol.c   **** static float target_vol_diff = 0;
  16:Src/exvol.c   **** static float target_vol_r = 0;
  17:Src/exvol.c   **** static float target_vol_l = 0;
  18:Src/exvol.c   **** static int16_t target_duty_r = 0;
  19:Src/exvol.c   **** static int16_t target_duty_l = 0;
  20:Src/exvol.c   **** 
  21:Src/exvol.c   **** //機能	: モータの1msタスクまとめ
  22:Src/exvol.c   **** //引数	: なし
  23:Src/exvol.c   **** //返り値	: なし
  24:Src/exvol.c   **** //備考	: 1msタスク
  25:Src/exvol.c   **** void motor_1ms ( void )
  26:Src/exvol.c   **** {
  27:Src/exvol.c   **** 	set_motor_vol();		//印加電圧の和、差を制御モードに従い決定
  28:Src/exvol.c   **** 	clr_operate_history();	//各制御の操作履歴クリア
  29:Src/exvol.c   **** 	calc_motor_vol();		//印加電圧の和、差から各モータの印加電圧を決定する。
ARM GAS  C:\Temp\ccKw3kgB.s 			page 2


  30:Src/exvol.c   **** 	calc_vol2duty();		//印加電圧を変調率に変換
  31:Src/exvol.c   **** 	motor_duty_adjust();	//低変調率を避ける調整
  32:Src/exvol.c   **** 	set_motor_duty();		//モータに電圧を印加
  33:Src/exvol.c   **** 	clr_operate_history();	//対象のモード以外の操作履歴をクリア
  34:Src/exvol.c   **** }
  35:Src/exvol.c   **** 
  36:Src/exvol.c   **** 
  37:Src/exvol.c   **** //機能 	:制御モードを設定
  38:Src/exvol.c   **** //引数 	:なし
  39:Src/exvol.c   **** //返り値:なし
  40:Src/exvol.c   **** void set_mode_ctrl(ctrl_mode_num mode_num)
  41:Src/exvol.c   **** {
  30              		.loc 1 41 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  42:Src/exvol.c   **** 	ctrl_mode = mode_num;
  35              		.loc 1 42 2 view .LVU1
  36              		.loc 1 42 12 is_stmt 0 view .LVU2
  37 0000 014B     		ldr	r3, .L2
  38 0002 1870     		strb	r0, [r3]
  43:Src/exvol.c   **** }
  39              		.loc 1 43 1 view .LVU3
  40 0004 7047     		bx	lr
  41              	.L3:
  42 0006 00BF     		.align	2
  43              	.L2:
  44 0008 00000000 		.word	.LANCHOR0
  45              		.cfi_endproc
  46              	.LFE134:
  48              		.section	.text.set_motor_vol_trace,"ax",%progbits
  49              		.align	1
  50              		.global	set_motor_vol_trace
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	set_motor_vol_trace:
  57              	.LFB136:
  44:Src/exvol.c   **** 
  45:Src/exvol.c   **** //機能 	:制御モード番号に従い、電圧を印可
  46:Src/exvol.c   **** //引数 	:なし
  47:Src/exvol.c   **** //返り値:なし
  48:Src/exvol.c   **** void set_motor_vol(void)
  49:Src/exvol.c   **** {
  50:Src/exvol.c   **** 	switch (ctrl_mode)
  51:Src/exvol.c   **** 	{
  52:Src/exvol.c   **** 	case trace:
  53:Src/exvol.c   **** 		set_motor_vol_trace();
  54:Src/exvol.c   **** 		break;
  55:Src/exvol.c   **** 	
  56:Src/exvol.c   **** 	case front_wall:
  57:Src/exvol.c   **** 		set_motor_vol_front_wall();
  58:Src/exvol.c   **** 		break;
  59:Src/exvol.c   **** 	
  60:Src/exvol.c   **** 	case side_wall:
ARM GAS  C:\Temp\ccKw3kgB.s 			page 3


  61:Src/exvol.c   **** 		set_motor_vol_side_wall();
  62:Src/exvol.c   **** 		break;
  63:Src/exvol.c   **** 	
  64:Src/exvol.c   **** 	default:
  65:Src/exvol.c   **** 		clr_motor_vol();
  66:Src/exvol.c   **** 
  67:Src/exvol.c   **** 	}
  68:Src/exvol.c   **** }
  69:Src/exvol.c   **** 
  70:Src/exvol.c   **** //機能 	:軌跡制御時の印可電圧出力
  71:Src/exvol.c   **** //引数 	:なし
  72:Src/exvol.c   **** //返り値:なし
  73:Src/exvol.c   **** void set_motor_vol_trace(void)
  74:Src/exvol.c   **** {
  58              		.loc 1 74 1 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 08B5     		push	{r3, lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 3, -8
  66              		.cfi_offset 14, -4
  75:Src/exvol.c   **** 	target_vol_sum = get_target_vol_sum_ctrl();
  67              		.loc 1 75 2 view .LVU5
  68              		.loc 1 75 19 is_stmt 0 view .LVU6
  69 0002 FFF7FEFF 		bl	get_target_vol_sum_ctrl
  70              	.LVL1:
  71              		.loc 1 75 17 view .LVU7
  72 0006 044B     		ldr	r3, .L6
  73 0008 83ED000A 		vstr.32	s0, [r3]
  76:Src/exvol.c   **** 	target_vol_diff = get_target_vol_diff_ctrl();
  74              		.loc 1 76 2 is_stmt 1 view .LVU8
  75              		.loc 1 76 20 is_stmt 0 view .LVU9
  76 000c FFF7FEFF 		bl	get_target_vol_diff_ctrl
  77              	.LVL2:
  78              		.loc 1 76 18 view .LVU10
  79 0010 024B     		ldr	r3, .L6+4
  80 0012 83ED000A 		vstr.32	s0, [r3]
  77:Src/exvol.c   **** }
  81              		.loc 1 77 1 view .LVU11
  82 0016 08BD     		pop	{r3, pc}
  83              	.L7:
  84              		.align	2
  85              	.L6:
  86 0018 00000000 		.word	.LANCHOR1
  87 001c 00000000 		.word	.LANCHOR2
  88              		.cfi_endproc
  89              	.LFE136:
  91              		.section	.text.set_motor_vol_front_wall,"ax",%progbits
  92              		.align	1
  93              		.global	set_motor_vol_front_wall
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	set_motor_vol_front_wall:
ARM GAS  C:\Temp\ccKw3kgB.s 			page 4


 100              	.LFB137:
  78:Src/exvol.c   **** 
  79:Src/exvol.c   **** //機能 	:前壁制御時の印可電圧出力
  80:Src/exvol.c   **** //引数 	:なし
  81:Src/exvol.c   **** //返り値:なし
  82:Src/exvol.c   **** void set_motor_vol_front_wall(void)
  83:Src/exvol.c   **** {
 101              		.loc 1 83 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105 0000 08B5     		push	{r3, lr}
 106              	.LCFI1:
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 3, -8
 109              		.cfi_offset 14, -4
  84:Src/exvol.c   **** 	target_vol_sum = get_target_vol_sum_frontwall();
 110              		.loc 1 84 2 view .LVU13
 111              		.loc 1 84 19 is_stmt 0 view .LVU14
 112 0002 FFF7FEFF 		bl	get_target_vol_sum_frontwall
 113              	.LVL3:
 114              		.loc 1 84 17 view .LVU15
 115 0006 044B     		ldr	r3, .L10
 116 0008 83ED000A 		vstr.32	s0, [r3]
  85:Src/exvol.c   **** 	target_vol_diff = get_target_vol_diff_frontwall();
 117              		.loc 1 85 2 is_stmt 1 view .LVU16
 118              		.loc 1 85 20 is_stmt 0 view .LVU17
 119 000c FFF7FEFF 		bl	get_target_vol_diff_frontwall
 120              	.LVL4:
 121              		.loc 1 85 18 view .LVU18
 122 0010 024B     		ldr	r3, .L10+4
 123 0012 83ED000A 		vstr.32	s0, [r3]
  86:Src/exvol.c   **** }
 124              		.loc 1 86 1 view .LVU19
 125 0016 08BD     		pop	{r3, pc}
 126              	.L11:
 127              		.align	2
 128              	.L10:
 129 0018 00000000 		.word	.LANCHOR1
 130 001c 00000000 		.word	.LANCHOR2
 131              		.cfi_endproc
 132              	.LFE137:
 134              		.section	.text.set_motor_vol_side_wall,"ax",%progbits
 135              		.align	1
 136              		.global	set_motor_vol_side_wall
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	set_motor_vol_side_wall:
 143              	.LFB138:
  87:Src/exvol.c   **** 
  88:Src/exvol.c   **** //機能 	:横壁制御時の印可電圧出力(差のみ)
  89:Src/exvol.c   **** //引数 	:なし
  90:Src/exvol.c   **** //返り値:なし
  91:Src/exvol.c   **** void set_motor_vol_side_wall(void)
  92:Src/exvol.c   **** {
ARM GAS  C:\Temp\ccKw3kgB.s 			page 5


 144              		.loc 1 92 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148 0000 08B5     		push	{r3, lr}
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 3, -8
 152              		.cfi_offset 14, -4
  93:Src/exvol.c   **** 	switch(get_side_wall_ctrl_mode()){
 153              		.loc 1 93 2 view .LVU21
 154              		.loc 1 93 9 is_stmt 0 view .LVU22
 155 0002 FFF7FEFF 		bl	get_side_wall_ctrl_mode
 156              	.LVL5:
 157 0006 0328     		cmp	r0, #3
 158 0008 0DD8     		bhi	.L12
 159 000a DFE800F0 		tbb	[pc, r0]
 160              	.L15:
 161 000e 02       		.byte	(.L18-.L15)/2
 162 000f 0D       		.byte	(.L17-.L15)/2
 163 0010 18       		.byte	(.L16-.L15)/2
 164 0011 23       		.byte	(.L14-.L15)/2
 165              		.p2align 1
 166              	.L18:
  94:Src/exvol.c   **** 		case right:
  95:Src/exvol.c   **** 			target_vol_sum = get_target_vol_sum_ctrl();	
 167              		.loc 1 95 4 is_stmt 1 view .LVU23
 168              		.loc 1 95 21 is_stmt 0 view .LVU24
 169 0012 FFF7FEFF 		bl	get_target_vol_sum_ctrl
 170              	.LVL6:
 171              		.loc 1 95 19 view .LVU25
 172 0016 154B     		ldr	r3, .L20
 173 0018 83ED000A 		vstr.32	s0, [r3]
  96:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_sidewall();
 174              		.loc 1 96 4 is_stmt 1 view .LVU26
 175              		.loc 1 96 22 is_stmt 0 view .LVU27
 176 001c FFF7FEFF 		bl	get_target_vol_diff_sidewall
 177              	.LVL7:
 178              		.loc 1 96 20 view .LVU28
 179 0020 134B     		ldr	r3, .L20+4
 180 0022 83ED000A 		vstr.32	s0, [r3]
  97:Src/exvol.c   **** 			break;
 181              		.loc 1 97 4 is_stmt 1 view .LVU29
 182              	.L12:
  98:Src/exvol.c   **** 		
  99:Src/exvol.c   **** 		case left:
 100:Src/exvol.c   **** 			target_vol_sum = get_target_vol_sum_ctrl();	
 101:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_sidewall();
 102:Src/exvol.c   **** 			break;
 103:Src/exvol.c   **** 
 104:Src/exvol.c   **** 		case both_side:
 105:Src/exvol.c   **** 			target_vol_sum = get_target_vol_sum_ctrl();
 106:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_sidewall();
 107:Src/exvol.c   **** 			break;
 108:Src/exvol.c   **** 
 109:Src/exvol.c   **** 		case none: //両壁がないときは軌跡制御に
 110:Src/exvol.c   **** 			target_vol_sum = get_target_vol_sum_ctrl();
ARM GAS  C:\Temp\ccKw3kgB.s 			page 6


 111:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_ctrl();
 112:Src/exvol.c   **** 			break;
 113:Src/exvol.c   **** 	}
 114:Src/exvol.c   **** }
 183              		.loc 1 114 1 is_stmt 0 view .LVU30
 184 0026 08BD     		pop	{r3, pc}
 185              	.L17:
 100:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_sidewall();
 186              		.loc 1 100 4 is_stmt 1 view .LVU31
 100:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_sidewall();
 187              		.loc 1 100 21 is_stmt 0 view .LVU32
 188 0028 FFF7FEFF 		bl	get_target_vol_sum_ctrl
 189              	.LVL8:
 100:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_sidewall();
 190              		.loc 1 100 19 view .LVU33
 191 002c 0F4B     		ldr	r3, .L20
 192 002e 83ED000A 		vstr.32	s0, [r3]
 101:Src/exvol.c   **** 			break;
 193              		.loc 1 101 4 is_stmt 1 view .LVU34
 101:Src/exvol.c   **** 			break;
 194              		.loc 1 101 22 is_stmt 0 view .LVU35
 195 0032 FFF7FEFF 		bl	get_target_vol_diff_sidewall
 196              	.LVL9:
 101:Src/exvol.c   **** 			break;
 197              		.loc 1 101 20 view .LVU36
 198 0036 0E4B     		ldr	r3, .L20+4
 199 0038 83ED000A 		vstr.32	s0, [r3]
 102:Src/exvol.c   **** 
 200              		.loc 1 102 4 is_stmt 1 view .LVU37
 201 003c F3E7     		b	.L12
 202              	.L16:
 105:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_sidewall();
 203              		.loc 1 105 4 view .LVU38
 105:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_sidewall();
 204              		.loc 1 105 21 is_stmt 0 view .LVU39
 205 003e FFF7FEFF 		bl	get_target_vol_sum_ctrl
 206              	.LVL10:
 105:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_sidewall();
 207              		.loc 1 105 19 view .LVU40
 208 0042 0A4B     		ldr	r3, .L20
 209 0044 83ED000A 		vstr.32	s0, [r3]
 106:Src/exvol.c   **** 			break;
 210              		.loc 1 106 4 is_stmt 1 view .LVU41
 106:Src/exvol.c   **** 			break;
 211              		.loc 1 106 22 is_stmt 0 view .LVU42
 212 0048 FFF7FEFF 		bl	get_target_vol_diff_sidewall
 213              	.LVL11:
 106:Src/exvol.c   **** 			break;
 214              		.loc 1 106 20 view .LVU43
 215 004c 084B     		ldr	r3, .L20+4
 216 004e 83ED000A 		vstr.32	s0, [r3]
 107:Src/exvol.c   **** 
 217              		.loc 1 107 4 is_stmt 1 view .LVU44
 218 0052 E8E7     		b	.L12
 219              	.L14:
 110:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_ctrl();
 220              		.loc 1 110 4 view .LVU45
ARM GAS  C:\Temp\ccKw3kgB.s 			page 7


 110:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_ctrl();
 221              		.loc 1 110 21 is_stmt 0 view .LVU46
 222 0054 FFF7FEFF 		bl	get_target_vol_sum_ctrl
 223              	.LVL12:
 110:Src/exvol.c   **** 			target_vol_diff = get_target_vol_diff_ctrl();
 224              		.loc 1 110 19 view .LVU47
 225 0058 044B     		ldr	r3, .L20
 226 005a 83ED000A 		vstr.32	s0, [r3]
 111:Src/exvol.c   **** 			break;
 227              		.loc 1 111 4 is_stmt 1 view .LVU48
 111:Src/exvol.c   **** 			break;
 228              		.loc 1 111 22 is_stmt 0 view .LVU49
 229 005e FFF7FEFF 		bl	get_target_vol_diff_ctrl
 230              	.LVL13:
 111:Src/exvol.c   **** 			break;
 231              		.loc 1 111 20 view .LVU50
 232 0062 034B     		ldr	r3, .L20+4
 233 0064 83ED000A 		vstr.32	s0, [r3]
 112:Src/exvol.c   **** 	}
 234              		.loc 1 112 4 is_stmt 1 view .LVU51
 235              		.loc 1 114 1 is_stmt 0 view .LVU52
 236 0068 DDE7     		b	.L12
 237              	.L21:
 238 006a 00BF     		.align	2
 239              	.L20:
 240 006c 00000000 		.word	.LANCHOR1
 241 0070 00000000 		.word	.LANCHOR2
 242              		.cfi_endproc
 243              	.LFE138:
 245              		.section	.text.clr_motor_vol,"ax",%progbits
 246              		.align	1
 247              		.global	clr_motor_vol
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu fpv4-sp-d16
 253              	clr_motor_vol:
 254              	.LFB139:
 115:Src/exvol.c   **** 
 116:Src/exvol.c   **** //機能 	:モータ印可電圧初期化
 117:Src/exvol.c   **** //引数 	:なし
 118:Src/exvol.c   **** //返り値:なし
 119:Src/exvol.c   **** void clr_motor_vol(void)
 120:Src/exvol.c   **** {
 255              		.loc 1 120 1 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 121:Src/exvol.c   **** 	target_vol_r = 0;
 260              		.loc 1 121 2 view .LVU54
 261              		.loc 1 121 15 is_stmt 0 view .LVU55
 262 0000 0023     		movs	r3, #0
 263 0002 024A     		ldr	r2, .L23
 264 0004 1360     		str	r3, [r2]	@ float
 122:Src/exvol.c   **** 	target_vol_l = 0;
 265              		.loc 1 122 2 is_stmt 1 view .LVU56
ARM GAS  C:\Temp\ccKw3kgB.s 			page 8


 266              		.loc 1 122 15 is_stmt 0 view .LVU57
 267 0006 024A     		ldr	r2, .L23+4
 268 0008 1360     		str	r3, [r2]	@ float
 123:Src/exvol.c   **** }
 269              		.loc 1 123 1 view .LVU58
 270 000a 7047     		bx	lr
 271              	.L24:
 272              		.align	2
 273              	.L23:
 274 000c 00000000 		.word	.LANCHOR3
 275 0010 00000000 		.word	.LANCHOR4
 276              		.cfi_endproc
 277              	.LFE139:
 279              		.section	.text.set_motor_vol,"ax",%progbits
 280              		.align	1
 281              		.global	set_motor_vol
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	set_motor_vol:
 288              	.LFB135:
  49:Src/exvol.c   **** 	switch (ctrl_mode)
 289              		.loc 1 49 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI3:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
  50:Src/exvol.c   **** 	{
 298              		.loc 1 50 2 view .LVU60
 299 0002 094B     		ldr	r3, .L32
 300 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 301 0006 012B     		cmp	r3, #1
 302 0008 08D0     		beq	.L26
 303 000a 022B     		cmp	r3, #2
 304 000c 09D0     		beq	.L27
 305 000e 13B1     		cbz	r3, .L31
  65:Src/exvol.c   **** 
 306              		.loc 1 65 3 view .LVU61
 307 0010 FFF7FEFF 		bl	clr_motor_vol
 308              	.LVL14:
  68:Src/exvol.c   **** 
 309              		.loc 1 68 1 is_stmt 0 view .LVU62
 310 0014 01E0     		b	.L25
 311              	.L31:
  53:Src/exvol.c   **** 		break;
 312              		.loc 1 53 3 is_stmt 1 view .LVU63
 313 0016 FFF7FEFF 		bl	set_motor_vol_trace
 314              	.LVL15:
  54:Src/exvol.c   **** 	
 315              		.loc 1 54 3 view .LVU64
 316              	.L25:
  68:Src/exvol.c   **** 
ARM GAS  C:\Temp\ccKw3kgB.s 			page 9


 317              		.loc 1 68 1 is_stmt 0 view .LVU65
 318 001a 08BD     		pop	{r3, pc}
 319              	.L26:
  57:Src/exvol.c   **** 		break;
 320              		.loc 1 57 3 is_stmt 1 view .LVU66
 321 001c FFF7FEFF 		bl	set_motor_vol_front_wall
 322              	.LVL16:
  58:Src/exvol.c   **** 	
 323              		.loc 1 58 3 view .LVU67
 324 0020 FBE7     		b	.L25
 325              	.L27:
  61:Src/exvol.c   **** 		break;
 326              		.loc 1 61 3 view .LVU68
 327 0022 FFF7FEFF 		bl	set_motor_vol_side_wall
 328              	.LVL17:
  62:Src/exvol.c   **** 	
 329              		.loc 1 62 3 view .LVU69
 330 0026 F8E7     		b	.L25
 331              	.L33:
 332              		.align	2
 333              	.L32:
 334 0028 00000000 		.word	.LANCHOR0
 335              		.cfi_endproc
 336              	.LFE135:
 338              		.section	.text.clr_operate_history,"ax",%progbits
 339              		.align	1
 340              		.global	clr_operate_history
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	clr_operate_history:
 347              	.LFB140:
 124:Src/exvol.c   **** 
 125:Src/exvol.c   **** //機能 	:各制御モードでの操作量履歴クリア
 126:Src/exvol.c   **** //引数 	:なし
 127:Src/exvol.c   **** //返り値:なし
 128:Src/exvol.c   **** void clr_operate_history(void)
 129:Src/exvol.c   **** {
 348              		.loc 1 129 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              	.LCFI4:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 3, -8
 356              		.cfi_offset 14, -4
 130:Src/exvol.c   **** 	switch(ctrl_mode)
 357              		.loc 1 130 2 view .LVU71
 358 0002 084B     		ldr	r3, .L40
 359 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 360 0006 012B     		cmp	r3, #1
 361 0008 06D0     		beq	.L35
 362 000a 022B     		cmp	r3, #2
 363 000c 07D0     		beq	.L36
 364 000e 03B1     		cbz	r3, .L39
ARM GAS  C:\Temp\ccKw3kgB.s 			page 10


 365              	.L34:
 131:Src/exvol.c   **** 	{
 132:Src/exvol.c   **** 		case trace:
 133:Src/exvol.c   **** 			clr_frontwall_operate_history(); //前壁制御の操作履歴をクリア
 134:Src/exvol.c   **** 			break;
 135:Src/exvol.c   **** 
 136:Src/exvol.c   **** 		case front_wall:
 137:Src/exvol.c   **** 			clr_trace_operate_history();			//軌跡制御の操作履歴をクリア
 138:Src/exvol.c   **** 			break;
 139:Src/exvol.c   **** 		
 140:Src/exvol.c   **** 		case side_wall:
 141:Src/exvol.c   **** 			clr_frontwall_operate_history(); //前壁制御の操作履歴をクリア
 142:Src/exvol.c   **** 			break;
 143:Src/exvol.c   **** 	}
 144:Src/exvol.c   **** }
 366              		.loc 1 144 1 is_stmt 0 view .LVU72
 367 0010 08BD     		pop	{r3, pc}
 368              	.L39:
 133:Src/exvol.c   **** 			break;
 369              		.loc 1 133 4 is_stmt 1 view .LVU73
 370 0012 FFF7FEFF 		bl	clr_frontwall_operate_history
 371              	.LVL18:
 134:Src/exvol.c   **** 
 372              		.loc 1 134 4 view .LVU74
 373 0016 FBE7     		b	.L34
 374              	.L35:
 137:Src/exvol.c   **** 			break;
 375              		.loc 1 137 4 view .LVU75
 376 0018 FFF7FEFF 		bl	clr_trace_operate_history
 377              	.LVL19:
 138:Src/exvol.c   **** 		
 378              		.loc 1 138 4 view .LVU76
 379 001c F8E7     		b	.L34
 380              	.L36:
 141:Src/exvol.c   **** 			break;
 381              		.loc 1 141 4 view .LVU77
 382 001e FFF7FEFF 		bl	clr_frontwall_operate_history
 383              	.LVL20:
 142:Src/exvol.c   **** 	}
 384              		.loc 1 142 4 view .LVU78
 385              		.loc 1 144 1 is_stmt 0 view .LVU79
 386 0022 F5E7     		b	.L34
 387              	.L41:
 388              		.align	2
 389              	.L40:
 390 0024 00000000 		.word	.LANCHOR0
 391              		.cfi_endproc
 392              	.LFE140:
 394              		.section	.text.calc_motor_vol,"ax",%progbits
 395              		.align	1
 396              		.global	calc_motor_vol
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv4-sp-d16
 402              	calc_motor_vol:
 403              	.LFB141:
ARM GAS  C:\Temp\ccKw3kgB.s 			page 11


 145:Src/exvol.c   **** 
 146:Src/exvol.c   **** //機能	: 印加電圧の和、差から各モータに印加する電圧を決定する。
 147:Src/exvol.c   **** //引数	: なし
 148:Src/exvol.c   **** //返り値	: なし
 149:Src/exvol.c   **** void calc_motor_vol ( void )
 150:Src/exvol.c   **** {
 404              		.loc 1 150 1 is_stmt 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 151:Src/exvol.c   **** 	target_vol_r = (target_vol_sum + target_vol_diff)/2;
 409              		.loc 1 151 2 view .LVU81
 410              		.loc 1 151 33 is_stmt 0 view .LVU82
 411 0000 0B4B     		ldr	r3, .L43
 412 0002 D3ED007A 		vldr.32	s15, [r3]
 413 0006 0B4B     		ldr	r3, .L43+4
 414 0008 93ED006A 		vldr.32	s12, [r3]
 415 000c 37EE867A 		vadd.f32	s14, s15, s12
 416              		.loc 1 151 51 view .LVU83
 417 0010 F6EE006A 		vmov.f32	s13, #5.0e-1
 418 0014 27EE267A 		vmul.f32	s14, s14, s13
 419              		.loc 1 151 15 view .LVU84
 420 0018 074B     		ldr	r3, .L43+8
 421 001a 83ED007A 		vstr.32	s14, [r3]
 152:Src/exvol.c   **** 	target_vol_l = (target_vol_sum - target_vol_diff)/2;	
 422              		.loc 1 152 2 is_stmt 1 view .LVU85
 423              		.loc 1 152 33 is_stmt 0 view .LVU86
 424 001e 77EEC67A 		vsub.f32	s15, s15, s12
 425              		.loc 1 152 51 view .LVU87
 426 0022 67EEA67A 		vmul.f32	s15, s15, s13
 427              		.loc 1 152 15 view .LVU88
 428 0026 054B     		ldr	r3, .L43+12
 429 0028 C3ED007A 		vstr.32	s15, [r3]
 153:Src/exvol.c   **** }
 430              		.loc 1 153 1 view .LVU89
 431 002c 7047     		bx	lr
 432              	.L44:
 433 002e 00BF     		.align	2
 434              	.L43:
 435 0030 00000000 		.word	.LANCHOR1
 436 0034 00000000 		.word	.LANCHOR2
 437 0038 00000000 		.word	.LANCHOR3
 438 003c 00000000 		.word	.LANCHOR4
 439              		.cfi_endproc
 440              	.LFE141:
 442              		.section	.text.calc_vol2duty,"ax",%progbits
 443              		.align	1
 444              		.global	calc_vol2duty
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	calc_vol2duty:
 451              	.LFB142:
 154:Src/exvol.c   **** 
 155:Src/exvol.c   **** //機能 	:印可電圧を変調率に変換
ARM GAS  C:\Temp\ccKw3kgB.s 			page 12


 156:Src/exvol.c   **** //引数 	:なし
 157:Src/exvol.c   **** //返り値:なし
 158:Src/exvol.c   **** void calc_vol2duty ( void )
 159:Src/exvol.c   **** {
 452              		.loc 1 159 1 is_stmt 1 view -0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456 0000 08B5     		push	{r3, lr}
 457              	.LCFI5:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 3, -8
 460              		.cfi_offset 14, -4
 461 0002 2DED028B 		vpush.64	{d8}
 462              	.LCFI6:
 463              		.cfi_def_cfa_offset 16
 464              		.cfi_offset 80, -16
 465              		.cfi_offset 81, -12
 160:Src/exvol.c   **** 
 161:Src/exvol.c   **** 	/* バッテリー電圧とモータに印加する電圧から、duty[*0.1%]を算出	*/
 162:Src/exvol.c   **** 	target_duty_r = target_vol_r / (Battery_GetVoltage()) * 1000;
 466              		.loc 1 162 2 view .LVU91
 467              		.loc 1 162 31 is_stmt 0 view .LVU92
 468 0006 114B     		ldr	r3, .L47
 469 0008 93ED008A 		vldr.32	s16, [r3]
 470              		.loc 1 162 34 view .LVU93
 471 000c FFF7FEFF 		bl	Battery_GetVoltage
 472              	.LVL21:
 473              		.loc 1 162 31 view .LVU94
 474 0010 C8EE007A 		vdiv.f32	s15, s16, s0
 475              		.loc 1 162 56 view .LVU95
 476 0014 9FED0E8A 		vldr.32	s16, .L47+4
 477 0018 67EE887A 		vmul.f32	s15, s15, s16
 478              		.loc 1 162 16 view .LVU96
 479 001c FDEEE77A 		vcvt.s32.f32	s15, s15
 480 0020 0C4B     		ldr	r3, .L47+8
 481 0022 17EE902A 		vmov	r2, s15	@ int
 482 0026 1A80     		strh	r2, [r3]	@ movhi
 163:Src/exvol.c   **** 	target_duty_l = target_vol_l / (Battery_GetVoltage()) * 1000;
 483              		.loc 1 163 2 is_stmt 1 view .LVU97
 484              		.loc 1 163 31 is_stmt 0 view .LVU98
 485 0028 0B4B     		ldr	r3, .L47+12
 486 002a D3ED008A 		vldr.32	s17, [r3]
 487              		.loc 1 163 34 view .LVU99
 488 002e FFF7FEFF 		bl	Battery_GetVoltage
 489              	.LVL22:
 490              		.loc 1 163 31 view .LVU100
 491 0032 C8EE807A 		vdiv.f32	s15, s17, s0
 492              		.loc 1 163 56 view .LVU101
 493 0036 67EE887A 		vmul.f32	s15, s15, s16
 494              		.loc 1 163 16 view .LVU102
 495 003a FDEEE77A 		vcvt.s32.f32	s15, s15
 496 003e 074B     		ldr	r3, .L47+16
 497 0040 17EE902A 		vmov	r2, s15	@ int
 498 0044 1A80     		strh	r2, [r3]	@ movhi
 164:Src/exvol.c   **** }
 499              		.loc 1 164 1 view .LVU103
ARM GAS  C:\Temp\ccKw3kgB.s 			page 13


 500 0046 BDEC028B 		vldm	sp!, {d8}
 501              	.LCFI7:
 502              		.cfi_restore 80
 503              		.cfi_restore 81
 504              		.cfi_def_cfa_offset 8
 505 004a 08BD     		pop	{r3, pc}
 506              	.L48:
 507              		.align	2
 508              	.L47:
 509 004c 00000000 		.word	.LANCHOR3
 510 0050 00007A44 		.word	1148846080
 511 0054 00000000 		.word	.LANCHOR5
 512 0058 00000000 		.word	.LANCHOR4
 513 005c 00000000 		.word	.LANCHOR6
 514              		.cfi_endproc
 515              	.LFE142:
 517              		.section	.text.motor_duty_adjust,"ax",%progbits
 518              		.align	1
 519              		.global	motor_duty_adjust
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv4-sp-d16
 525              	motor_duty_adjust:
 526              	.LFB143:
 165:Src/exvol.c   **** 
 166:Src/exvol.c   **** //機能 	:非線形部は使わないように、変調率を調整
 167:Src/exvol.c   **** //引数 	:なし
 168:Src/exvol.c   **** //返り値:なし
 169:Src/exvol.c   **** //
 170:Src/exvol.c   **** void motor_duty_adjust (void)
 171:Src/exvol.c   **** {
 527              		.loc 1 171 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 172:Src/exvol.c   **** 	if( target_duty_r > 0){
 532              		.loc 1 172 2 view .LVU105
 533              		.loc 1 172 20 is_stmt 0 view .LVU106
 534 0000 0C4B     		ldr	r3, .L54
 535 0002 B3F90030 		ldrsh	r3, [r3]
 536              		.loc 1 172 4 view .LVU107
 537 0006 002B     		cmp	r3, #0
 538 0008 0BDD     		ble	.L50
 173:Src/exvol.c   **** 		target_duty_r = target_duty_r + 40;  //40->30
 539              		.loc 1 173 3 is_stmt 1 view .LVU108
 540              		.loc 1 173 33 is_stmt 0 view .LVU109
 541 000a 2833     		adds	r3, r3, #40
 542              		.loc 1 173 17 view .LVU110
 543 000c 094A     		ldr	r2, .L54
 544 000e 1380     		strh	r3, [r2]	@ movhi
 545              	.L51:
 174:Src/exvol.c   **** 	}
 175:Src/exvol.c   **** 	else{
 176:Src/exvol.c   **** 		target_duty_r = target_duty_r - 45; //45 ->35
 177:Src/exvol.c   **** 	}
ARM GAS  C:\Temp\ccKw3kgB.s 			page 14


 178:Src/exvol.c   **** 
 179:Src/exvol.c   **** 	if( target_duty_l > 0){
 546              		.loc 1 179 2 is_stmt 1 view .LVU111
 547              		.loc 1 179 20 is_stmt 0 view .LVU112
 548 0010 094B     		ldr	r3, .L54+4
 549 0012 B3F90030 		ldrsh	r3, [r3]
 550              		.loc 1 179 4 view .LVU113
 551 0016 002B     		cmp	r3, #0
 552 0018 07DD     		ble	.L52
 180:Src/exvol.c   **** 		target_duty_l = target_duty_l + 40;  //40->30
 553              		.loc 1 180 3 is_stmt 1 view .LVU114
 554              		.loc 1 180 33 is_stmt 0 view .LVU115
 555 001a 2833     		adds	r3, r3, #40
 556              		.loc 1 180 17 view .LVU116
 557 001c 064A     		ldr	r2, .L54+4
 558 001e 1380     		strh	r3, [r2]	@ movhi
 559 0020 7047     		bx	lr
 560              	.L50:
 176:Src/exvol.c   **** 	}
 561              		.loc 1 176 3 is_stmt 1 view .LVU117
 176:Src/exvol.c   **** 	}
 562              		.loc 1 176 33 is_stmt 0 view .LVU118
 563 0022 2D3B     		subs	r3, r3, #45
 176:Src/exvol.c   **** 	}
 564              		.loc 1 176 17 view .LVU119
 565 0024 034A     		ldr	r2, .L54
 566 0026 1380     		strh	r3, [r2]	@ movhi
 567 0028 F2E7     		b	.L51
 568              	.L52:
 181:Src/exvol.c   **** 	}
 182:Src/exvol.c   **** 	else{
 183:Src/exvol.c   **** 		target_duty_l = target_duty_l - 45; //45 ->35
 569              		.loc 1 183 3 is_stmt 1 view .LVU120
 570              		.loc 1 183 33 is_stmt 0 view .LVU121
 571 002a 2D3B     		subs	r3, r3, #45
 572              		.loc 1 183 17 view .LVU122
 573 002c 024A     		ldr	r2, .L54+4
 574 002e 1380     		strh	r3, [r2]	@ movhi
 184:Src/exvol.c   **** 	}
 185:Src/exvol.c   **** }
 575              		.loc 1 185 1 view .LVU123
 576 0030 7047     		bx	lr
 577              	.L55:
 578 0032 00BF     		.align	2
 579              	.L54:
 580 0034 00000000 		.word	.LANCHOR5
 581 0038 00000000 		.word	.LANCHOR6
 582              		.cfi_endproc
 583              	.LFE143:
 585              		.section	.text.set_motor_duty,"ax",%progbits
 586              		.align	1
 587              		.global	set_motor_duty
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu fpv4-sp-d16
 593              	set_motor_duty:
ARM GAS  C:\Temp\ccKw3kgB.s 			page 15


 594              	.LFB144:
 186:Src/exvol.c   **** 
 187:Src/exvol.c   **** //機能 	:モータに印可電圧を出力
 188:Src/exvol.c   **** //引数 	:なし
 189:Src/exvol.c   **** //返り値:なし
 190:Src/exvol.c   **** void set_motor_duty (void)
 191:Src/exvol.c   **** {
 595              		.loc 1 191 1 is_stmt 1 view -0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599 0000 08B5     		push	{r3, lr}
 600              	.LCFI8:
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 3, -8
 603              		.cfi_offset 14, -4
 192:Src/exvol.c   **** 	set_duty_l(target_duty_l);
 604              		.loc 1 192 2 view .LVU125
 605 0002 054B     		ldr	r3, .L58
 606 0004 B3F90000 		ldrsh	r0, [r3]
 607 0008 FFF7FEFF 		bl	set_duty_l
 608              	.LVL23:
 193:Src/exvol.c   **** 	set_duty_r(target_duty_r);
 609              		.loc 1 193 2 view .LVU126
 610 000c 034B     		ldr	r3, .L58+4
 611 000e B3F90000 		ldrsh	r0, [r3]
 612 0012 FFF7FEFF 		bl	set_duty_r
 613              	.LVL24:
 194:Src/exvol.c   **** }
 614              		.loc 1 194 1 is_stmt 0 view .LVU127
 615 0016 08BD     		pop	{r3, pc}
 616              	.L59:
 617              		.align	2
 618              	.L58:
 619 0018 00000000 		.word	.LANCHOR6
 620 001c 00000000 		.word	.LANCHOR5
 621              		.cfi_endproc
 622              	.LFE144:
 624              		.section	.text.motor_1ms,"ax",%progbits
 625              		.align	1
 626              		.global	motor_1ms
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 630              		.fpu fpv4-sp-d16
 632              	motor_1ms:
 633              	.LFB133:
  26:Src/exvol.c   **** 	set_motor_vol();		//印加電圧の和、差を制御モードに従い決定
 634              		.loc 1 26 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 08B5     		push	{r3, lr}
 639              	.LCFI9:
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 3, -8
 642              		.cfi_offset 14, -4
ARM GAS  C:\Temp\ccKw3kgB.s 			page 16


  27:Src/exvol.c   **** 	clr_operate_history();	//各制御の操作履歴クリア
 643              		.loc 1 27 2 view .LVU129
 644 0002 FFF7FEFF 		bl	set_motor_vol
 645              	.LVL25:
  28:Src/exvol.c   **** 	calc_motor_vol();		//印加電圧の和、差から各モータの印加電圧を決定する。
 646              		.loc 1 28 2 view .LVU130
 647 0006 FFF7FEFF 		bl	clr_operate_history
 648              	.LVL26:
  29:Src/exvol.c   **** 	calc_vol2duty();		//印加電圧を変調率に変換
 649              		.loc 1 29 2 view .LVU131
 650 000a FFF7FEFF 		bl	calc_motor_vol
 651              	.LVL27:
  30:Src/exvol.c   **** 	motor_duty_adjust();	//低変調率を避ける調整
 652              		.loc 1 30 2 view .LVU132
 653 000e FFF7FEFF 		bl	calc_vol2duty
 654              	.LVL28:
  31:Src/exvol.c   **** 	set_motor_duty();		//モータに電圧を印加
 655              		.loc 1 31 2 view .LVU133
 656 0012 FFF7FEFF 		bl	motor_duty_adjust
 657              	.LVL29:
  32:Src/exvol.c   **** 	clr_operate_history();	//対象のモード以外の操作履歴をクリア
 658              		.loc 1 32 2 view .LVU134
 659 0016 FFF7FEFF 		bl	set_motor_duty
 660              	.LVL30:
  33:Src/exvol.c   **** }
 661              		.loc 1 33 2 view .LVU135
 662 001a FFF7FEFF 		bl	clr_operate_history
 663              	.LVL31:
  34:Src/exvol.c   **** 
 664              		.loc 1 34 1 is_stmt 0 view .LVU136
 665 001e 08BD     		pop	{r3, pc}
 666              		.cfi_endproc
 667              	.LFE133:
 669              		.section	.text.get_target_duty_r,"ax",%progbits
 670              		.align	1
 671              		.global	get_target_duty_r
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.fpu fpv4-sp-d16
 677              	get_target_duty_r:
 678              	.LFB145:
 195:Src/exvol.c   **** 
 196:Src/exvol.c   **** //機能	: 右モータの変調率を取得する
 197:Src/exvol.c   **** //引数	: なし
 198:Src/exvol.c   **** //返り値	: なし
 199:Src/exvol.c   **** int16_t get_target_duty_r ( void )
 200:Src/exvol.c   **** {
 679              		.loc 1 200 1 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 201:Src/exvol.c   **** 	return target_duty_r;
 684              		.loc 1 201 2 view .LVU138
 202:Src/exvol.c   **** }
 685              		.loc 1 202 1 is_stmt 0 view .LVU139
ARM GAS  C:\Temp\ccKw3kgB.s 			page 17


 686 0000 014B     		ldr	r3, .L63
 687 0002 B3F90000 		ldrsh	r0, [r3]
 688 0006 7047     		bx	lr
 689              	.L64:
 690              		.align	2
 691              	.L63:
 692 0008 00000000 		.word	.LANCHOR5
 693              		.cfi_endproc
 694              	.LFE145:
 696              		.section	.text.get_target_duty_l,"ax",%progbits
 697              		.align	1
 698              		.global	get_target_duty_l
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
 702              		.fpu fpv4-sp-d16
 704              	get_target_duty_l:
 705              	.LFB146:
 203:Src/exvol.c   **** 
 204:Src/exvol.c   **** //機能	: 左モータの変調率を取得する
 205:Src/exvol.c   **** //引数	: なし
 206:Src/exvol.c   **** //返り値	: なし
 207:Src/exvol.c   **** int16_t get_target_duty_l ( void )
 208:Src/exvol.c   **** {
 706              		.loc 1 208 1 is_stmt 1 view -0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 209:Src/exvol.c   **** 	return target_duty_l;
 711              		.loc 1 209 2 view .LVU141
 210:Src/exvol.c   **** }...
 712              		.loc 1 210 1 is_stmt 0 view .LVU142
 713 0000 014B     		ldr	r3, .L66
 714 0002 B3F90000 		ldrsh	r0, [r3]
 715 0006 7047     		bx	lr
 716              	.L67:
 717              		.align	2
 718              	.L66:
 719 0008 00000000 		.word	.LANCHOR6
 720              		.cfi_endproc
 721              	.LFE146:
 723              		.section	.bss.ctrl_mode,"aw",%nobits
 724              		.set	.LANCHOR0,. + 0
 727              	ctrl_mode:
 728 0000 00       		.space	1
 729              		.section	.bss.target_duty_l,"aw",%nobits
 730              		.align	1
 731              		.set	.LANCHOR6,. + 0
 734              	target_duty_l:
 735 0000 0000     		.space	2
 736              		.section	.bss.target_duty_r,"aw",%nobits
 737              		.align	1
 738              		.set	.LANCHOR5,. + 0
 741              	target_duty_r:
 742 0000 0000     		.space	2
 743              		.section	.bss.target_vol_diff,"aw",%nobits
ARM GAS  C:\Temp\ccKw3kgB.s 			page 18


 744              		.align	2
 745              		.set	.LANCHOR2,. + 0
 748              	target_vol_diff:
 749 0000 00000000 		.space	4
 750              		.section	.bss.target_vol_l,"aw",%nobits
 751              		.align	2
 752              		.set	.LANCHOR4,. + 0
 755              	target_vol_l:
 756 0000 00000000 		.space	4
 757              		.section	.bss.target_vol_r,"aw",%nobits
 758              		.align	2
 759              		.set	.LANCHOR3,. + 0
 762              	target_vol_r:
 763 0000 00000000 		.space	4
 764              		.section	.bss.target_vol_sum,"aw",%nobits
 765              		.align	2
 766              		.set	.LANCHOR1,. + 0
 769              	target_vol_sum:
 770 0000 00000000 		.space	4
 771              		.text
 772              	.Letext0:
 773              		.file 2 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\machine\\_default_t
 774              		.file 3 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 775              		.file 4 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 776              		.file 5 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\st
 777              		.file 6 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 778              		.file 7 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 779              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 780              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 781              		.file 10 "Inc/exvol.h"
 782              		.file 11 "Inc/adjust.h"
 783              		.file 12 "Inc/motor.h"
 784              		.file 13 "Inc/battery.h"
 785              		.file 14 "Inc/control.h"
ARM GAS  C:\Temp\ccKw3kgB.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 exvol.c
  C:\Temp\ccKw3kgB.s:18     .text.set_mode_ctrl:00000000 $t
  C:\Temp\ccKw3kgB.s:26     .text.set_mode_ctrl:00000000 set_mode_ctrl
  C:\Temp\ccKw3kgB.s:44     .text.set_mode_ctrl:00000008 $d
  C:\Temp\ccKw3kgB.s:49     .text.set_motor_vol_trace:00000000 $t
  C:\Temp\ccKw3kgB.s:56     .text.set_motor_vol_trace:00000000 set_motor_vol_trace
  C:\Temp\ccKw3kgB.s:86     .text.set_motor_vol_trace:00000018 $d
  C:\Temp\ccKw3kgB.s:92     .text.set_motor_vol_front_wall:00000000 $t
  C:\Temp\ccKw3kgB.s:99     .text.set_motor_vol_front_wall:00000000 set_motor_vol_front_wall
  C:\Temp\ccKw3kgB.s:129    .text.set_motor_vol_front_wall:00000018 $d
  C:\Temp\ccKw3kgB.s:135    .text.set_motor_vol_side_wall:00000000 $t
  C:\Temp\ccKw3kgB.s:142    .text.set_motor_vol_side_wall:00000000 set_motor_vol_side_wall
  C:\Temp\ccKw3kgB.s:161    .text.set_motor_vol_side_wall:0000000e $d
  C:\Temp\ccKw3kgB.s:165    .text.set_motor_vol_side_wall:00000012 $t
  C:\Temp\ccKw3kgB.s:240    .text.set_motor_vol_side_wall:0000006c $d
  C:\Temp\ccKw3kgB.s:246    .text.clr_motor_vol:00000000 $t
  C:\Temp\ccKw3kgB.s:253    .text.clr_motor_vol:00000000 clr_motor_vol
  C:\Temp\ccKw3kgB.s:274    .text.clr_motor_vol:0000000c $d
  C:\Temp\ccKw3kgB.s:280    .text.set_motor_vol:00000000 $t
  C:\Temp\ccKw3kgB.s:287    .text.set_motor_vol:00000000 set_motor_vol
  C:\Temp\ccKw3kgB.s:334    .text.set_motor_vol:00000028 $d
  C:\Temp\ccKw3kgB.s:339    .text.clr_operate_history:00000000 $t
  C:\Temp\ccKw3kgB.s:346    .text.clr_operate_history:00000000 clr_operate_history
  C:\Temp\ccKw3kgB.s:390    .text.clr_operate_history:00000024 $d
  C:\Temp\ccKw3kgB.s:395    .text.calc_motor_vol:00000000 $t
  C:\Temp\ccKw3kgB.s:402    .text.calc_motor_vol:00000000 calc_motor_vol
  C:\Temp\ccKw3kgB.s:435    .text.calc_motor_vol:00000030 $d
  C:\Temp\ccKw3kgB.s:443    .text.calc_vol2duty:00000000 $t
  C:\Temp\ccKw3kgB.s:450    .text.calc_vol2duty:00000000 calc_vol2duty
  C:\Temp\ccKw3kgB.s:509    .text.calc_vol2duty:0000004c $d
  C:\Temp\ccKw3kgB.s:518    .text.motor_duty_adjust:00000000 $t
  C:\Temp\ccKw3kgB.s:525    .text.motor_duty_adjust:00000000 motor_duty_adjust
  C:\Temp\ccKw3kgB.s:580    .text.motor_duty_adjust:00000034 $d
  C:\Temp\ccKw3kgB.s:586    .text.set_motor_duty:00000000 $t
  C:\Temp\ccKw3kgB.s:593    .text.set_motor_duty:00000000 set_motor_duty
  C:\Temp\ccKw3kgB.s:619    .text.set_motor_duty:00000018 $d
  C:\Temp\ccKw3kgB.s:625    .text.motor_1ms:00000000 $t
  C:\Temp\ccKw3kgB.s:632    .text.motor_1ms:00000000 motor_1ms
  C:\Temp\ccKw3kgB.s:670    .text.get_target_duty_r:00000000 $t
  C:\Temp\ccKw3kgB.s:677    .text.get_target_duty_r:00000000 get_target_duty_r
  C:\Temp\ccKw3kgB.s:692    .text.get_target_duty_r:00000008 $d
  C:\Temp\ccKw3kgB.s:697    .text.get_target_duty_l:00000000 $t
  C:\Temp\ccKw3kgB.s:704    .text.get_target_duty_l:00000000 get_target_duty_l
  C:\Temp\ccKw3kgB.s:719    .text.get_target_duty_l:00000008 $d
  C:\Temp\ccKw3kgB.s:727    .bss.ctrl_mode:00000000 ctrl_mode
  C:\Temp\ccKw3kgB.s:728    .bss.ctrl_mode:00000000 $d
  C:\Temp\ccKw3kgB.s:730    .bss.target_duty_l:00000000 $d
  C:\Temp\ccKw3kgB.s:734    .bss.target_duty_l:00000000 target_duty_l
  C:\Temp\ccKw3kgB.s:737    .bss.target_duty_r:00000000 $d
  C:\Temp\ccKw3kgB.s:741    .bss.target_duty_r:00000000 target_duty_r
  C:\Temp\ccKw3kgB.s:744    .bss.target_vol_diff:00000000 $d
  C:\Temp\ccKw3kgB.s:748    .bss.target_vol_diff:00000000 target_vol_diff
  C:\Temp\ccKw3kgB.s:751    .bss.target_vol_l:00000000 $d
  C:\Temp\ccKw3kgB.s:755    .bss.target_vol_l:00000000 target_vol_l
  C:\Temp\ccKw3kgB.s:758    .bss.target_vol_r:00000000 $d
  C:\Temp\ccKw3kgB.s:762    .bss.target_vol_r:00000000 target_vol_r
ARM GAS  C:\Temp\ccKw3kgB.s 			page 20


  C:\Temp\ccKw3kgB.s:765    .bss.target_vol_sum:00000000 $d
  C:\Temp\ccKw3kgB.s:769    .bss.target_vol_sum:00000000 target_vol_sum

UNDEFINED SYMBOLS
get_target_vol_sum_ctrl
get_target_vol_diff_ctrl
get_target_vol_sum_frontwall
get_target_vol_diff_frontwall
get_side_wall_ctrl_mode
get_target_vol_diff_sidewall
clr_frontwall_operate_history
clr_trace_operate_history
Battery_GetVoltage
set_duty_l
set_duty_r
