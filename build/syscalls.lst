ARM GAS  C:\Temp\ccHzYxd8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.initialise_monitor_handles,"ax",%progbits
  18              		.align	1
  19              		.global	initialise_monitor_handles
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	initialise_monitor_handles:
  27              	.LFB25:
  28              		.file 1 "Src/syscalls.c"
   1:Src/syscalls.c **** /**
   2:Src/syscalls.c **** *****************************************************************************
   3:Src/syscalls.c **** **
   4:Src/syscalls.c **** **  File        : syscalls.c
   5:Src/syscalls.c **** **
   6:Src/syscalls.c **** **  Author	    : Auto-generated by STM32CubeIDE
   7:Src/syscalls.c **** **
   8:Src/syscalls.c **** **  Abstract    : STM32CubeIDE Minimal System calls file
   9:Src/syscalls.c **** **
  10:Src/syscalls.c **** ** 		          For more information about which c-functions
  11:Src/syscalls.c **** **                need which of these lowlevel functions
  12:Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Src/syscalls.c **** **
  14:Src/syscalls.c **** **  Environment : STM32CubeIDE MCU
  15:Src/syscalls.c **** **
  16:Src/syscalls.c **** **  Distribution: The file is distributed as is, without any warranty
  17:Src/syscalls.c **** **                of any kind.
  18:Src/syscalls.c **** **
  19:Src/syscalls.c **** *****************************************************************************
  20:Src/syscalls.c **** **
  21:Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2018 STMicroelectronics</center></h2>
  22:Src/syscalls.c **** **
  23:Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  24:Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  25:Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  26:Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  27:Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  28:Src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  29:Src/syscalls.c **** **      and/or other materials provided with the distribution.
  30:Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
ARM GAS  C:\Temp\ccHzYxd8.s 			page 2


  31:Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
  32:Src/syscalls.c **** **      without specific prior written permission.
  33:Src/syscalls.c **** **
  34:Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35:Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36:Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  37:Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  38:Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  39:Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  40:Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  41:Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  42:Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  43:Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  44:Src/syscalls.c **** **
  45:Src/syscalls.c **** **
  46:Src/syscalls.c **** *****************************************************************************
  47:Src/syscalls.c **** */
  48:Src/syscalls.c **** 
  49:Src/syscalls.c **** /* Includes */
  50:Src/syscalls.c **** #include <sys/stat.h>
  51:Src/syscalls.c **** #include <stdlib.h>
  52:Src/syscalls.c **** #include <errno.h>
  53:Src/syscalls.c **** #include <stdio.h>
  54:Src/syscalls.c **** #include <signal.h>
  55:Src/syscalls.c **** #include <time.h>
  56:Src/syscalls.c **** #include <sys/time.h>
  57:Src/syscalls.c **** #include <sys/times.h>
  58:Src/syscalls.c **** 
  59:Src/syscalls.c **** 
  60:Src/syscalls.c **** /* Variables */
  61:Src/syscalls.c **** //#undef errno
  62:Src/syscalls.c **** extern int errno;
  63:Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  64:Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  65:Src/syscalls.c **** 
  66:Src/syscalls.c **** register char * stack_ptr asm("sp");
  67:Src/syscalls.c **** 
  68:Src/syscalls.c **** char *__env[1] = { 0 };
  69:Src/syscalls.c **** char **environ = __env;
  70:Src/syscalls.c **** 
  71:Src/syscalls.c **** 
  72:Src/syscalls.c **** /* Functions */
  73:Src/syscalls.c **** void initialise_monitor_handles()
  74:Src/syscalls.c **** {
  29              		.loc 1 74 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  75:Src/syscalls.c **** }
  34              		.loc 1 75 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE25:
  39              		.section	.text._getpid,"ax",%progbits
  40              		.align	1
  41              		.global	_getpid
ARM GAS  C:\Temp\ccHzYxd8.s 			page 3


  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	_getpid:
  48              	.LFB26:
  76:Src/syscalls.c **** 
  77:Src/syscalls.c **** int _getpid(void)
  78:Src/syscalls.c **** {
  49              		.loc 1 78 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  79:Src/syscalls.c **** 	return 1;
  54              		.loc 1 79 2 view .LVU3
  80:Src/syscalls.c **** }
  55              		.loc 1 80 1 is_stmt 0 view .LVU4
  56 0000 0120     		movs	r0, #1
  57 0002 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE26:
  61              		.section	.text._kill,"ax",%progbits
  62              		.align	1
  63              		.global	_kill
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	_kill:
  70              	.LVL0:
  71              	.LFB27:
  81:Src/syscalls.c **** 
  82:Src/syscalls.c **** int _kill(int pid, int sig)
  83:Src/syscalls.c **** {
  72              		.loc 1 83 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 83 1 is_stmt 0 view .LVU6
  77 0000 08B5     		push	{r3, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  84:Src/syscalls.c **** 	errno = EINVAL;
  82              		.loc 1 84 2 is_stmt 1 view .LVU7
  83 0002 FFF7FEFF 		bl	__errno
  84              	.LVL1:
  85              		.loc 1 84 8 is_stmt 0 view .LVU8
  86 0006 1623     		movs	r3, #22
  87 0008 0360     		str	r3, [r0]
  85:Src/syscalls.c **** 	return -1;
  88              		.loc 1 85 2 is_stmt 1 view .LVU9
  86:Src/syscalls.c **** }
  89              		.loc 1 86 1 is_stmt 0 view .LVU10
  90 000a 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Temp\ccHzYxd8.s 			page 4


  91 000e 08BD     		pop	{r3, pc}
  92              		.cfi_endproc
  93              	.LFE27:
  95              		.section	.text._exit,"ax",%progbits
  96              		.align	1
  97              		.global	_exit
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv4-sp-d16
 103              	_exit:
 104              	.LVL2:
 105              	.LFB28:
  87:Src/syscalls.c **** 
  88:Src/syscalls.c **** void _exit (int status)
  89:Src/syscalls.c **** {
 106              		.loc 1 89 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ Volatile: function does not return.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 89 1 is_stmt 0 view .LVU12
 112 0000 08B5     		push	{r3, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 3, -8
 116              		.cfi_offset 14, -4
  90:Src/syscalls.c **** 	_kill(status, -1);
 117              		.loc 1 90 2 is_stmt 1 view .LVU13
 118 0002 4FF0FF31 		mov	r1, #-1
 119 0006 FFF7FEFF 		bl	_kill
 120              	.LVL3:
 121              	.L6:
  91:Src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
 122              		.loc 1 91 2 discriminator 1 view .LVU14
 123              		.loc 1 91 13 discriminator 1 view .LVU15
 124              		.loc 1 91 8 discriminator 1 view .LVU16
 125 000a FEE7     		b	.L6
 126              		.cfi_endproc
 127              	.LFE28:
 129              		.section	.text._read,"ax",%progbits
 130              		.align	1
 131              		.weak	_read
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_read:
 138              	.LVL4:
 139              	.LFB29:
  92:Src/syscalls.c **** }
  93:Src/syscalls.c **** 
  94:Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  95:Src/syscalls.c **** {
 140              		.loc 1 95 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Temp\ccHzYxd8.s 			page 5


 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		.loc 1 95 1 is_stmt 0 view .LVU18
 145 0000 70B5     		push	{r4, r5, r6, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 16
 148              		.cfi_offset 4, -16
 149              		.cfi_offset 5, -12
 150              		.cfi_offset 6, -8
 151              		.cfi_offset 14, -4
 152 0002 0C46     		mov	r4, r1
 153 0004 1646     		mov	r6, r2
  96:Src/syscalls.c **** 	int DataIdx;
 154              		.loc 1 96 2 is_stmt 1 view .LVU19
  97:Src/syscalls.c **** 
  98:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 155              		.loc 1 98 2 view .LVU20
 156              	.LVL5:
 157              		.loc 1 98 15 is_stmt 0 view .LVU21
 158 0006 0025     		movs	r5, #0
 159              	.LVL6:
 160              	.L9:
 161              		.loc 1 98 20 is_stmt 1 discriminator 1 view .LVU22
 162              		.loc 1 98 2 is_stmt 0 discriminator 1 view .LVU23
 163 0008 B542     		cmp	r5, r6
 164 000a 07DA     		bge	.L12
  99:Src/syscalls.c **** 	{
 100:Src/syscalls.c **** 		*ptr++ = __io_getchar();
 165              		.loc 1 100 3 is_stmt 1 discriminator 3 view .LVU24
 166              		.loc 1 100 12 is_stmt 0 discriminator 3 view .LVU25
 167 000c FFF7FEFF 		bl	__io_getchar
 168              	.LVL7:
 169              		.loc 1 100 7 discriminator 3 view .LVU26
 170 0010 2146     		mov	r1, r4
 171              	.LVL8:
 172              		.loc 1 100 10 discriminator 3 view .LVU27
 173 0012 01F8010B 		strb	r0, [r1], #1
 174              	.LVL9:
  98:Src/syscalls.c **** 	{
 175              		.loc 1 98 35 is_stmt 1 discriminator 3 view .LVU28
  98:Src/syscalls.c **** 	{
 176              		.loc 1 98 42 is_stmt 0 discriminator 3 view .LVU29
 177 0016 0135     		adds	r5, r5, #1
 178              	.LVL10:
 179              		.loc 1 100 7 discriminator 3 view .LVU30
 180 0018 0C46     		mov	r4, r1
 181 001a F5E7     		b	.L9
 182              	.L12:
 101:Src/syscalls.c **** 	}
 102:Src/syscalls.c **** 
 103:Src/syscalls.c **** return len;
 183              		.loc 1 103 1 is_stmt 1 view .LVU31
 104:Src/syscalls.c **** }
 184              		.loc 1 104 1 is_stmt 0 view .LVU32
 185 001c 3046     		mov	r0, r6
 186 001e 70BD     		pop	{r4, r5, r6, pc}
 187              		.loc 1 104 1 view .LVU33
 188              		.cfi_endproc
ARM GAS  C:\Temp\ccHzYxd8.s 			page 6


 189              	.LFE29:
 191              		.section	.text._write,"ax",%progbits
 192              		.align	1
 193              		.weak	_write
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	_write:
 200              	.LVL11:
 201              	.LFB30:
 105:Src/syscalls.c **** 
 106:Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 107:Src/syscalls.c **** {
 202              		.loc 1 107 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		.loc 1 107 1 is_stmt 0 view .LVU35
 207 0000 70B5     		push	{r4, r5, r6, lr}
 208              	.LCFI3:
 209              		.cfi_def_cfa_offset 16
 210              		.cfi_offset 4, -16
 211              		.cfi_offset 5, -12
 212              		.cfi_offset 6, -8
 213              		.cfi_offset 14, -4
 214 0002 0C46     		mov	r4, r1
 215 0004 1646     		mov	r6, r2
 108:Src/syscalls.c **** 	int DataIdx;
 216              		.loc 1 108 2 is_stmt 1 view .LVU36
 109:Src/syscalls.c **** 
 110:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 217              		.loc 1 110 2 view .LVU37
 218              	.LVL12:
 219              		.loc 1 110 15 is_stmt 0 view .LVU38
 220 0006 0025     		movs	r5, #0
 221              	.LVL13:
 222              	.L14:
 223              		.loc 1 110 20 is_stmt 1 discriminator 1 view .LVU39
 224              		.loc 1 110 2 is_stmt 0 discriminator 1 view .LVU40
 225 0008 B542     		cmp	r5, r6
 226 000a 05DA     		bge	.L17
 111:Src/syscalls.c **** 	{
 112:Src/syscalls.c **** 		__io_putchar(*ptr++);
 227              		.loc 1 112 3 is_stmt 1 discriminator 3 view .LVU41
 228              	.LVL14:
 229              		.loc 1 112 3 is_stmt 0 discriminator 3 view .LVU42
 230 000c 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 231              	.LVL15:
 232              		.loc 1 112 3 discriminator 3 view .LVU43
 233 0010 FFF7FEFF 		bl	__io_putchar
 234              	.LVL16:
 110:Src/syscalls.c **** 	{
 235              		.loc 1 110 35 is_stmt 1 discriminator 3 view .LVU44
 110:Src/syscalls.c **** 	{
 236              		.loc 1 110 42 is_stmt 0 discriminator 3 view .LVU45
 237 0014 0135     		adds	r5, r5, #1
ARM GAS  C:\Temp\ccHzYxd8.s 			page 7


 238              	.LVL17:
 110:Src/syscalls.c **** 	{
 239              		.loc 1 110 42 discriminator 3 view .LVU46
 240 0016 F7E7     		b	.L14
 241              	.L17:
 113:Src/syscalls.c **** 	}
 114:Src/syscalls.c **** 	return len;
 242              		.loc 1 114 2 is_stmt 1 view .LVU47
 115:Src/syscalls.c **** }
 243              		.loc 1 115 1 is_stmt 0 view .LVU48
 244 0018 3046     		mov	r0, r6
 245 001a 70BD     		pop	{r4, r5, r6, pc}
 246              		.loc 1 115 1 view .LVU49
 247              		.cfi_endproc
 248              	.LFE30:
 250              		.section	.text._close,"ax",%progbits
 251              		.align	1
 252              		.global	_close
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	_close:
 259              	.LVL18:
 260              	.LFB31:
 116:Src/syscalls.c **** 
 117:Src/syscalls.c **** int _close(int file)
 118:Src/syscalls.c **** {
 261              		.loc 1 118 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 119:Src/syscalls.c **** 	return -1;
 266              		.loc 1 119 2 view .LVU51
 120:Src/syscalls.c **** }
 267              		.loc 1 120 1 is_stmt 0 view .LVU52
 268 0000 4FF0FF30 		mov	r0, #-1
 269              	.LVL19:
 270              		.loc 1 120 1 view .LVU53
 271 0004 7047     		bx	lr
 272              		.cfi_endproc
 273              	.LFE31:
 275              		.section	.text._fstat,"ax",%progbits
 276              		.align	1
 277              		.global	_fstat
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu fpv4-sp-d16
 283              	_fstat:
 284              	.LVL20:
 285              	.LFB32:
 121:Src/syscalls.c **** 
 122:Src/syscalls.c **** 
 123:Src/syscalls.c **** int _fstat(int file, struct stat *st)
 124:Src/syscalls.c **** {
ARM GAS  C:\Temp\ccHzYxd8.s 			page 8


 286              		.loc 1 124 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 125:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 291              		.loc 1 125 2 view .LVU55
 292              		.loc 1 125 14 is_stmt 0 view .LVU56
 293 0000 4FF40053 		mov	r3, #8192
 294 0004 4B60     		str	r3, [r1, #4]
 126:Src/syscalls.c **** 	return 0;
 295              		.loc 1 126 2 is_stmt 1 view .LVU57
 127:Src/syscalls.c **** }
 296              		.loc 1 127 1 is_stmt 0 view .LVU58
 297 0006 0020     		movs	r0, #0
 298              	.LVL21:
 299              		.loc 1 127 1 view .LVU59
 300 0008 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE32:
 304              		.section	.text._isatty,"ax",%progbits
 305              		.align	1
 306              		.global	_isatty
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv4-sp-d16
 312              	_isatty:
 313              	.LVL22:
 314              	.LFB33:
 128:Src/syscalls.c **** 
 129:Src/syscalls.c **** int _isatty(int file)
 130:Src/syscalls.c **** {
 315              		.loc 1 130 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 131:Src/syscalls.c **** 	return 1;
 320              		.loc 1 131 2 view .LVU61
 132:Src/syscalls.c **** }
 321              		.loc 1 132 1 is_stmt 0 view .LVU62
 322 0000 0120     		movs	r0, #1
 323              	.LVL23:
 324              		.loc 1 132 1 view .LVU63
 325 0002 7047     		bx	lr
 326              		.cfi_endproc
 327              	.LFE33:
 329              		.section	.text._lseek,"ax",%progbits
 330              		.align	1
 331              		.global	_lseek
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv4-sp-d16
 337              	_lseek:
 338              	.LVL24:
ARM GAS  C:\Temp\ccHzYxd8.s 			page 9


 339              	.LFB34:
 133:Src/syscalls.c **** 
 134:Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 135:Src/syscalls.c **** {
 340              		.loc 1 135 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 136:Src/syscalls.c **** 	return 0;
 345              		.loc 1 136 2 view .LVU65
 137:Src/syscalls.c **** }
 346              		.loc 1 137 1 is_stmt 0 view .LVU66
 347 0000 0020     		movs	r0, #0
 348              	.LVL25:
 349              		.loc 1 137 1 view .LVU67
 350 0002 7047     		bx	lr
 351              		.cfi_endproc
 352              	.LFE34:
 354              		.section	.text._open,"ax",%progbits
 355              		.align	1
 356              		.global	_open
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	_open:
 363              	.LVL26:
 364              	.LFB35:
 138:Src/syscalls.c **** 
 139:Src/syscalls.c **** int _open(char *path, int flags, ...)
 140:Src/syscalls.c **** {
 365              		.loc 1 140 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 4, pretend = 12, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 1
 369              		@ link register save eliminated.
 370              		.loc 1 140 1 is_stmt 0 view .LVU69
 371 0000 0EB4     		push	{r1, r2, r3}
 372              	.LCFI4:
 373              		.cfi_def_cfa_offset 12
 374              		.cfi_offset 1, -12
 375              		.cfi_offset 2, -8
 376              		.cfi_offset 3, -4
 141:Src/syscalls.c **** 	/* Pretend like we always fail */
 142:Src/syscalls.c **** 	return -1;
 377              		.loc 1 142 2 is_stmt 1 view .LVU70
 143:Src/syscalls.c **** }
 378              		.loc 1 143 1 is_stmt 0 view .LVU71
 379 0002 4FF0FF30 		mov	r0, #-1
 380              	.LVL27:
 381              		.loc 1 143 1 view .LVU72
 382 0006 03B0     		add	sp, sp, #12
 383              	.LCFI5:
 384              		.cfi_restore 3
 385              		.cfi_restore 2
 386              		.cfi_restore 1
ARM GAS  C:\Temp\ccHzYxd8.s 			page 10


 387              		.cfi_def_cfa_offset 0
 388 0008 7047     		bx	lr
 389              		.cfi_endproc
 390              	.LFE35:
 392              		.section	.text._wait,"ax",%progbits
 393              		.align	1
 394              		.global	_wait
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv4-sp-d16
 400              	_wait:
 401              	.LVL28:
 402              	.LFB36:
 144:Src/syscalls.c **** 
 145:Src/syscalls.c **** int _wait(int *status)
 146:Src/syscalls.c **** {
 403              		.loc 1 146 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		.loc 1 146 1 is_stmt 0 view .LVU74
 408 0000 08B5     		push	{r3, lr}
 409              	.LCFI6:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 3, -8
 412              		.cfi_offset 14, -4
 147:Src/syscalls.c **** 	errno = ECHILD;
 413              		.loc 1 147 2 is_stmt 1 view .LVU75
 414 0002 FFF7FEFF 		bl	__errno
 415              	.LVL29:
 416              		.loc 1 147 8 is_stmt 0 view .LVU76
 417 0006 0A23     		movs	r3, #10
 418 0008 0360     		str	r3, [r0]
 148:Src/syscalls.c **** 	return -1;
 419              		.loc 1 148 2 is_stmt 1 view .LVU77
 149:Src/syscalls.c **** }
 420              		.loc 1 149 1 is_stmt 0 view .LVU78
 421 000a 4FF0FF30 		mov	r0, #-1
 422 000e 08BD     		pop	{r3, pc}
 423              		.cfi_endproc
 424              	.LFE36:
 426              		.section	.text._unlink,"ax",%progbits
 427              		.align	1
 428              		.global	_unlink
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 434              	_unlink:
 435              	.LVL30:
 436              	.LFB37:
 150:Src/syscalls.c **** 
 151:Src/syscalls.c **** int _unlink(char *name)
 152:Src/syscalls.c **** {
 437              		.loc 1 152 1 is_stmt 1 view -0
 438              		.cfi_startproc
ARM GAS  C:\Temp\ccHzYxd8.s 			page 11


 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		.loc 1 152 1 is_stmt 0 view .LVU80
 442 0000 08B5     		push	{r3, lr}
 443              	.LCFI7:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 3, -8
 446              		.cfi_offset 14, -4
 153:Src/syscalls.c **** 	errno = ENOENT;
 447              		.loc 1 153 2 is_stmt 1 view .LVU81
 448 0002 FFF7FEFF 		bl	__errno
 449              	.LVL31:
 450              		.loc 1 153 8 is_stmt 0 view .LVU82
 451 0006 0223     		movs	r3, #2
 452 0008 0360     		str	r3, [r0]
 154:Src/syscalls.c **** 	return -1;
 453              		.loc 1 154 2 is_stmt 1 view .LVU83
 155:Src/syscalls.c **** }
 454              		.loc 1 155 1 is_stmt 0 view .LVU84
 455 000a 4FF0FF30 		mov	r0, #-1
 456 000e 08BD     		pop	{r3, pc}
 457              		.cfi_endproc
 458              	.LFE37:
 460              		.section	.text._times,"ax",%progbits
 461              		.align	1
 462              		.global	_times
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	_times:
 469              	.LVL32:
 470              	.LFB38:
 156:Src/syscalls.c **** 
 157:Src/syscalls.c **** int _times(struct tms *buf)
 158:Src/syscalls.c **** {
 471              		.loc 1 158 1 is_stmt 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 159:Src/syscalls.c **** 	return -1;
 476              		.loc 1 159 2 view .LVU86
 160:Src/syscalls.c **** }
 477              		.loc 1 160 1 is_stmt 0 view .LVU87
 478 0000 4FF0FF30 		mov	r0, #-1
 479              	.LVL33:
 480              		.loc 1 160 1 view .LVU88
 481 0004 7047     		bx	lr
 482              		.cfi_endproc
 483              	.LFE38:
 485              		.section	.text._stat,"ax",%progbits
 486              		.align	1
 487              		.global	_stat
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
ARM GAS  C:\Temp\ccHzYxd8.s 			page 12


 491              		.fpu fpv4-sp-d16
 493              	_stat:
 494              	.LVL34:
 495              	.LFB39:
 161:Src/syscalls.c **** 
 162:Src/syscalls.c **** int _stat(char *file, struct stat *st)
 163:Src/syscalls.c **** {
 496              		.loc 1 163 1 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 164:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 501              		.loc 1 164 2 view .LVU90
 502              		.loc 1 164 14 is_stmt 0 view .LVU91
 503 0000 4FF40053 		mov	r3, #8192
 504 0004 4B60     		str	r3, [r1, #4]
 165:Src/syscalls.c **** 	return 0;
 505              		.loc 1 165 2 is_stmt 1 view .LVU92
 166:Src/syscalls.c **** }
 506              		.loc 1 166 1 is_stmt 0 view .LVU93
 507 0006 0020     		movs	r0, #0
 508              	.LVL35:
 509              		.loc 1 166 1 view .LVU94
 510 0008 7047     		bx	lr
 511              		.cfi_endproc
 512              	.LFE39:
 514              		.section	.text._link,"ax",%progbits
 515              		.align	1
 516              		.global	_link
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 520              		.fpu fpv4-sp-d16
 522              	_link:
 523              	.LVL36:
 524              	.LFB40:
 167:Src/syscalls.c **** 
 168:Src/syscalls.c **** int _link(char *old, char *new)
 169:Src/syscalls.c **** {
 525              		.loc 1 169 1 is_stmt 1 view -0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              		.loc 1 169 1 is_stmt 0 view .LVU96
 530 0000 08B5     		push	{r3, lr}
 531              	.LCFI8:
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 3, -8
 534              		.cfi_offset 14, -4
 170:Src/syscalls.c **** 	errno = EMLINK;
 535              		.loc 1 170 2 is_stmt 1 view .LVU97
 536 0002 FFF7FEFF 		bl	__errno
 537              	.LVL37:
 538              		.loc 1 170 8 is_stmt 0 view .LVU98
 539 0006 1F23     		movs	r3, #31
 540 0008 0360     		str	r3, [r0]
ARM GAS  C:\Temp\ccHzYxd8.s 			page 13


 171:Src/syscalls.c **** 	return -1;
 541              		.loc 1 171 2 is_stmt 1 view .LVU99
 172:Src/syscalls.c **** }
 542              		.loc 1 172 1 is_stmt 0 view .LVU100
 543 000a 4FF0FF30 		mov	r0, #-1
 544 000e 08BD     		pop	{r3, pc}
 545              		.cfi_endproc
 546              	.LFE40:
 548              		.section	.text._fork,"ax",%progbits
 549              		.align	1
 550              		.global	_fork
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu fpv4-sp-d16
 556              	_fork:
 557              	.LFB41:
 173:Src/syscalls.c **** 
 174:Src/syscalls.c **** int _fork(void)
 175:Src/syscalls.c **** {
 558              		.loc 1 175 1 is_stmt 1 view -0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562 0000 08B5     		push	{r3, lr}
 563              	.LCFI9:
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 3, -8
 566              		.cfi_offset 14, -4
 176:Src/syscalls.c **** 	errno = EAGAIN;
 567              		.loc 1 176 2 view .LVU102
 568 0002 FFF7FEFF 		bl	__errno
 569              	.LVL38:
 570              		.loc 1 176 8 is_stmt 0 view .LVU103
 571 0006 0B23     		movs	r3, #11
 572 0008 0360     		str	r3, [r0]
 177:Src/syscalls.c **** 	return -1;
 573              		.loc 1 177 2 is_stmt 1 view .LVU104
 178:Src/syscalls.c **** }
 574              		.loc 1 178 1 is_stmt 0 view .LVU105
 575 000a 4FF0FF30 		mov	r0, #-1
 576 000e 08BD     		pop	{r3, pc}
 577              		.cfi_endproc
 578              	.LFE41:
 580              		.section	.text._execve,"ax",%progbits
 581              		.align	1
 582              		.global	_execve
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu fpv4-sp-d16
 588              	_execve:
 589              	.LVL39:
 590              	.LFB42:
 179:Src/syscalls.c **** 
 180:Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 181:Src/syscalls.c **** {
ARM GAS  C:\Temp\ccHzYxd8.s 			page 14


 591              		.loc 1 181 1 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		.loc 1 181 1 is_stmt 0 view .LVU107
 596 0000 08B5     		push	{r3, lr}
 597              	.LCFI10:
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 3, -8
 600              		.cfi_offset 14, -4
 182:Src/syscalls.c **** 	errno = ENOMEM;
 601              		.loc 1 182 2 is_stmt 1 view .LVU108
 602 0002 FFF7FEFF 		bl	__errno
 603              	.LVL40:
 604              		.loc 1 182 8 is_stmt 0 view .LVU109
 605 0006 0C23     		movs	r3, #12
 606 0008 0360     		str	r3, [r0]
 183:Src/syscalls.c **** 	return -1;
 607              		.loc 1 183 2 is_stmt 1 view .LVU110
 184:Src/syscalls.c **** }
 608              		.loc 1 184 1 is_stmt 0 view .LVU111
 609 000a 4FF0FF30 		mov	r0, #-1
 610 000e 08BD     		pop	{r3, pc}
 611              		.cfi_endproc
 612              	.LFE42:
 614              		.global	environ
 615              		.global	__env
 616              		.section	.bss.__env,"aw",%nobits
 617              		.align	2
 620              	__env:
 621 0000 00000000 		.space	4
 622              		.section	.data.environ,"aw"
 623              		.align	2
 626              	environ:
 627 0000 00000000 		.word	__env
 628              		.weak	__io_putchar
 629              		.weak	__io_getchar
 630              		.text
 631              	.Letext0:
 632              		.file 2 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\machine\\_default_t
 633              		.file 3 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 634              		.file 4 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 635              		.file 5 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\st
 636              		.file 6 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 637              		.file 7 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_timeval.h"
 638              		.file 8 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\types.h"
 639              		.file 9 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\time.h"
 640              		.file 10 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\stat.h"
 641              		.file 11 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\stdlib.h"
 642              		.file 12 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\errno.h"
 643              		.file 13 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\times.h"
ARM GAS  C:\Temp\ccHzYxd8.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
  C:\Temp\ccHzYxd8.s:18     .text.initialise_monitor_handles:00000000 $t
  C:\Temp\ccHzYxd8.s:26     .text.initialise_monitor_handles:00000000 initialise_monitor_handles
  C:\Temp\ccHzYxd8.s:40     .text._getpid:00000000 $t
  C:\Temp\ccHzYxd8.s:47     .text._getpid:00000000 _getpid
  C:\Temp\ccHzYxd8.s:62     .text._kill:00000000 $t
  C:\Temp\ccHzYxd8.s:69     .text._kill:00000000 _kill
  C:\Temp\ccHzYxd8.s:96     .text._exit:00000000 $t
  C:\Temp\ccHzYxd8.s:103    .text._exit:00000000 _exit
  C:\Temp\ccHzYxd8.s:130    .text._read:00000000 $t
  C:\Temp\ccHzYxd8.s:137    .text._read:00000000 _read
  C:\Temp\ccHzYxd8.s:192    .text._write:00000000 $t
  C:\Temp\ccHzYxd8.s:199    .text._write:00000000 _write
  C:\Temp\ccHzYxd8.s:251    .text._close:00000000 $t
  C:\Temp\ccHzYxd8.s:258    .text._close:00000000 _close
  C:\Temp\ccHzYxd8.s:276    .text._fstat:00000000 $t
  C:\Temp\ccHzYxd8.s:283    .text._fstat:00000000 _fstat
  C:\Temp\ccHzYxd8.s:305    .text._isatty:00000000 $t
  C:\Temp\ccHzYxd8.s:312    .text._isatty:00000000 _isatty
  C:\Temp\ccHzYxd8.s:330    .text._lseek:00000000 $t
  C:\Temp\ccHzYxd8.s:337    .text._lseek:00000000 _lseek
  C:\Temp\ccHzYxd8.s:355    .text._open:00000000 $t
  C:\Temp\ccHzYxd8.s:362    .text._open:00000000 _open
  C:\Temp\ccHzYxd8.s:393    .text._wait:00000000 $t
  C:\Temp\ccHzYxd8.s:400    .text._wait:00000000 _wait
  C:\Temp\ccHzYxd8.s:427    .text._unlink:00000000 $t
  C:\Temp\ccHzYxd8.s:434    .text._unlink:00000000 _unlink
  C:\Temp\ccHzYxd8.s:461    .text._times:00000000 $t
  C:\Temp\ccHzYxd8.s:468    .text._times:00000000 _times
  C:\Temp\ccHzYxd8.s:486    .text._stat:00000000 $t
  C:\Temp\ccHzYxd8.s:493    .text._stat:00000000 _stat
  C:\Temp\ccHzYxd8.s:515    .text._link:00000000 $t
  C:\Temp\ccHzYxd8.s:522    .text._link:00000000 _link
  C:\Temp\ccHzYxd8.s:549    .text._fork:00000000 $t
  C:\Temp\ccHzYxd8.s:556    .text._fork:00000000 _fork
  C:\Temp\ccHzYxd8.s:581    .text._execve:00000000 $t
  C:\Temp\ccHzYxd8.s:588    .text._execve:00000000 _execve
  C:\Temp\ccHzYxd8.s:626    .data.environ:00000000 environ
  C:\Temp\ccHzYxd8.s:620    .bss.__env:00000000 __env
  C:\Temp\ccHzYxd8.s:617    .bss.__env:00000000 $d
  C:\Temp\ccHzYxd8.s:623    .data.environ:00000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
