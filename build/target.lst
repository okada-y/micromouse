ARM GAS  C:\Temp\ccP21HMa.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"target.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.set_direction_mode,"ax",%progbits
  18              		.align	1
  19              		.global	set_direction_mode
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	set_direction_mode:
  27              	.LVL0:
  28              	.LFB4:
  29              		.file 1 "Src/target.c"
   1:Src/target.c  **** /*
   2:Src/target.c  ****  * target.c
   3:Src/target.c  ****  *
   4:Src/target.c  ****  *  Created on: Aug 7, 2019
   5:Src/target.c  ****  *      Author: 岡田 泰裕
   6:Src/target.c  ****  */
   7:Src/target.c  **** 
   8:Src/target.c  **** #include "param.h"
   9:Src/target.c  **** #include "ir_sensor.h"
  10:Src/target.c  **** #include "target.h"
  11:Src/target.c  **** 
  12:Src/target.c  **** 
  13:Src/target.c  **** static float target_move_speed = 0;			//目標移動速度[m/s]
  14:Src/target.c  **** static float target_move_speed_fin = 0;		//目標終端速度[m/s]
  15:Src/target.c  **** static float target_rotation_speed = 0;		//目標角速度[rad/s]
  16:Src/target.c  **** static float target_move_accel = 0;			//目標移動加速度[m/s2]
  17:Src/target.c  **** static float target_rotation_accel = 0;		//目標角加速度[rad/s2]
  18:Src/target.c  **** static float target_length = 0;				//目標移動距離[m]
  19:Src/target.c  **** static float target_angle = 0;				//目標回転角度[rad]
  20:Src/target.c  **** static float ideal_length = 0;				//理想移動距離[m]
  21:Src/target.c  **** static float ideal_angle = 0;				//理想回転角度[rad]
  22:Src/target.c  **** 
  23:Src/target.c  **** static direction_mode move_dir_flg = forward_mode;			//移動方向フラグ　0:前進 1:後進
  24:Src/target.c  **** static rotation_mode rotation_dir_flg = counter_clockwise;	//回転方向フラグ　0:反時計周
  25:Src/target.c  **** static accel_mode accel_dir_flg = acceleration;		   		//加減速フラグ　　0:加速 1:減速
  26:Src/target.c  **** 
  27:Src/target.c  **** //機能	: traget.cの1msタスクのまとめ
  28:Src/target.c  **** //引数	: なし
  29:Src/target.c  **** //返り値	: なし
ARM GAS  C:\Temp\ccP21HMa.s 			page 2


  30:Src/target.c  **** void target_1ms ( void )
  31:Src/target.c  **** {
  32:Src/target.c  **** 	calc_target_move_accel();		//移動加速度更新
  33:Src/target.c  **** 	calc_rotate_accel();			//回転角速度更新
  34:Src/target.c  **** 	calc_target_move_speed();		//目標移動速度更新
  35:Src/target.c  **** 	calc_target_rotation_speed();	//目標角速度更新
  36:Src/target.c  **** }
  37:Src/target.c  **** 
  38:Src/target.c  **** //機能	: 移動方向モードをセットする
  39:Src/target.c  **** //引数	: 移動方向モード(forward,back)
  40:Src/target.c  **** //返り値	: なし
  41:Src/target.c  **** void set_direction_mode ( direction_mode dmode )
  42:Src/target.c  **** {
  30              		.loc 1 42 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  43:Src/target.c  **** 	move_dir_flg = dmode;
  35              		.loc 1 43 2 view .LVU1
  36              		.loc 1 43 15 is_stmt 0 view .LVU2
  37 0000 014B     		ldr	r3, .L2
  38 0002 1870     		strb	r0, [r3]
  44:Src/target.c  **** }
  39              		.loc 1 44 1 view .LVU3
  40 0004 7047     		bx	lr
  41              	.L3:
  42 0006 00BF     		.align	2
  43              	.L2:
  44 0008 00000000 		.word	.LANCHOR0
  45              		.cfi_endproc
  46              	.LFE4:
  48              		.section	.text.set_rotation_mode,"ax",%progbits
  49              		.align	1
  50              		.global	set_rotation_mode
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	set_rotation_mode:
  57              	.LVL1:
  58              	.LFB5:
  45:Src/target.c  **** 
  46:Src/target.c  **** //機能	: 回転方向モードをセットする
  47:Src/target.c  **** //引数	: 回転方向モード(counter_clocwise,clockwise)
  48:Src/target.c  **** //返り値	: なし
  49:Src/target.c  **** void set_rotation_mode ( rotation_mode rmode )
  50:Src/target.c  **** {
  59              		.loc 1 50 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  51:Src/target.c  **** 	rotation_dir_flg = rmode;
  64              		.loc 1 51 2 view .LVU5
  65              		.loc 1 51 19 is_stmt 0 view .LVU6
  66 0000 014B     		ldr	r3, .L5
ARM GAS  C:\Temp\ccP21HMa.s 			page 3


  67 0002 1870     		strb	r0, [r3]
  52:Src/target.c  **** }
  68              		.loc 1 52 1 view .LVU7
  69 0004 7047     		bx	lr
  70              	.L6:
  71 0006 00BF     		.align	2
  72              	.L5:
  73 0008 00000000 		.word	.LANCHOR1
  74              		.cfi_endproc
  75              	.LFE5:
  77              		.section	.text.set_accel_mode,"ax",%progbits
  78              		.align	1
  79              		.global	set_accel_mode
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	set_accel_mode:
  86              	.LVL2:
  87              	.LFB6:
  53:Src/target.c  **** 
  54:Src/target.c  **** //機能	: 加速モードをセットする
  55:Src/target.c  **** //引数	: 加速モード(acceleration,deceleration)
  56:Src/target.c  **** //返り値	: なし
  57:Src/target.c  **** void set_accel_mode ( accel_mode amode )
  58:Src/target.c  **** {
  88              		.loc 1 58 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  59:Src/target.c  **** 	accel_dir_flg = amode;
  93              		.loc 1 59 2 view .LVU9
  94              		.loc 1 59 16 is_stmt 0 view .LVU10
  95 0000 014B     		ldr	r3, .L8
  96 0002 1870     		strb	r0, [r3]
  60:Src/target.c  **** }
  97              		.loc 1 60 1 view .LVU11
  98 0004 7047     		bx	lr
  99              	.L9:
 100 0006 00BF     		.align	2
 101              	.L8:
 102 0008 00000000 		.word	.LANCHOR2
 103              		.cfi_endproc
 104              	.LFE6:
 106              		.section	.text.get_target_move_speed,"ax",%progbits
 107              		.align	1
 108              		.global	get_target_move_speed
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv4-sp-d16
 114              	get_target_move_speed:
 115              	.LFB7:
  61:Src/target.c  **** 
  62:Src/target.c  **** 
  63:Src/target.c  **** //機能	: 目標移動速度[m/s]取得
ARM GAS  C:\Temp\ccP21HMa.s 			page 4


  64:Src/target.c  **** //引数	: なし
  65:Src/target.c  **** //返り値	: 目標移動速度[m/s]
  66:Src/target.c  **** float get_target_move_speed ( void )
  67:Src/target.c  **** {
 116              		.loc 1 67 1 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
  68:Src/target.c  **** 	return target_move_speed;
 121              		.loc 1 68 2 view .LVU13
  69:Src/target.c  **** }
 122              		.loc 1 69 1 is_stmt 0 view .LVU14
 123 0000 014B     		ldr	r3, .L11
 124 0002 93ED000A 		vldr.32	s0, [r3]
 125 0006 7047     		bx	lr
 126              	.L12:
 127              		.align	2
 128              	.L11:
 129 0008 00000000 		.word	.LANCHOR3
 130              		.cfi_endproc
 131              	.LFE7:
 133              		.section	.text.get_target_rotation_speed,"ax",%progbits
 134              		.align	1
 135              		.global	get_target_rotation_speed
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv4-sp-d16
 141              	get_target_rotation_speed:
 142              	.LFB8:
  70:Src/target.c  **** 
  71:Src/target.c  **** //機能	: 目標角速度[m/s]取得
  72:Src/target.c  **** //引数	: なし
  73:Src/target.c  **** //返り値	: 目標角速度[m/s]
  74:Src/target.c  **** float get_target_rotation_speed ( void )
  75:Src/target.c  **** {
 143              		.loc 1 75 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
  76:Src/target.c  **** 	return target_rotation_speed;
 148              		.loc 1 76 2 view .LVU16
  77:Src/target.c  **** }
 149              		.loc 1 77 1 is_stmt 0 view .LVU17
 150 0000 014B     		ldr	r3, .L14
 151 0002 93ED000A 		vldr.32	s0, [r3]
 152 0006 7047     		bx	lr
 153              	.L15:
 154              		.align	2
 155              	.L14:
 156 0008 00000000 		.word	.LANCHOR4
 157              		.cfi_endproc
 158              	.LFE8:
 160              		.section	.text.get_target_length,"ax",%progbits
 161              		.align	1
ARM GAS  C:\Temp\ccP21HMa.s 			page 5


 162              		.global	get_target_length
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	get_target_length:
 169              	.LFB9:
  78:Src/target.c  **** 
  79:Src/target.c  **** //機能	: 目標移動距離取得
  80:Src/target.c  **** //引数	: なし
  81:Src/target.c  **** //返り値	: 目標移動距離
  82:Src/target.c  **** float get_target_length ( void )
  83:Src/target.c  **** {
 170              		.loc 1 83 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
  84:Src/target.c  **** 	return target_length;
 175              		.loc 1 84 2 view .LVU19
  85:Src/target.c  **** }
 176              		.loc 1 85 1 is_stmt 0 view .LVU20
 177 0000 014B     		ldr	r3, .L17
 178 0002 93ED000A 		vldr.32	s0, [r3]
 179 0006 7047     		bx	lr
 180              	.L18:
 181              		.align	2
 182              	.L17:
 183 0008 00000000 		.word	.LANCHOR5
 184              		.cfi_endproc
 185              	.LFE9:
 187              		.section	.text.get_ideal_length,"ax",%progbits
 188              		.align	1
 189              		.global	get_ideal_length
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv4-sp-d16
 195              	get_ideal_length:
 196              	.LFB10:
  86:Src/target.c  **** 
  87:Src/target.c  **** //機能	: 理想移動距離取得
  88:Src/target.c  **** //引数	: なし
  89:Src/target.c  **** //返り値	: 理想移動距離
  90:Src/target.c  **** float get_ideal_length ( void )
  91:Src/target.c  **** {
 197              		.loc 1 91 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
  92:Src/target.c  **** 	return ideal_length;
 202              		.loc 1 92 2 view .LVU22
  93:Src/target.c  **** }
 203              		.loc 1 93 1 is_stmt 0 view .LVU23
 204 0000 014B     		ldr	r3, .L20
 205 0002 93ED000A 		vldr.32	s0, [r3]
ARM GAS  C:\Temp\ccP21HMa.s 			page 6


 206 0006 7047     		bx	lr
 207              	.L21:
 208              		.align	2
 209              	.L20:
 210 0008 00000000 		.word	.LANCHOR6
 211              		.cfi_endproc
 212              	.LFE10:
 214              		.section	.text.get_target_angle,"ax",%progbits
 215              		.align	1
 216              		.global	get_target_angle
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	get_target_angle:
 223              	.LFB11:
  94:Src/target.c  **** 
  95:Src/target.c  **** //機能	: 目標角度取得
  96:Src/target.c  **** //引数	: なし
  97:Src/target.c  **** //返り値	: 目標角度
  98:Src/target.c  **** float get_target_angle ( void )
  99:Src/target.c  **** {
 224              		.loc 1 99 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 100:Src/target.c  **** 	return target_angle;
 229              		.loc 1 100 2 view .LVU25
 101:Src/target.c  **** }
 230              		.loc 1 101 1 is_stmt 0 view .LVU26
 231 0000 014B     		ldr	r3, .L23
 232 0002 93ED000A 		vldr.32	s0, [r3]
 233 0006 7047     		bx	lr
 234              	.L24:
 235              		.align	2
 236              	.L23:
 237 0008 00000000 		.word	.LANCHOR7
 238              		.cfi_endproc
 239              	.LFE11:
 241              		.section	.text.get_ideal_angle,"ax",%progbits
 242              		.align	1
 243              		.global	get_ideal_angle
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	get_ideal_angle:
 250              	.LFB12:
 102:Src/target.c  **** 
 103:Src/target.c  **** //機能	: 理想角度取得
 104:Src/target.c  **** //引数	: なし
 105:Src/target.c  **** //返り値	: 理想角度
 106:Src/target.c  **** float get_ideal_angle ( void )
 107:Src/target.c  **** {
 251              		.loc 1 107 1 is_stmt 1 view -0
 252              		.cfi_startproc
ARM GAS  C:\Temp\ccP21HMa.s 			page 7


 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 108:Src/target.c  **** 	return ideal_angle;
 256              		.loc 1 108 2 view .LVU28
 109:Src/target.c  **** }
 257              		.loc 1 109 1 is_stmt 0 view .LVU29
 258 0000 014B     		ldr	r3, .L26
 259 0002 93ED000A 		vldr.32	s0, [r3]
 260 0006 7047     		bx	lr
 261              	.L27:
 262              		.align	2
 263              	.L26:
 264 0008 00000000 		.word	.LANCHOR8
 265              		.cfi_endproc
 266              	.LFE12:
 268              		.section	.text.set_target_length,"ax",%progbits
 269              		.align	1
 270              		.global	set_target_length
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv4-sp-d16
 276              	set_target_length:
 277              	.LVL3:
 278              	.LFB13:
 110:Src/target.c  **** 
 111:Src/target.c  **** 
 112:Src/target.c  **** 
 113:Src/target.c  **** //機能	: 目標移動距離更新
 114:Src/target.c  **** //引数	: 加算する移動距離[m]
 115:Src/target.c  **** //返り値	: なし
 116:Src/target.c  **** void set_target_length ( float set_length )
 117:Src/target.c  **** {
 279              		.loc 1 117 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 118:Src/target.c  **** 	target_length += set_length;
 284              		.loc 1 118 2 view .LVU31
 285              		.loc 1 118 16 is_stmt 0 view .LVU32
 286 0000 034B     		ldr	r3, .L29
 287 0002 D3ED007A 		vldr.32	s15, [r3]
 288 0006 77EE807A 		vadd.f32	s15, s15, s0
 289 000a C3ED007A 		vstr.32	s15, [r3]
 119:Src/target.c  **** }
 290              		.loc 1 119 1 view .LVU33
 291 000e 7047     		bx	lr
 292              	.L30:
 293              		.align	2
 294              	.L29:
 295 0010 00000000 		.word	.LANCHOR5
 296              		.cfi_endproc
 297              	.LFE13:
 299              		.section	.text.set_target_angle,"ax",%progbits
 300              		.align	1
ARM GAS  C:\Temp\ccP21HMa.s 			page 8


 301              		.global	set_target_angle
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv4-sp-d16
 307              	set_target_angle:
 308              	.LVL4:
 309              	.LFB14:
 120:Src/target.c  **** 
 121:Src/target.c  **** //機能	: 目標角度更新
 122:Src/target.c  **** //引数	: 加算する角度[rad]
 123:Src/target.c  **** //返り値	: なし
 124:Src/target.c  **** void set_target_angle ( float set_angle )
 125:Src/target.c  **** {
 310              		.loc 1 125 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 126:Src/target.c  **** 	target_angle += set_angle;
 315              		.loc 1 126 2 view .LVU35
 316              		.loc 1 126 15 is_stmt 0 view .LVU36
 317 0000 034B     		ldr	r3, .L32
 318 0002 D3ED007A 		vldr.32	s15, [r3]
 319 0006 77EE807A 		vadd.f32	s15, s15, s0
 320 000a C3ED007A 		vstr.32	s15, [r3]
 127:Src/target.c  **** }
 321              		.loc 1 127 1 view .LVU37
 322 000e 7047     		bx	lr
 323              	.L33:
 324              		.align	2
 325              	.L32:
 326 0010 00000000 		.word	.LANCHOR7
 327              		.cfi_endproc
 328              	.LFE14:
 330              		.section	.text.calc_target_move_accel,"ax",%progbits
 331              		.align	1
 332              		.global	calc_target_move_accel
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv4-sp-d16
 338              	calc_target_move_accel:
 339              	.LFB15:
 128:Src/target.c  **** 
 129:Src/target.c  **** 
 130:Src/target.c  **** //機能	: 移動加速度の更新
 131:Src/target.c  **** //引数	: なし
 132:Src/target.c  **** //返り値	: なし
 133:Src/target.c  **** //備考	: 現在移動距離と目標移動距離に応じて、加速度をスイッチ
 134:Src/target.c  **** //		: 1msタスク
 135:Src/target.c  **** void calc_target_move_accel(void)
 136:Src/target.c  **** {
 340              		.loc 1 136 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Temp\ccP21HMa.s 			page 9


 344              		@ link register save eliminated.
 137:Src/target.c  **** 
 138:Src/target.c  **** 	float tm_deccel_length = 0;
 345              		.loc 1 138 2 view .LVU39
 346              	.LVL5:
 139:Src/target.c  **** 
 140:Src/target.c  **** 	switch(accel_dir_flg)
 347              		.loc 1 140 2 view .LVU40
 348 0000 2C4B     		ldr	r3, .L50
 349 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 350 0004 13B1     		cbz	r3, .L35
 351 0006 012B     		cmp	r3, #1
 352 0008 0FD0     		beq	.L36
 353 000a 7047     		bx	lr
 354              	.L35:
 141:Src/target.c  **** 	{
 142:Src/target.c  **** 		case acceleration: //加速モード時、常に加速(リミットに引っ掛かり続ける)
 143:Src/target.c  **** 			switch(move_dir_flg)
 355              		.loc 1 143 4 view .LVU41
 356 000c 2A4B     		ldr	r3, .L50+4
 357 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 358 0010 13B1     		cbz	r3, .L38
 359 0012 012B     		cmp	r3, #1
 360 0014 05D0     		beq	.L39
 361 0016 7047     		bx	lr
 362              	.L38:
 144:Src/target.c  **** 			{
 145:Src/target.c  **** 			case forward_mode:
 146:Src/target.c  **** 				target_move_accel = 1 * move_accel;
 363              		.loc 1 146 5 view .LVU42
 364              		.loc 1 146 23 is_stmt 0 view .LVU43
 365 0018 284B     		ldr	r3, .L50+8
 366 001a 4FF07F52 		mov	r2, #1069547520
 367 001e 1A60     		str	r2, [r3]	@ float
 147:Src/target.c  **** 				break;
 368              		.loc 1 147 5 is_stmt 1 view .LVU44
 369 0020 7047     		bx	lr
 370              	.L39:
 148:Src/target.c  **** 			case backward_mode:
 149:Src/target.c  **** 				target_move_accel = -1 * move_accel;
 371              		.loc 1 149 5 view .LVU45
 372              		.loc 1 149 23 is_stmt 0 view .LVU46
 373 0022 264B     		ldr	r3, .L50+8
 374 0024 264A     		ldr	r2, .L50+12
 375 0026 1A60     		str	r2, [r3]	@ float
 150:Src/target.c  **** 				break;
 376              		.loc 1 150 5 is_stmt 1 view .LVU47
 377 0028 7047     		bx	lr
 378              	.L36:
 151:Src/target.c  **** 			}
 152:Src/target.c  **** 			break;
 153:Src/target.c  **** 
 154:Src/target.c  **** 		case deceleration:
 155:Src/target.c  **** 			switch(move_dir_flg)
 379              		.loc 1 155 4 view .LVU48
 380 002a 234B     		ldr	r3, .L50+4
 381 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Temp\ccP21HMa.s 			page 10


 382 002e 13B1     		cbz	r3, .L40
 383 0030 012B     		cmp	r3, #1
 384 0032 1FD0     		beq	.L41
 385 0034 7047     		bx	lr
 386              	.L40:
 156:Src/target.c  **** 			{
 157:Src/target.c  **** 			case forward_mode:
 158:Src/target.c  **** 				/* 減速に必要な距離算出*/
 159:Src/target.c  **** 				tm_deccel_length = ((target_move_speed*target_move_speed)-(target_move_speed_fin*target_move_sp
 387              		.loc 1 159 5 view .LVU49
 388              		.loc 1 159 43 is_stmt 0 view .LVU50
 389 0036 234B     		ldr	r3, .L50+16
 390 0038 D3ED007A 		vldr.32	s15, [r3]
 391 003c 67EEA77A 		vmul.f32	s15, s15, s15
 392              		.loc 1 159 22 view .LVU51
 393 0040 F0EE086A 		vmov.f32	s13, #3.0e+0
 394 0044 87EEA67A 		vdiv.f32	s14, s15, s13
 395              	.LVL6:
 160:Src/target.c  **** 				
 161:Src/target.c  **** 				//減速開始前
 162:Src/target.c  **** 				if(ideal_length < (target_length - tm_deccel_length))
 396              		.loc 1 162 5 is_stmt 1 view .LVU52
 397              		.loc 1 162 38 is_stmt 0 view .LVU53
 398 0048 1F4B     		ldr	r3, .L50+20
 399 004a D3ED007A 		vldr.32	s15, [r3]
 400 004e 77EEC77A 		vsub.f32	s15, s15, s14
 401              		.loc 1 162 21 view .LVU54
 402 0052 1E4B     		ldr	r3, .L50+24
 403 0054 93ED007A 		vldr.32	s14, [r3]
 404              	.LVL7:
 405              		.loc 1 162 7 view .LVU55
 406 0058 F4EEC77A 		vcmpe.f32	s15, s14
 407 005c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 408 0060 04DD     		ble	.L48
 163:Src/target.c  **** 				{
 164:Src/target.c  **** 					target_move_accel =  1 * move_accel; //リミットにかかるまで加速
 409              		.loc 1 164 6 is_stmt 1 view .LVU56
 410              		.loc 1 164 24 is_stmt 0 view .LVU57
 411 0062 164B     		ldr	r3, .L50+8
 412 0064 4FF07F52 		mov	r2, #1069547520
 413 0068 1A60     		str	r2, [r3]	@ float
 414 006a 7047     		bx	lr
 415              	.L48:
 165:Src/target.c  **** 				}
 166:Src/target.c  **** 				else//減速開始後
 167:Src/target.c  **** 				{																	
 168:Src/target.c  **** 					target_move_accel = -1 * move_accel;
 416              		.loc 1 168 6 is_stmt 1 view .LVU58
 417              		.loc 1 168 24 is_stmt 0 view .LVU59
 418 006c 134B     		ldr	r3, .L50+8
 419 006e 144A     		ldr	r2, .L50+12
 420 0070 1A60     		str	r2, [r3]	@ float
 421 0072 7047     		bx	lr
 422              	.LVL8:
 423              	.L41:
 169:Src/target.c  **** 				}
 170:Src/target.c  **** 				break;
ARM GAS  C:\Temp\ccP21HMa.s 			page 11


 171:Src/target.c  **** 
 172:Src/target.c  **** 			case backward_mode:
 173:Src/target.c  **** 				/* 加速に必要な距離算出*/
 174:Src/target.c  **** 				tm_deccel_length = ((target_move_speed*target_move_speed)-(target_move_speed_fin*target_move_sp
 424              		.loc 1 174 5 is_stmt 1 view .LVU60
 425              		.loc 1 174 43 is_stmt 0 view .LVU61
 426 0074 134B     		ldr	r3, .L50+16
 427 0076 D3ED007A 		vldr.32	s15, [r3]
 428 007a 67EEA77A 		vmul.f32	s15, s15, s15
 429              		.loc 1 174 22 view .LVU62
 430 007e F0EE086A 		vmov.f32	s13, #3.0e+0
 431 0082 87EEA67A 		vdiv.f32	s14, s15, s13
 432              	.LVL9:
 175:Src/target.c  **** 				
 176:Src/target.c  **** 				//加速開始前
 177:Src/target.c  **** 				if(ideal_length > (target_length + tm_deccel_length))
 433              		.loc 1 177 5 is_stmt 1 view .LVU63
 434              		.loc 1 177 38 is_stmt 0 view .LVU64
 435 0086 104B     		ldr	r3, .L50+20
 436 0088 D3ED007A 		vldr.32	s15, [r3]
 437 008c 77EE277A 		vadd.f32	s15, s14, s15
 438              		.loc 1 177 21 view .LVU65
 439 0090 0E4B     		ldr	r3, .L50+24
 440 0092 93ED007A 		vldr.32	s14, [r3]
 441              	.LVL10:
 442              		.loc 1 177 7 view .LVU66
 443 0096 F4EEC77A 		vcmpe.f32	s15, s14
 444 009a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 445 009e 03D5     		bpl	.L49
 178:Src/target.c  **** 				{			
 179:Src/target.c  **** 					target_move_accel = -1 * move_accel; //リミットにかかるまで減速
 446              		.loc 1 179 6 is_stmt 1 view .LVU67
 447              		.loc 1 179 24 is_stmt 0 view .LVU68
 448 00a0 064B     		ldr	r3, .L50+8
 449 00a2 074A     		ldr	r2, .L50+12
 450 00a4 1A60     		str	r2, [r3]	@ float
 451 00a6 7047     		bx	lr
 452              	.L49:
 180:Src/target.c  **** 				}
 181:Src/target.c  **** 				else//加速開始後
 182:Src/target.c  **** 				{												
 183:Src/target.c  **** 					target_move_accel = 1 * move_accel;
 453              		.loc 1 183 6 is_stmt 1 view .LVU69
 454              		.loc 1 183 24 is_stmt 0 view .LVU70
 455 00a8 044B     		ldr	r3, .L50+8
 456 00aa 4FF07F52 		mov	r2, #1069547520
 457 00ae 1A60     		str	r2, [r3]	@ float
 184:Src/target.c  **** 				}
 185:Src/target.c  **** 				break;
 186:Src/target.c  **** 			}
 187:Src/target.c  **** 			break;
 188:Src/target.c  **** 	}
 189:Src/target.c  **** 
 190:Src/target.c  **** }
 458              		.loc 1 190 1 view .LVU71
 459 00b0 7047     		bx	lr
 460              	.L51:
ARM GAS  C:\Temp\ccP21HMa.s 			page 12


 461 00b2 00BF     		.align	2
 462              	.L50:
 463 00b4 00000000 		.word	.LANCHOR2
 464 00b8 00000000 		.word	.LANCHOR0
 465 00bc 00000000 		.word	.LANCHOR9
 466 00c0 0000C0BF 		.word	-1077936128
 467 00c4 00000000 		.word	.LANCHOR3
 468 00c8 00000000 		.word	.LANCHOR5
 469 00cc 00000000 		.word	.LANCHOR6
 470              		.cfi_endproc
 471              	.LFE15:
 473              		.global	__aeabi_f2d
 474              		.global	__aeabi_dmul
 475              		.global	__aeabi_ddiv
 476              		.global	__aeabi_d2f
 477              		.section	.text.calc_rotate_accel,"ax",%progbits
 478              		.align	1
 479              		.global	calc_rotate_accel
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu fpv4-sp-d16
 485              	calc_rotate_accel:
 486              	.LFB16:
 191:Src/target.c  **** 
 192:Src/target.c  **** //機能	: 角加速度の更新
 193:Src/target.c  **** //引数	: なし
 194:Src/target.c  **** //返り値	: なし
 195:Src/target.c  **** //備考	: 現在角度と目標角度に応じて、加速度をスイッチ
 196:Src/target.c  **** //		: 1msタスク
 197:Src/target.c  **** void calc_rotate_accel(void)
 198:Src/target.c  **** {
 487              		.loc 1 198 1 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 38B5     		push	{r3, r4, r5, lr}
 492              	.LCFI0:
 493              		.cfi_def_cfa_offset 16
 494              		.cfi_offset 3, -16
 495              		.cfi_offset 4, -12
 496              		.cfi_offset 5, -8
 497              		.cfi_offset 14, -4
 199:Src/target.c  **** 
 200:Src/target.c  **** 	float tm_deccel_angle = 0;
 498              		.loc 1 200 2 view .LVU73
 499              	.LVL11:
 201:Src/target.c  **** 
 202:Src/target.c  **** 	switch(rotation_dir_flg)
 500              		.loc 1 202 2 view .LVU74
 501 0002 334B     		ldr	r3, .L65+8
 502 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 503 0006 13B1     		cbz	r3, .L53
 504 0008 012B     		cmp	r3, #1
 505 000a 2ED0     		beq	.L54
 506              	.LVL12:
 507              	.L52:
ARM GAS  C:\Temp\ccP21HMa.s 			page 13


 203:Src/target.c  **** 	{
 204:Src/target.c  **** 	case counter_clockwise:
 205:Src/target.c  **** 		/*減速に必要な角度算出*/
 206:Src/target.c  **** 		tm_deccel_angle = 0.5 * target_rotation_speed * target_rotation_speed / rotat_accel;
 207:Src/target.c  **** 		
 208:Src/target.c  **** 		//減速開始前
 209:Src/target.c  **** 		if(ideal_angle < (target_angle - tm_deccel_angle))
 210:Src/target.c  **** 		{			
 211:Src/target.c  **** 			target_rotation_accel =  1 * rotat_accel;
 212:Src/target.c  **** 		}
 213:Src/target.c  **** 		else//減速開始後
 214:Src/target.c  **** 		{																	
 215:Src/target.c  **** 			target_rotation_accel = -1 * rotat_accel;
 216:Src/target.c  **** 		}
 217:Src/target.c  **** 		break;
 218:Src/target.c  **** 
 219:Src/target.c  **** 	case clockwise:
 220:Src/target.c  **** 		/*加速に必要な角度算出*/
 221:Src/target.c  **** 		tm_deccel_angle = 0.5 * target_rotation_speed * target_rotation_speed / rotat_accel;
 222:Src/target.c  **** 		
 223:Src/target.c  **** 		//加速開始前
 224:Src/target.c  **** 		if(ideal_angle > (target_angle + tm_deccel_angle))
 225:Src/target.c  **** 		{
 226:Src/target.c  **** 			target_rotation_accel =  -1 * rotat_accel;
 227:Src/target.c  **** 		}
 228:Src/target.c  **** 		else//加速開始後
 229:Src/target.c  **** 		{
 230:Src/target.c  **** 			target_rotation_accel = 1 * rotat_accel;
 231:Src/target.c  **** 		}
 232:Src/target.c  **** 		break;
 233:Src/target.c  **** 	}
 234:Src/target.c  **** 
 235:Src/target.c  **** }
 508              		.loc 1 235 1 is_stmt 0 view .LVU75
 509 000c 38BD     		pop	{r3, r4, r5, pc}
 510              	.LVL13:
 511              	.L53:
 206:Src/target.c  **** 		
 512              		.loc 1 206 3 is_stmt 1 view .LVU76
 206:Src/target.c  **** 		
 513              		.loc 1 206 25 is_stmt 0 view .LVU77
 514 000e 314B     		ldr	r3, .L65+12
 515 0010 1868     		ldr	r0, [r3]	@ float
 516 0012 FFF7FEFF 		bl	__aeabi_f2d
 517              	.LVL14:
 518 0016 0446     		mov	r4, r0
 519 0018 0D46     		mov	r5, r1
 520 001a 0022     		movs	r2, #0
 521 001c 2E4B     		ldr	r3, .L65+16
 522 001e FFF7FEFF 		bl	__aeabi_dmul
 523              	.LVL15:
 524 0022 0246     		mov	r2, r0
 525 0024 0B46     		mov	r3, r1
 206:Src/target.c  **** 		
 526              		.loc 1 206 49 view .LVU78
 527 0026 2046     		mov	r0, r4
 528 0028 2946     		mov	r1, r5
ARM GAS  C:\Temp\ccP21HMa.s 			page 14


 529 002a FFF7FEFF 		bl	__aeabi_dmul
 530              	.LVL16:
 206:Src/target.c  **** 		
 531              		.loc 1 206 73 view .LVU79
 532 002e 26A3     		adr	r3, .L65
 533 0030 D3E90023 		ldrd	r2, [r3]
 534 0034 FFF7FEFF 		bl	__aeabi_ddiv
 535              	.LVL17:
 206:Src/target.c  **** 		
 536              		.loc 1 206 19 view .LVU80
 537 0038 FFF7FEFF 		bl	__aeabi_d2f
 538              	.LVL18:
 539 003c 07EE100A 		vmov	s14, r0
 540              	.LVL19:
 209:Src/target.c  **** 		{			
 541              		.loc 1 209 3 is_stmt 1 view .LVU81
 209:Src/target.c  **** 		{			
 542              		.loc 1 209 34 is_stmt 0 view .LVU82
 543 0040 264B     		ldr	r3, .L65+20
 544 0042 D3ED007A 		vldr.32	s15, [r3]
 545 0046 77EEC77A 		vsub.f32	s15, s15, s14
 209:Src/target.c  **** 		{			
 546              		.loc 1 209 18 view .LVU83
 547 004a 254B     		ldr	r3, .L65+24
 548 004c 93ED007A 		vldr.32	s14, [r3]
 209:Src/target.c  **** 		{			
 549              		.loc 1 209 5 view .LVU84
 550 0050 F4EEC77A 		vcmpe.f32	s15, s14
 551 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 552 0058 03DD     		ble	.L62
 211:Src/target.c  **** 		}
 553              		.loc 1 211 4 is_stmt 1 view .LVU85
 211:Src/target.c  **** 		}
 554              		.loc 1 211 26 is_stmt 0 view .LVU86
 555 005a 224B     		ldr	r3, .L65+28
 556 005c 224A     		ldr	r2, .L65+32
 557 005e 1A60     		str	r2, [r3]	@ float
 558 0060 D4E7     		b	.L52
 559              	.L62:
 215:Src/target.c  **** 		}
 560              		.loc 1 215 4 is_stmt 1 view .LVU87
 215:Src/target.c  **** 		}
 561              		.loc 1 215 26 is_stmt 0 view .LVU88
 562 0062 204B     		ldr	r3, .L65+28
 563 0064 214A     		ldr	r2, .L65+36
 564 0066 1A60     		str	r2, [r3]	@ float
 565 0068 D0E7     		b	.L52
 566              	.LVL20:
 567              	.L54:
 221:Src/target.c  **** 		
 568              		.loc 1 221 3 is_stmt 1 view .LVU89
 221:Src/target.c  **** 		
 569              		.loc 1 221 25 is_stmt 0 view .LVU90
 570 006a 1A4B     		ldr	r3, .L65+12
 571 006c 1868     		ldr	r0, [r3]	@ float
 572 006e FFF7FEFF 		bl	__aeabi_f2d
 573              	.LVL21:
ARM GAS  C:\Temp\ccP21HMa.s 			page 15


 574 0072 0446     		mov	r4, r0
 575 0074 0D46     		mov	r5, r1
 576 0076 0022     		movs	r2, #0
 577 0078 174B     		ldr	r3, .L65+16
 578 007a FFF7FEFF 		bl	__aeabi_dmul
 579              	.LVL22:
 580 007e 0246     		mov	r2, r0
 581 0080 0B46     		mov	r3, r1
 221:Src/target.c  **** 		
 582              		.loc 1 221 49 view .LVU91
 583 0082 2046     		mov	r0, r4
 584 0084 2946     		mov	r1, r5
 585 0086 FFF7FEFF 		bl	__aeabi_dmul
 586              	.LVL23:
 221:Src/target.c  **** 		
 587              		.loc 1 221 73 view .LVU92
 588 008a 0FA3     		adr	r3, .L65
 589 008c D3E90023 		ldrd	r2, [r3]
 590 0090 FFF7FEFF 		bl	__aeabi_ddiv
 591              	.LVL24:
 221:Src/target.c  **** 		
 592              		.loc 1 221 19 view .LVU93
 593 0094 FFF7FEFF 		bl	__aeabi_d2f
 594              	.LVL25:
 595 0098 07EE900A 		vmov	s15, r0
 596              	.LVL26:
 224:Src/target.c  **** 		{
 597              		.loc 1 224 3 is_stmt 1 view .LVU94
 224:Src/target.c  **** 		{
 598              		.loc 1 224 34 is_stmt 0 view .LVU95
 599 009c 0F4B     		ldr	r3, .L65+20
 600 009e 93ED007A 		vldr.32	s14, [r3]
 601 00a2 77EE877A 		vadd.f32	s15, s15, s14
 224:Src/target.c  **** 		{
 602              		.loc 1 224 18 view .LVU96
 603 00a6 0E4B     		ldr	r3, .L65+24
 604 00a8 93ED007A 		vldr.32	s14, [r3]
 224:Src/target.c  **** 		{
 605              		.loc 1 224 5 view .LVU97
 606 00ac F4EEC77A 		vcmpe.f32	s15, s14
 607 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 608 00b4 03D5     		bpl	.L63
 226:Src/target.c  **** 		}
 609              		.loc 1 226 4 is_stmt 1 view .LVU98
 226:Src/target.c  **** 		}
 610              		.loc 1 226 26 is_stmt 0 view .LVU99
 611 00b6 0B4B     		ldr	r3, .L65+28
 612 00b8 0C4A     		ldr	r2, .L65+36
 613 00ba 1A60     		str	r2, [r3]	@ float
 614 00bc A6E7     		b	.L52
 615              	.L63:
 230:Src/target.c  **** 		}
 616              		.loc 1 230 4 is_stmt 1 view .LVU100
 230:Src/target.c  **** 		}
 617              		.loc 1 230 26 is_stmt 0 view .LVU101
 618 00be 094B     		ldr	r3, .L65+28
 619 00c0 094A     		ldr	r2, .L65+32
ARM GAS  C:\Temp\ccP21HMa.s 			page 16


 620 00c2 1A60     		str	r2, [r3]	@ float
 621              		.loc 1 235 1 view .LVU102
 622 00c4 A2E7     		b	.L52
 623              	.L66:
 624 00c6 00BF     		.align	3
 625              	.L65:
 626 00c8 00000040 		.word	1073741824
 627 00cc FB211940 		.word	1075388923
 628 00d0 00000000 		.word	.LANCHOR1
 629 00d4 00000000 		.word	.LANCHOR4
 630 00d8 0000E03F 		.word	1071644672
 631 00dc 00000000 		.word	.LANCHOR7
 632 00e0 00000000 		.word	.LANCHOR8
 633 00e4 00000000 		.word	.LANCHOR10
 634 00e8 DA0FC940 		.word	1086918618
 635 00ec DA0FC9C0 		.word	-1060565030
 636              		.cfi_endproc
 637              	.LFE16:
 639              		.global	__aeabi_dadd
 640              		.section	.text.calc_target_move_speed,"ax",%progbits
 641              		.align	1
 642              		.global	calc_target_move_speed
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 646              		.fpu fpv4-sp-d16
 648              	calc_target_move_speed:
 649              	.LFB17:
 236:Src/target.c  **** 
 237:Src/target.c  **** 
 238:Src/target.c  **** //機能	: 目標速度更新
 239:Src/target.c  **** //引数	: なし
 240:Src/target.c  **** //返り値	: なし
 241:Src/target.c  **** //備考	:1msタスク
 242:Src/target.c  **** void calc_target_move_speed(void)
 243:Src/target.c  **** {
 650              		.loc 1 243 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654 0000 70B5     		push	{r4, r5, r6, lr}
 655              	.LCFI1:
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 4, -16
 658              		.cfi_offset 5, -12
 659              		.cfi_offset 6, -8
 660              		.cfi_offset 14, -4
 244:Src/target.c  **** 
 245:Src/target.c  **** 	/*m加速処理*/
 246:Src/target.c  **** 	target_move_speed += target_move_accel * 0.001; //1ms分の加速加算
 661              		.loc 1 246 2 view .LVU104
 662              		.loc 1 246 41 is_stmt 0 view .LVU105
 663 0002 314B     		ldr	r3, .L85+8
 664 0004 1868     		ldr	r0, [r3]	@ float
 665 0006 FFF7FEFF 		bl	__aeabi_f2d
 666              	.LVL27:
 667 000a 2DA3     		adr	r3, .L85
ARM GAS  C:\Temp\ccP21HMa.s 			page 17


 668 000c D3E90023 		ldrd	r2, [r3]
 669 0010 FFF7FEFF 		bl	__aeabi_dmul
 670              	.LVL28:
 671 0014 0446     		mov	r4, r0
 672 0016 0D46     		mov	r5, r1
 673              		.loc 1 246 20 view .LVU106
 674 0018 2C4E     		ldr	r6, .L85+12
 675 001a 3068     		ldr	r0, [r6]	@ float
 676 001c FFF7FEFF 		bl	__aeabi_f2d
 677              	.LVL29:
 678 0020 2246     		mov	r2, r4
 679 0022 2B46     		mov	r3, r5
 680 0024 FFF7FEFF 		bl	__aeabi_dadd
 681              	.LVL30:
 682 0028 FFF7FEFF 		bl	__aeabi_d2f
 683              	.LVL31:
 684 002c 07EE900A 		vmov	s15, r0
 685 0030 3060     		str	r0, [r6]	@ float
 247:Src/target.c  **** 
 248:Src/target.c  **** 	/*limit処理*/
 249:Src/target.c  **** 	switch(move_dir_flg)
 686              		.loc 1 249 2 is_stmt 1 view .LVU107
 687 0032 274B     		ldr	r3, .L85+16
 688 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 689 0036 C3B1     		cbz	r3, .L68
 690 0038 012B     		cmp	r3, #1
 691 003a 2AD0     		beq	.L69
 692              	.L70:
 250:Src/target.c  **** 	{
 251:Src/target.c  **** 		case forward_mode:
 252:Src/target.c  **** 
 253:Src/target.c  **** 			if (target_move_speed < 0)	//下限スピード処理
 254:Src/target.c  **** 					{
 255:Src/target.c  **** 						target_move_speed = 0;
 256:Src/target.c  **** 					}
 257:Src/target.c  **** 					else if (target_move_speed > move_speed_max)//上限スピード処理
 258:Src/target.c  **** 					{
 259:Src/target.c  **** 						target_move_speed = move_speed_max;
 260:Src/target.c  **** 					}
 261:Src/target.c  **** 			break;
 262:Src/target.c  **** 
 263:Src/target.c  **** 		case backward_mode:
 264:Src/target.c  **** 			if (target_move_speed > 0)	//上限スピード処理
 265:Src/target.c  **** 				{
 266:Src/target.c  **** 					target_move_speed = 0;
 267:Src/target.c  **** 				}
 268:Src/target.c  **** 				else if (target_move_speed < -1 * move_speed_max)//下限スピード処理
 269:Src/target.c  **** 				{
 270:Src/target.c  **** 					target_move_speed = -1 * move_speed_max;
 271:Src/target.c  **** 				}
 272:Src/target.c  **** 			break;
 273:Src/target.c  **** 	}
 274:Src/target.c  **** 
 275:Src/target.c  **** 	//理想移動距離算出
 276:Src/target.c  **** 	ideal_length += target_move_speed * 0.001;
 693              		.loc 1 276 2 view .LVU108
 694              		.loc 1 276 36 is_stmt 0 view .LVU109
ARM GAS  C:\Temp\ccP21HMa.s 			page 18


 695 003c 234B     		ldr	r3, .L85+12
 696 003e 1868     		ldr	r0, [r3]	@ float
 697 0040 FFF7FEFF 		bl	__aeabi_f2d
 698              	.LVL32:
 699 0044 1EA3     		adr	r3, .L85
 700 0046 D3E90023 		ldrd	r2, [r3]
 701 004a FFF7FEFF 		bl	__aeabi_dmul
 702              	.LVL33:
 703 004e 0446     		mov	r4, r0
 704 0050 0D46     		mov	r5, r1
 705              		.loc 1 276 15 view .LVU110
 706 0052 204E     		ldr	r6, .L85+20
 707 0054 3068     		ldr	r0, [r6]	@ float
 708 0056 FFF7FEFF 		bl	__aeabi_f2d
 709              	.LVL34:
 710 005a 2246     		mov	r2, r4
 711 005c 2B46     		mov	r3, r5
 712 005e FFF7FEFF 		bl	__aeabi_dadd
 713              	.LVL35:
 714 0062 FFF7FEFF 		bl	__aeabi_d2f
 715              	.LVL36:
 716 0066 3060     		str	r0, [r6]	@ float
 277:Src/target.c  **** 
 278:Src/target.c  **** }
 717              		.loc 1 278 1 view .LVU111
 718 0068 70BD     		pop	{r4, r5, r6, pc}
 719              	.L68:
 253:Src/target.c  **** 					{
 720              		.loc 1 253 4 is_stmt 1 view .LVU112
 253:Src/target.c  **** 					{
 721              		.loc 1 253 7 is_stmt 0 view .LVU113
 722 006a F5EEC07A 		vcmpe.f32	s15, #0
 723 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 724 0072 0AD4     		bmi	.L84
 257:Src/target.c  **** 					{
 725              		.loc 1 257 11 is_stmt 1 view .LVU114
 257:Src/target.c  **** 					{
 726              		.loc 1 257 14 is_stmt 0 view .LVU115
 727 0074 9FED187A 		vldr.32	s14, .L85+24
 728 0078 F4EEC77A 		vcmpe.f32	s15, s14
 729 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 730 0080 DCDD     		ble	.L70
 259:Src/target.c  **** 					}
 731              		.loc 1 259 7 is_stmt 1 view .LVU116
 259:Src/target.c  **** 					}
 732              		.loc 1 259 25 is_stmt 0 view .LVU117
 733 0082 124B     		ldr	r3, .L85+12
 734 0084 83ED007A 		vstr.32	s14, [r3]
 735 0088 D8E7     		b	.L70
 736              	.L84:
 255:Src/target.c  **** 					}
 737              		.loc 1 255 7 is_stmt 1 view .LVU118
 255:Src/target.c  **** 					}
 738              		.loc 1 255 25 is_stmt 0 view .LVU119
 739 008a 104B     		ldr	r3, .L85+12
 740 008c 0022     		movs	r2, #0
 741 008e 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Temp\ccP21HMa.s 			page 19


 742 0090 D4E7     		b	.L70
 743              	.L69:
 264:Src/target.c  **** 				{
 744              		.loc 1 264 4 is_stmt 1 view .LVU120
 264:Src/target.c  **** 				{
 745              		.loc 1 264 7 is_stmt 0 view .LVU121
 746 0092 F5EEC07A 		vcmpe.f32	s15, #0
 747 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 748 009a 03DD     		ble	.L82
 266:Src/target.c  **** 				}
 749              		.loc 1 266 6 is_stmt 1 view .LVU122
 266:Src/target.c  **** 				}
 750              		.loc 1 266 24 is_stmt 0 view .LVU123
 751 009c 0B4B     		ldr	r3, .L85+12
 752 009e 0022     		movs	r2, #0
 753 00a0 1A60     		str	r2, [r3]	@ float
 754 00a2 CBE7     		b	.L70
 755              	.L82:
 268:Src/target.c  **** 				{
 756              		.loc 1 268 10 is_stmt 1 view .LVU124
 268:Src/target.c  **** 				{
 757              		.loc 1 268 13 is_stmt 0 view .LVU125
 758 00a4 9FED0D7A 		vldr.32	s14, .L85+28
 759 00a8 F4EEC77A 		vcmpe.f32	s15, s14
 760 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 761 00b0 C4D5     		bpl	.L70
 270:Src/target.c  **** 				}
 762              		.loc 1 270 6 is_stmt 1 view .LVU126
 270:Src/target.c  **** 				}
 763              		.loc 1 270 24 is_stmt 0 view .LVU127
 764 00b2 064B     		ldr	r3, .L85+12
 765 00b4 83ED007A 		vstr.32	s14, [r3]
 766 00b8 C0E7     		b	.L70
 767              	.L86:
 768 00ba 00BFAFF3 		.align	3
 768      0080
 769              	.L85:
 770 00c0 FCA9F1D2 		.word	-755914244
 771 00c4 4D62503F 		.word	1062232653
 772 00c8 00000000 		.word	.LANCHOR9
 773 00cc 00000000 		.word	.LANCHOR3
 774 00d0 00000000 		.word	.LANCHOR0
 775 00d4 00000000 		.word	.LANCHOR6
 776 00d8 9A99993E 		.word	1050253722
 777 00dc 9A9999BE 		.word	-1097229926
 778              		.cfi_endproc
 779              	.LFE17:
 781              		.section	.text.calc_target_rotation_speed,"ax",%progbits
 782              		.align	1
 783              		.global	calc_target_rotation_speed
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 787              		.fpu fpv4-sp-d16
 789              	calc_target_rotation_speed:
 790              	.LFB18:
 279:Src/target.c  **** 
ARM GAS  C:\Temp\ccP21HMa.s 			page 20


 280:Src/target.c  **** //機能	: 目標角速度を更新する
 281:Src/target.c  **** //引数	: なし:
 282:Src/target.c  **** //返り値	: なし
 283:Src/target.c  **** //備考	:1msタスク
 284:Src/target.c  **** void calc_target_rotation_speed ( void )
 285:Src/target.c  **** {
 791              		.loc 1 285 1 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795 0000 70B5     		push	{r4, r5, r6, lr}
 796              	.LCFI2:
 797              		.cfi_def_cfa_offset 16
 798              		.cfi_offset 4, -16
 799              		.cfi_offset 5, -12
 800              		.cfi_offset 6, -8
 801              		.cfi_offset 14, -4
 286:Src/target.c  **** 	target_rotation_speed += target_rotation_accel * 0.001; //1ms分の角加速度加算
 802              		.loc 1 286 2 view .LVU129
 803              		.loc 1 286 49 is_stmt 0 view .LVU130
 804 0002 314B     		ldr	r3, .L105+8
 805 0004 1868     		ldr	r0, [r3]	@ float
 806 0006 FFF7FEFF 		bl	__aeabi_f2d
 807              	.LVL37:
 808 000a 2DA3     		adr	r3, .L105
 809 000c D3E90023 		ldrd	r2, [r3]
 810 0010 FFF7FEFF 		bl	__aeabi_dmul
 811              	.LVL38:
 812 0014 0446     		mov	r4, r0
 813 0016 0D46     		mov	r5, r1
 814              		.loc 1 286 24 view .LVU131
 815 0018 2C4E     		ldr	r6, .L105+12
 816 001a 3068     		ldr	r0, [r6]	@ float
 817 001c FFF7FEFF 		bl	__aeabi_f2d
 818              	.LVL39:
 819 0020 2246     		mov	r2, r4
 820 0022 2B46     		mov	r3, r5
 821 0024 FFF7FEFF 		bl	__aeabi_dadd
 822              	.LVL40:
 823 0028 FFF7FEFF 		bl	__aeabi_d2f
 824              	.LVL41:
 825 002c 07EE900A 		vmov	s15, r0
 826 0030 3060     		str	r0, [r6]	@ float
 287:Src/target.c  **** 
 288:Src/target.c  **** 	switch(rotation_dir_flg)
 827              		.loc 1 288 2 is_stmt 1 view .LVU132
 828 0032 274B     		ldr	r3, .L105+16
 829 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0036 C3B1     		cbz	r3, .L88
 831 0038 012B     		cmp	r3, #1
 832 003a 2AD0     		beq	.L89
 833              	.L90:
 289:Src/target.c  **** 		{
 290:Src/target.c  **** 			case counter_clockwise:
 291:Src/target.c  **** 
 292:Src/target.c  **** 				if (target_rotation_speed < 0)	//m 下限スピード処理
 293:Src/target.c  **** 						{
ARM GAS  C:\Temp\ccP21HMa.s 			page 21


 294:Src/target.c  **** 							target_rotation_speed = 0;
 295:Src/target.c  **** 						}
 296:Src/target.c  **** 						else if (target_rotation_speed > rotat_speed_max)//上限スピード処理
 297:Src/target.c  **** 						{
 298:Src/target.c  **** 							target_rotation_speed = rotat_speed_max;
 299:Src/target.c  **** 						}
 300:Src/target.c  **** 				break;
 301:Src/target.c  **** 
 302:Src/target.c  **** 			case clockwise:
 303:Src/target.c  **** 				if (target_rotation_speed > 0)	//m 上限スピード処理
 304:Src/target.c  **** 					{
 305:Src/target.c  **** 						target_rotation_speed = 0;
 306:Src/target.c  **** 					}
 307:Src/target.c  **** 					else if (target_rotation_speed < -1 * rotat_speed_max)//下限スピード処理
 308:Src/target.c  **** 					{
 309:Src/target.c  **** 						target_rotation_speed = -1 * rotat_speed_max;
 310:Src/target.c  **** 					}
 311:Src/target.c  **** 				break;
 312:Src/target.c  **** 		}
 313:Src/target.c  **** 
 314:Src/target.c  **** 	ideal_angle += target_rotation_speed * 0.001;
 834              		.loc 1 314 2 view .LVU133
 835              		.loc 1 314 39 is_stmt 0 view .LVU134
 836 003c 234B     		ldr	r3, .L105+12
 837 003e 1868     		ldr	r0, [r3]	@ float
 838 0040 FFF7FEFF 		bl	__aeabi_f2d
 839              	.LVL42:
 840 0044 1EA3     		adr	r3, .L105
 841 0046 D3E90023 		ldrd	r2, [r3]
 842 004a FFF7FEFF 		bl	__aeabi_dmul
 843              	.LVL43:
 844 004e 0446     		mov	r4, r0
 845 0050 0D46     		mov	r5, r1
 846              		.loc 1 314 14 view .LVU135
 847 0052 204E     		ldr	r6, .L105+20
 848 0054 3068     		ldr	r0, [r6]	@ float
 849 0056 FFF7FEFF 		bl	__aeabi_f2d
 850              	.LVL44:
 851 005a 2246     		mov	r2, r4
 852 005c 2B46     		mov	r3, r5
 853 005e FFF7FEFF 		bl	__aeabi_dadd
 854              	.LVL45:
 855 0062 FFF7FEFF 		bl	__aeabi_d2f
 856              	.LVL46:
 857 0066 3060     		str	r0, [r6]	@ float
 315:Src/target.c  **** 
 316:Src/target.c  **** }
 858              		.loc 1 316 1 view .LVU136
 859 0068 70BD     		pop	{r4, r5, r6, pc}
 860              	.L88:
 292:Src/target.c  **** 						{
 861              		.loc 1 292 5 is_stmt 1 view .LVU137
 292:Src/target.c  **** 						{
 862              		.loc 1 292 8 is_stmt 0 view .LVU138
 863 006a F5EEC07A 		vcmpe.f32	s15, #0
 864 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 865 0072 0AD4     		bmi	.L104
ARM GAS  C:\Temp\ccP21HMa.s 			page 22


 296:Src/target.c  **** 						{
 866              		.loc 1 296 12 is_stmt 1 view .LVU139
 296:Src/target.c  **** 						{
 867              		.loc 1 296 15 is_stmt 0 view .LVU140
 868 0074 9FED187A 		vldr.32	s14, .L105+24
 869 0078 F4EEC77A 		vcmpe.f32	s15, s14
 870 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 871 0080 DCDD     		ble	.L90
 298:Src/target.c  **** 						}
 872              		.loc 1 298 8 is_stmt 1 view .LVU141
 298:Src/target.c  **** 						}
 873              		.loc 1 298 30 is_stmt 0 view .LVU142
 874 0082 124B     		ldr	r3, .L105+12
 875 0084 83ED007A 		vstr.32	s14, [r3]
 876 0088 D8E7     		b	.L90
 877              	.L104:
 294:Src/target.c  **** 						}
 878              		.loc 1 294 8 is_stmt 1 view .LVU143
 294:Src/target.c  **** 						}
 879              		.loc 1 294 30 is_stmt 0 view .LVU144
 880 008a 104B     		ldr	r3, .L105+12
 881 008c 0022     		movs	r2, #0
 882 008e 1A60     		str	r2, [r3]	@ float
 883 0090 D4E7     		b	.L90
 884              	.L89:
 303:Src/target.c  **** 					{
 885              		.loc 1 303 5 is_stmt 1 view .LVU145
 303:Src/target.c  **** 					{
 886              		.loc 1 303 8 is_stmt 0 view .LVU146
 887 0092 F5EEC07A 		vcmpe.f32	s15, #0
 888 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 889 009a 03DD     		ble	.L102
 305:Src/target.c  **** 					}
 890              		.loc 1 305 7 is_stmt 1 view .LVU147
 305:Src/target.c  **** 					}
 891              		.loc 1 305 29 is_stmt 0 view .LVU148
 892 009c 0B4B     		ldr	r3, .L105+12
 893 009e 0022     		movs	r2, #0
 894 00a0 1A60     		str	r2, [r3]	@ float
 895 00a2 CBE7     		b	.L90
 896              	.L102:
 307:Src/target.c  **** 					{
 897              		.loc 1 307 11 is_stmt 1 view .LVU149
 307:Src/target.c  **** 					{
 898              		.loc 1 307 14 is_stmt 0 view .LVU150
 899 00a4 9FED0D7A 		vldr.32	s14, .L105+28
 900 00a8 F4EEC77A 		vcmpe.f32	s15, s14
 901 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 902 00b0 C4D5     		bpl	.L90
 309:Src/target.c  **** 					}
 903              		.loc 1 309 7 is_stmt 1 view .LVU151
 309:Src/target.c  **** 					}
 904              		.loc 1 309 29 is_stmt 0 view .LVU152
 905 00b2 064B     		ldr	r3, .L105+12
 906 00b4 83ED007A 		vstr.32	s14, [r3]
 907 00b8 C0E7     		b	.L90
 908              	.L106:
ARM GAS  C:\Temp\ccP21HMa.s 			page 23


 909 00ba 00BFAFF3 		.align	3
 909      0080
 910              	.L105:
 911 00c0 FCA9F1D2 		.word	-755914244
 912 00c4 4D62503F 		.word	1062232653
 913 00c8 00000000 		.word	.LANCHOR10
 914 00cc 00000000 		.word	.LANCHOR4
 915 00d0 00000000 		.word	.LANCHOR1
 916 00d4 00000000 		.word	.LANCHOR8
 917 00d8 DA0FC940 		.word	1086918618
 918 00dc DA0FC9C0 		.word	-1060565030
 919              		.cfi_endproc
 920              	.LFE18:
 922              		.section	.text.target_1ms,"ax",%progbits
 923              		.align	1
 924              		.global	target_1ms
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv4-sp-d16
 930              	target_1ms:
 931              	.LFB3:
  31:Src/target.c  **** 	calc_target_move_accel();		//移動加速度更新
 932              		.loc 1 31 1 is_stmt 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 0000 08B5     		push	{r3, lr}
 937              	.LCFI3:
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 3, -8
 940              		.cfi_offset 14, -4
  32:Src/target.c  **** 	calc_rotate_accel();			//回転角速度更新
 941              		.loc 1 32 2 view .LVU154
 942 0002 FFF7FEFF 		bl	calc_target_move_accel
 943              	.LVL47:
  33:Src/target.c  **** 	calc_target_move_speed();		//目標移動速度更新
 944              		.loc 1 33 2 view .LVU155
 945 0006 FFF7FEFF 		bl	calc_rotate_accel
 946              	.LVL48:
  34:Src/target.c  **** 	calc_target_rotation_speed();	//目標角速度更新
 947              		.loc 1 34 2 view .LVU156
 948 000a FFF7FEFF 		bl	calc_target_move_speed
 949              	.LVL49:
  35:Src/target.c  **** }
 950              		.loc 1 35 2 view .LVU157
 951 000e FFF7FEFF 		bl	calc_target_rotation_speed
 952              	.LVL50:
  36:Src/target.c  **** 
 953              		.loc 1 36 1 is_stmt 0 view .LVU158
 954 0012 08BD     		pop	{r3, pc}
 955              		.cfi_endproc
 956              	.LFE3:
 958              		.section	.bss.accel_dir_flg,"aw",%nobits
 959              		.set	.LANCHOR2,. + 0
 962              	accel_dir_flg:
 963 0000 00       		.space	1
ARM GAS  C:\Temp\ccP21HMa.s 			page 24


 964              		.section	.bss.ideal_angle,"aw",%nobits
 965              		.align	2
 966              		.set	.LANCHOR8,. + 0
 969              	ideal_angle:
 970 0000 00000000 		.space	4
 971              		.section	.bss.ideal_length,"aw",%nobits
 972              		.align	2
 973              		.set	.LANCHOR6,. + 0
 976              	ideal_length:
 977 0000 00000000 		.space	4
 978              		.section	.bss.move_dir_flg,"aw",%nobits
 979              		.set	.LANCHOR0,. + 0
 982              	move_dir_flg:
 983 0000 00       		.space	1
 984              		.section	.bss.rotation_dir_flg,"aw",%nobits
 985              		.set	.LANCHOR1,. + 0
 988              	rotation_dir_flg:
 989 0000 00       		.space	1
 990              		.section	.bss.target_angle,"aw",%nobits
 991              		.align	2
 992              		.set	.LANCHOR7,. + 0
 995              	target_angle:
 996 0000 00000000 		.space	4
 997              		.section	.bss.target_length,"aw",%nobits
 998              		.align	2
 999              		.set	.LANCHOR5,. + 0
 1002              	target_length:
 1003 0000 00000000 		.space	4
 1004              		.section	.bss.target_move_accel,"aw",%nobits
 1005              		.align	2
 1006              		.set	.LANCHOR9,. + 0
 1009              	target_move_accel:
 1010 0000 00000000 		.space	4
 1011              		.section	.bss.target_move_speed,"aw",%nobits
 1012              		.align	2
 1013              		.set	.LANCHOR3,. + 0
 1016              	target_move_speed:
 1017 0000 00000000 		.space	4
 1018              		.section	.bss.target_rotation_accel,"aw",%nobits
 1019              		.align	2
 1020              		.set	.LANCHOR10,. + 0
 1023              	target_rotation_accel:
 1024 0000 00000000 		.space	4
 1025              		.section	.bss.target_rotation_speed,"aw",%nobits
 1026              		.align	2
 1027              		.set	.LANCHOR4,. + 0
 1030              	target_rotation_speed:
 1031 0000 00000000 		.space	4
 1032              		.text
 1033              	.Letext0:
 1034              		.file 2 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 1035              		.file 3 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 1036              		.file 4 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\st
 1037              		.file 5 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 1038              		.file 6 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\math.h"
 1039              		.file 7 "Inc/target.h"
ARM GAS  C:\Temp\ccP21HMa.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 target.c
  C:\Temp\ccP21HMa.s:18     .text.set_direction_mode:00000000 $t
  C:\Temp\ccP21HMa.s:26     .text.set_direction_mode:00000000 set_direction_mode
  C:\Temp\ccP21HMa.s:44     .text.set_direction_mode:00000008 $d
  C:\Temp\ccP21HMa.s:49     .text.set_rotation_mode:00000000 $t
  C:\Temp\ccP21HMa.s:56     .text.set_rotation_mode:00000000 set_rotation_mode
  C:\Temp\ccP21HMa.s:73     .text.set_rotation_mode:00000008 $d
  C:\Temp\ccP21HMa.s:78     .text.set_accel_mode:00000000 $t
  C:\Temp\ccP21HMa.s:85     .text.set_accel_mode:00000000 set_accel_mode
  C:\Temp\ccP21HMa.s:102    .text.set_accel_mode:00000008 $d
  C:\Temp\ccP21HMa.s:107    .text.get_target_move_speed:00000000 $t
  C:\Temp\ccP21HMa.s:114    .text.get_target_move_speed:00000000 get_target_move_speed
  C:\Temp\ccP21HMa.s:129    .text.get_target_move_speed:00000008 $d
  C:\Temp\ccP21HMa.s:134    .text.get_target_rotation_speed:00000000 $t
  C:\Temp\ccP21HMa.s:141    .text.get_target_rotation_speed:00000000 get_target_rotation_speed
  C:\Temp\ccP21HMa.s:156    .text.get_target_rotation_speed:00000008 $d
  C:\Temp\ccP21HMa.s:161    .text.get_target_length:00000000 $t
  C:\Temp\ccP21HMa.s:168    .text.get_target_length:00000000 get_target_length
  C:\Temp\ccP21HMa.s:183    .text.get_target_length:00000008 $d
  C:\Temp\ccP21HMa.s:188    .text.get_ideal_length:00000000 $t
  C:\Temp\ccP21HMa.s:195    .text.get_ideal_length:00000000 get_ideal_length
  C:\Temp\ccP21HMa.s:210    .text.get_ideal_length:00000008 $d
  C:\Temp\ccP21HMa.s:215    .text.get_target_angle:00000000 $t
  C:\Temp\ccP21HMa.s:222    .text.get_target_angle:00000000 get_target_angle
  C:\Temp\ccP21HMa.s:237    .text.get_target_angle:00000008 $d
  C:\Temp\ccP21HMa.s:242    .text.get_ideal_angle:00000000 $t
  C:\Temp\ccP21HMa.s:249    .text.get_ideal_angle:00000000 get_ideal_angle
  C:\Temp\ccP21HMa.s:264    .text.get_ideal_angle:00000008 $d
  C:\Temp\ccP21HMa.s:269    .text.set_target_length:00000000 $t
  C:\Temp\ccP21HMa.s:276    .text.set_target_length:00000000 set_target_length
  C:\Temp\ccP21HMa.s:295    .text.set_target_length:00000010 $d
  C:\Temp\ccP21HMa.s:300    .text.set_target_angle:00000000 $t
  C:\Temp\ccP21HMa.s:307    .text.set_target_angle:00000000 set_target_angle
  C:\Temp\ccP21HMa.s:326    .text.set_target_angle:00000010 $d
  C:\Temp\ccP21HMa.s:331    .text.calc_target_move_accel:00000000 $t
  C:\Temp\ccP21HMa.s:338    .text.calc_target_move_accel:00000000 calc_target_move_accel
  C:\Temp\ccP21HMa.s:463    .text.calc_target_move_accel:000000b4 $d
  C:\Temp\ccP21HMa.s:478    .text.calc_rotate_accel:00000000 $t
  C:\Temp\ccP21HMa.s:485    .text.calc_rotate_accel:00000000 calc_rotate_accel
  C:\Temp\ccP21HMa.s:626    .text.calc_rotate_accel:000000c8 $d
  C:\Temp\ccP21HMa.s:641    .text.calc_target_move_speed:00000000 $t
  C:\Temp\ccP21HMa.s:648    .text.calc_target_move_speed:00000000 calc_target_move_speed
  C:\Temp\ccP21HMa.s:770    .text.calc_target_move_speed:000000c0 $d
  C:\Temp\ccP21HMa.s:782    .text.calc_target_rotation_speed:00000000 $t
  C:\Temp\ccP21HMa.s:789    .text.calc_target_rotation_speed:00000000 calc_target_rotation_speed
  C:\Temp\ccP21HMa.s:911    .text.calc_target_rotation_speed:000000c0 $d
  C:\Temp\ccP21HMa.s:923    .text.target_1ms:00000000 $t
  C:\Temp\ccP21HMa.s:930    .text.target_1ms:00000000 target_1ms
  C:\Temp\ccP21HMa.s:962    .bss.accel_dir_flg:00000000 accel_dir_flg
  C:\Temp\ccP21HMa.s:963    .bss.accel_dir_flg:00000000 $d
  C:\Temp\ccP21HMa.s:965    .bss.ideal_angle:00000000 $d
  C:\Temp\ccP21HMa.s:969    .bss.ideal_angle:00000000 ideal_angle
  C:\Temp\ccP21HMa.s:972    .bss.ideal_length:00000000 $d
  C:\Temp\ccP21HMa.s:976    .bss.ideal_length:00000000 ideal_length
  C:\Temp\ccP21HMa.s:982    .bss.move_dir_flg:00000000 move_dir_flg
  C:\Temp\ccP21HMa.s:983    .bss.move_dir_flg:00000000 $d
ARM GAS  C:\Temp\ccP21HMa.s 			page 26


  C:\Temp\ccP21HMa.s:988    .bss.rotation_dir_flg:00000000 rotation_dir_flg
  C:\Temp\ccP21HMa.s:989    .bss.rotation_dir_flg:00000000 $d
  C:\Temp\ccP21HMa.s:991    .bss.target_angle:00000000 $d
  C:\Temp\ccP21HMa.s:995    .bss.target_angle:00000000 target_angle
  C:\Temp\ccP21HMa.s:998    .bss.target_length:00000000 $d
  C:\Temp\ccP21HMa.s:1002   .bss.target_length:00000000 target_length
  C:\Temp\ccP21HMa.s:1005   .bss.target_move_accel:00000000 $d
  C:\Temp\ccP21HMa.s:1009   .bss.target_move_accel:00000000 target_move_accel
  C:\Temp\ccP21HMa.s:1012   .bss.target_move_speed:00000000 $d
  C:\Temp\ccP21HMa.s:1016   .bss.target_move_speed:00000000 target_move_speed
  C:\Temp\ccP21HMa.s:1019   .bss.target_rotation_accel:00000000 $d
  C:\Temp\ccP21HMa.s:1023   .bss.target_rotation_accel:00000000 target_rotation_accel
  C:\Temp\ccP21HMa.s:1026   .bss.target_rotation_speed:00000000 $d
  C:\Temp\ccP21HMa.s:1030   .bss.target_rotation_speed:00000000 target_rotation_speed

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_dadd
