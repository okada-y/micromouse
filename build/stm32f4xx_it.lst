ARM GAS  C:\Temp\ccY3SVwh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB133:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** #include "index.h"
  27:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f4xx_it.c **** 
  29:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
ARM GAS  C:\Temp\ccY3SVwh.s 			page 2


  31:Src/stm32f4xx_it.c **** 
  32:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  33:Src/stm32f4xx_it.c **** 
  34:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f4xx_it.c ****  
  37:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f4xx_it.c **** 
  39:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f4xx_it.c **** extern void Interrupt_Main( void );
  52:Src/stm32f4xx_it.c **** extern void ADC1_DMA2_TransferComplete_Callback(void);
  53:Src/stm32f4xx_it.c **** extern void Interrupt_PreProcess(void);
  54:Src/stm32f4xx_it.c **** extern void Interrupt_PostProcess(void);
  55:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  58:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  59:Src/stm32f4xx_it.c **** 
  60:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  61:Src/stm32f4xx_it.c **** 
  62:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  63:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  64:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_rx;
  65:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_tx;
  66:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim1_ch1;
  67:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim1_ch2;
  68:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  69:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  70:Src/stm32f4xx_it.c **** 
  71:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  72:Src/stm32f4xx_it.c **** 
  73:Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  75:Src/stm32f4xx_it.c **** /******************************************************************************/
  76:Src/stm32f4xx_it.c **** /**
  77:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  78:Src/stm32f4xx_it.c ****   */
  79:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  80:Src/stm32f4xx_it.c **** {
  29              		.loc 1 80 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  81:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  82:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Temp\ccY3SVwh.s 			page 3


  83:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  84:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  85:Src/stm32f4xx_it.c **** 
  86:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  87:Src/stm32f4xx_it.c **** }
  34              		.loc 1 87 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE133:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB134:
  88:Src/stm32f4xx_it.c **** 
  89:Src/stm32f4xx_it.c **** /**
  90:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  91:Src/stm32f4xx_it.c ****   */
  92:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  93:Src/stm32f4xx_it.c **** {
  49              		.loc 1 93 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  94:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  95:Src/stm32f4xx_it.c **** 
  96:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  97:Src/stm32f4xx_it.c ****   while (1)
  56              		.loc 1 97 3 discriminator 1 view .LVU3
  98:Src/stm32f4xx_it.c ****   {
  99:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 100:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 101:Src/stm32f4xx_it.c ****   }
  57              		.loc 1 101 3 discriminator 1 view .LVU4
  97:Src/stm32f4xx_it.c ****   {
  58              		.loc 1 97 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE134:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB135:
 102:Src/stm32f4xx_it.c **** }
 103:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Temp\ccY3SVwh.s 			page 4


 104:Src/stm32f4xx_it.c **** /**
 105:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 106:Src/stm32f4xx_it.c ****   */
 107:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 108:Src/stm32f4xx_it.c **** {
  73              		.loc 1 108 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 109:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 110:Src/stm32f4xx_it.c **** 
 111:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 112:Src/stm32f4xx_it.c ****   while (1)
  80              		.loc 1 112 3 discriminator 1 view .LVU7
 113:Src/stm32f4xx_it.c ****   {
 114:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 115:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 116:Src/stm32f4xx_it.c ****   }
  81              		.loc 1 116 3 discriminator 1 view .LVU8
 112:Src/stm32f4xx_it.c ****   {
  82              		.loc 1 112 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE135:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB136:
 117:Src/stm32f4xx_it.c **** }
 118:Src/stm32f4xx_it.c **** 
 119:Src/stm32f4xx_it.c **** /**
 120:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 121:Src/stm32f4xx_it.c ****   */
 122:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 123:Src/stm32f4xx_it.c **** {
  97              		.loc 1 123 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 124:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 125:Src/stm32f4xx_it.c **** 
 126:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 127:Src/stm32f4xx_it.c ****   while (1)
 104              		.loc 1 127 3 discriminator 1 view .LVU11
 128:Src/stm32f4xx_it.c ****   {
 129:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  C:\Temp\ccY3SVwh.s 			page 5


 130:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 131:Src/stm32f4xx_it.c ****   }
 105              		.loc 1 131 3 discriminator 1 view .LVU12
 127:Src/stm32f4xx_it.c ****   {
 106              		.loc 1 127 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE136:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB137:
 132:Src/stm32f4xx_it.c **** }
 133:Src/stm32f4xx_it.c **** 
 134:Src/stm32f4xx_it.c **** /**
 135:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 136:Src/stm32f4xx_it.c ****   */
 137:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 138:Src/stm32f4xx_it.c **** {
 121              		.loc 1 138 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 139:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 140:Src/stm32f4xx_it.c **** 
 141:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 142:Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 142 3 discriminator 1 view .LVU15
 143:Src/stm32f4xx_it.c ****   {
 144:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 145:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 146:Src/stm32f4xx_it.c ****   }
 129              		.loc 1 146 3 discriminator 1 view .LVU16
 142:Src/stm32f4xx_it.c ****   {
 130              		.loc 1 142 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE137:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB138:
 147:Src/stm32f4xx_it.c **** }
 148:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Temp\ccY3SVwh.s 			page 6


 149:Src/stm32f4xx_it.c **** /**
 150:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 151:Src/stm32f4xx_it.c ****   */
 152:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 153:Src/stm32f4xx_it.c **** {
 145              		.loc 1 153 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 154:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 155:Src/stm32f4xx_it.c **** 
 156:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 157:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 160:Src/stm32f4xx_it.c **** }
 150              		.loc 1 160 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE138:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB139:
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c **** /**
 163:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 164:Src/stm32f4xx_it.c ****   */
 165:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 166:Src/stm32f4xx_it.c **** {
 165              		.loc 1 166 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 167:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 168:Src/stm32f4xx_it.c **** 
 169:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 170:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 173:Src/stm32f4xx_it.c **** }
 170              		.loc 1 173 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE139:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
ARM GAS  C:\Temp\ccY3SVwh.s 			page 7


 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB140:
 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c **** /**
 176:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 177:Src/stm32f4xx_it.c ****   */
 178:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 179:Src/stm32f4xx_it.c **** {
 185              		.loc 1 179 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 180:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 181:Src/stm32f4xx_it.c **** 
 182:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 183:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 184:Src/stm32f4xx_it.c **** 
 185:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 186:Src/stm32f4xx_it.c **** }
 190              		.loc 1 186 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE140:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB141:
 187:Src/stm32f4xx_it.c **** 
 188:Src/stm32f4xx_it.c **** /**
 189:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 190:Src/stm32f4xx_it.c ****   */
 191:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 192:Src/stm32f4xx_it.c **** {
 205              		.loc 1 192 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 193:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 194:Src/stm32f4xx_it.c **** 
 195:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 196:Src/stm32f4xx_it.c ****   HAL_IncTick();
 214              		.loc 1 196 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
ARM GAS  C:\Temp\ccY3SVwh.s 			page 8


 197:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 198:Src/stm32f4xx_it.c **** 
 199:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 200:Src/stm32f4xx_it.c **** }
 217              		.loc 1 200 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE141:
 222              		.section	.text.DMA1_Stream3_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	DMA1_Stream3_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	DMA1_Stream3_IRQHandler:
 231              	.LFB142:
 201:Src/stm32f4xx_it.c **** 
 202:Src/stm32f4xx_it.c **** /******************************************************************************/
 203:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 204:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 205:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 206:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 207:Src/stm32f4xx_it.c **** /******************************************************************************/
 208:Src/stm32f4xx_it.c **** 
 209:Src/stm32f4xx_it.c **** /**
 210:Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream3 global interrupt.
 211:Src/stm32f4xx_it.c ****   */
 212:Src/stm32f4xx_it.c **** void DMA1_Stream3_IRQHandler(void)
 213:Src/stm32f4xx_it.c **** {
 232              		.loc 1 213 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 214:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */
 215:Src/stm32f4xx_it.c **** 
 216:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 0 */
 217:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_rx);
 241              		.loc 1 217 3 view .LVU28
 242 0002 0248     		ldr	r0, .L17
 243 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 244              	.LVL1:
 218:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */
 219:Src/stm32f4xx_it.c **** 
 220:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 1 */
 221:Src/stm32f4xx_it.c **** }
 245              		.loc 1 221 1 is_stmt 0 view .LVU29
 246 0008 08BD     		pop	{r3, pc}
 247              	.L18:
 248 000a 00BF     		.align	2
 249              	.L17:
 250 000c 00000000 		.word	hdma_spi2_rx
ARM GAS  C:\Temp\ccY3SVwh.s 			page 9


 251              		.cfi_endproc
 252              	.LFE142:
 254              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	DMA1_Stream4_IRQHandler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	DMA1_Stream4_IRQHandler:
 263              	.LFB143:
 222:Src/stm32f4xx_it.c **** 
 223:Src/stm32f4xx_it.c **** /**
 224:Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream4 global interrupt.
 225:Src/stm32f4xx_it.c ****   */
 226:Src/stm32f4xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 227:Src/stm32f4xx_it.c **** {
 264              		.loc 1 227 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 228:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */
 229:Src/stm32f4xx_it.c **** 
 230:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 0 */
 231:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_tx);
 273              		.loc 1 231 3 view .LVU31
 274 0002 0248     		ldr	r0, .L21
 275 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 276              	.LVL2:
 232:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */
 233:Src/stm32f4xx_it.c **** 
 234:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 1 */
 235:Src/stm32f4xx_it.c **** }
 277              		.loc 1 235 1 is_stmt 0 view .LVU32
 278 0008 08BD     		pop	{r3, pc}
 279              	.L22:
 280 000a 00BF     		.align	2
 281              	.L21:
 282 000c 00000000 		.word	hdma_spi2_tx
 283              		.cfi_endproc
 284              	.LFE143:
 286              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 287              		.align	1
 288              		.global	TIM6_DAC_IRQHandler
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	TIM6_DAC_IRQHandler:
 295              	.LFB144:
 236:Src/stm32f4xx_it.c **** 
 237:Src/stm32f4xx_it.c **** /**
ARM GAS  C:\Temp\ccY3SVwh.s 			page 10


 238:Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 239:Src/stm32f4xx_it.c ****   */
 240:Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 241:Src/stm32f4xx_it.c **** {
 296              		.loc 1 241 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 242:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 243:Src/stm32f4xx_it.c **** 
 244:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 245:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 305              		.loc 1 245 3 view .LVU34
 306 0002 0548     		ldr	r0, .L25
 307 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 308              	.LVL3:
 246:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 247:Src/stm32f4xx_it.c ****   Interrupt_PreProcess();
 309              		.loc 1 247 3 view .LVU35
 310 0008 FFF7FEFF 		bl	Interrupt_PreProcess
 311              	.LVL4:
 248:Src/stm32f4xx_it.c ****   Interrupt_Main();
 312              		.loc 1 248 3 view .LVU36
 313 000c FFF7FEFF 		bl	Interrupt_Main
 314              	.LVL5:
 249:Src/stm32f4xx_it.c ****   Interrupt_PostProcess();
 315              		.loc 1 249 3 view .LVU37
 316 0010 FFF7FEFF 		bl	Interrupt_PostProcess
 317              	.LVL6:
 250:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 251:Src/stm32f4xx_it.c **** }
 318              		.loc 1 251 1 is_stmt 0 view .LVU38
 319 0014 08BD     		pop	{r3, pc}
 320              	.L26:
 321 0016 00BF     		.align	2
 322              	.L25:
 323 0018 00000000 		.word	htim6
 324              		.cfi_endproc
 325              	.LFE144:
 327              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 328              		.align	1
 329              		.global	DMA2_Stream0_IRQHandler
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv4-sp-d16
 335              	DMA2_Stream0_IRQHandler:
 336              	.LFB145:
 252:Src/stm32f4xx_it.c **** 
 253:Src/stm32f4xx_it.c **** /**
 254:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 255:Src/stm32f4xx_it.c ****   */
ARM GAS  C:\Temp\ccY3SVwh.s 			page 11


 256:Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 257:Src/stm32f4xx_it.c **** {
 337              		.loc 1 257 1 is_stmt 1 view -0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341 0000 08B5     		push	{r3, lr}
 342              	.LCFI4:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 3, -8
 345              		.cfi_offset 14, -4
 258:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 259:Src/stm32f4xx_it.c **** 
 260:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 261:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 346              		.loc 1 261 3 view .LVU40
 347 0002 0248     		ldr	r0, .L29
 348 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 349              	.LVL7:
 262:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 263:Src/stm32f4xx_it.c **** 
 264:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 265:Src/stm32f4xx_it.c **** }
 350              		.loc 1 265 1 is_stmt 0 view .LVU41
 351 0008 08BD     		pop	{r3, pc}
 352              	.L30:
 353 000a 00BF     		.align	2
 354              	.L29:
 355 000c 00000000 		.word	hdma_adc1
 356              		.cfi_endproc
 357              	.LFE145:
 359              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 360              		.align	1
 361              		.global	DMA2_Stream1_IRQHandler
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv4-sp-d16
 367              	DMA2_Stream1_IRQHandler:
 368              	.LFB146:
 266:Src/stm32f4xx_it.c **** 
 267:Src/stm32f4xx_it.c **** /**
 268:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream1 global interrupt.
 269:Src/stm32f4xx_it.c ****   */
 270:Src/stm32f4xx_it.c **** void DMA2_Stream1_IRQHandler(void)
 271:Src/stm32f4xx_it.c **** {
 369              		.loc 1 271 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 08B5     		push	{r3, lr}
 374              	.LCFI5:
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 3, -8
 377              		.cfi_offset 14, -4
 272:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */
 273:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Temp\ccY3SVwh.s 			page 12


 274:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 0 */
 275:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim1_ch1);
 378              		.loc 1 275 3 view .LVU43
 379 0002 0248     		ldr	r0, .L33
 380 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 381              	.LVL8:
 276:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */
 277:Src/stm32f4xx_it.c **** 
 278:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 1 */
 279:Src/stm32f4xx_it.c **** }
 382              		.loc 1 279 1 is_stmt 0 view .LVU44
 383 0008 08BD     		pop	{r3, pc}
 384              	.L34:
 385 000a 00BF     		.align	2
 386              	.L33:
 387 000c 00000000 		.word	hdma_tim1_ch1
 388              		.cfi_endproc
 389              	.LFE146:
 391              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 392              		.align	1
 393              		.global	DMA2_Stream2_IRQHandler
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv4-sp-d16
 399              	DMA2_Stream2_IRQHandler:
 400              	.LFB147:
 280:Src/stm32f4xx_it.c **** 
 281:Src/stm32f4xx_it.c **** /**
 282:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 283:Src/stm32f4xx_it.c ****   */
 284:Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 285:Src/stm32f4xx_it.c **** {
 401              		.loc 1 285 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405 0000 08B5     		push	{r3, lr}
 406              	.LCFI6:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 3, -8
 409              		.cfi_offset 14, -4
 286:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 287:Src/stm32f4xx_it.c **** 
 288:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 289:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim1_ch2);
 410              		.loc 1 289 3 view .LVU46
 411 0002 0248     		ldr	r0, .L37
 412 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 413              	.LVL9:
 290:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 291:Src/stm32f4xx_it.c **** 
 292:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 293:Src/stm32f4xx_it.c **** }
 414              		.loc 1 293 1 is_stmt 0 view .LVU47
 415 0008 08BD     		pop	{r3, pc}
 416              	.L38:
ARM GAS  C:\Temp\ccY3SVwh.s 			page 13


 417 000a 00BF     		.align	2
 418              	.L37:
 419 000c 00000000 		.word	hdma_tim1_ch2
 420              		.cfi_endproc
 421              	.LFE147:
 423              		.text
 424              	.Letext0:
 425              		.file 2 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\machine\\_default_t
 426              		.file 3 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 427              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 428              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 429              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 430              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 431              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 432              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 433              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 434              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 435              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 436              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 437              		.file 14 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 438              		.file 15 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 439              		.file 16 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\s
 440              		.file 17 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 441              		.file 18 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\math.h"
 442              		.file 19 "Inc/adc.h"
 443              		.file 20 "Inc/spi.h"
 444              		.file 21 "Inc/tim.h"
 445              		.file 22 "Inc/usart.h"
 446              		.file 23 "Inc/index.h"
 447              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Temp\ccY3SVwh.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
  C:\Temp\ccY3SVwh.s:18     .text.NMI_Handler:00000000 $t
  C:\Temp\ccY3SVwh.s:26     .text.NMI_Handler:00000000 NMI_Handler
  C:\Temp\ccY3SVwh.s:40     .text.HardFault_Handler:00000000 $t
  C:\Temp\ccY3SVwh.s:47     .text.HardFault_Handler:00000000 HardFault_Handler
  C:\Temp\ccY3SVwh.s:64     .text.MemManage_Handler:00000000 $t
  C:\Temp\ccY3SVwh.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
  C:\Temp\ccY3SVwh.s:88     .text.BusFault_Handler:00000000 $t
  C:\Temp\ccY3SVwh.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
  C:\Temp\ccY3SVwh.s:112    .text.UsageFault_Handler:00000000 $t
  C:\Temp\ccY3SVwh.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
  C:\Temp\ccY3SVwh.s:136    .text.SVC_Handler:00000000 $t
  C:\Temp\ccY3SVwh.s:143    .text.SVC_Handler:00000000 SVC_Handler
  C:\Temp\ccY3SVwh.s:156    .text.DebugMon_Handler:00000000 $t
  C:\Temp\ccY3SVwh.s:163    .text.DebugMon_Handler:00000000 DebugMon_Handler
  C:\Temp\ccY3SVwh.s:176    .text.PendSV_Handler:00000000 $t
  C:\Temp\ccY3SVwh.s:183    .text.PendSV_Handler:00000000 PendSV_Handler
  C:\Temp\ccY3SVwh.s:196    .text.SysTick_Handler:00000000 $t
  C:\Temp\ccY3SVwh.s:203    .text.SysTick_Handler:00000000 SysTick_Handler
  C:\Temp\ccY3SVwh.s:223    .text.DMA1_Stream3_IRQHandler:00000000 $t
  C:\Temp\ccY3SVwh.s:230    .text.DMA1_Stream3_IRQHandler:00000000 DMA1_Stream3_IRQHandler
  C:\Temp\ccY3SVwh.s:250    .text.DMA1_Stream3_IRQHandler:0000000c $d
  C:\Temp\ccY3SVwh.s:255    .text.DMA1_Stream4_IRQHandler:00000000 $t
  C:\Temp\ccY3SVwh.s:262    .text.DMA1_Stream4_IRQHandler:00000000 DMA1_Stream4_IRQHandler
  C:\Temp\ccY3SVwh.s:282    .text.DMA1_Stream4_IRQHandler:0000000c $d
  C:\Temp\ccY3SVwh.s:287    .text.TIM6_DAC_IRQHandler:00000000 $t
  C:\Temp\ccY3SVwh.s:294    .text.TIM6_DAC_IRQHandler:00000000 TIM6_DAC_IRQHandler
  C:\Temp\ccY3SVwh.s:323    .text.TIM6_DAC_IRQHandler:00000018 $d
  C:\Temp\ccY3SVwh.s:328    .text.DMA2_Stream0_IRQHandler:00000000 $t
  C:\Temp\ccY3SVwh.s:335    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
  C:\Temp\ccY3SVwh.s:355    .text.DMA2_Stream0_IRQHandler:0000000c $d
  C:\Temp\ccY3SVwh.s:360    .text.DMA2_Stream1_IRQHandler:00000000 $t
  C:\Temp\ccY3SVwh.s:367    .text.DMA2_Stream1_IRQHandler:00000000 DMA2_Stream1_IRQHandler
  C:\Temp\ccY3SVwh.s:387    .text.DMA2_Stream1_IRQHandler:0000000c $d
  C:\Temp\ccY3SVwh.s:392    .text.DMA2_Stream2_IRQHandler:00000000 $t
  C:\Temp\ccY3SVwh.s:399    .text.DMA2_Stream2_IRQHandler:00000000 DMA2_Stream2_IRQHandler
  C:\Temp\ccY3SVwh.s:419    .text.DMA2_Stream2_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_spi2_rx
hdma_spi2_tx
HAL_TIM_IRQHandler
Interrupt_PreProcess
Interrupt_Main
Interrupt_PostProcess
htim6
hdma_adc1
hdma_tim1_ch1
hdma_tim1_ch2
