ARM GAS  C:\Temp\ccEgvbxA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"control.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.get_target_vol_sum_ctrl,"ax",%progbits
  18              		.align	1
  19              		.global	get_target_vol_sum_ctrl
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	get_target_vol_sum_ctrl:
  27              	.LFB3:
  28              		.file 1 "Src/control.c"
   1:Src/control.c **** #include "param.h"
   2:Src/control.c **** #include "target.h"
   3:Src/control.c **** #include "control.h"
   4:Src/control.c **** #include "mouse_state.h"
   5:Src/control.c **** 
   6:Src/control.c **** 
   7:Src/control.c **** static float move_speed_err_I = 0; 			//移動速度偏差積分
   8:Src/control.c **** static float rotate_speed_err_I = 0;	    //角速度偏差積分
   9:Src/control.c **** 
  10:Src/control.c **** static float target_vol_sum_ctrl = 0;		//右タイヤの操作量[ duty % ]
  11:Src/control.c **** static float target_vol_diff_ctrl = 0;		//左タイヤの操作量[ duty % ]
  12:Src/control.c **** 
  13:Src/control.c **** //機能	: 軌道制御によるモータ印加電圧の和を取得する
  14:Src/control.c **** //引数	: なし
  15:Src/control.c **** //返り値	: 軌道制御による右モータ印加電圧
  16:Src/control.c **** float get_target_vol_sum_ctrl ( void )
  17:Src/control.c **** {
  29              		.loc 1 17 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  18:Src/control.c ****     return target_vol_sum_ctrl;
  34              		.loc 1 18 5 view .LVU1
  19:Src/control.c **** }
  35              		.loc 1 19 1 is_stmt 0 view .LVU2
  36 0000 014B     		ldr	r3, .L2
  37 0002 93ED000A 		vldr.32	s0, [r3]
  38 0006 7047     		bx	lr
  39              	.L3:
ARM GAS  C:\Temp\ccEgvbxA.s 			page 2


  40              		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE3:
  46              		.section	.text.get_target_vol_diff_ctrl,"ax",%progbits
  47              		.align	1
  48              		.global	get_target_vol_diff_ctrl
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	get_target_vol_diff_ctrl:
  55              	.LFB4:
  20:Src/control.c **** 
  21:Src/control.c **** //機能	: 軌道制御によるモータ印加電圧の差を取得する
  22:Src/control.c **** //引数	: なし
  23:Src/control.c **** //返り値	: 軌道制御による左モータ印加電圧
  24:Src/control.c **** float get_target_vol_diff_ctrl ( void )
  25:Src/control.c **** {
  56              		.loc 1 25 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  26:Src/control.c ****     return target_vol_diff_ctrl;
  61              		.loc 1 26 5 view .LVU4
  27:Src/control.c **** }
  62              		.loc 1 27 1 is_stmt 0 view .LVU5
  63 0000 014B     		ldr	r3, .L5
  64 0002 93ED000A 		vldr.32	s0, [r3]
  65 0006 7047     		bx	lr
  66              	.L6:
  67              		.align	2
  68              	.L5:
  69 0008 00000000 		.word	.LANCHOR1
  70              		.cfi_endproc
  71              	.LFE4:
  73              		.global	__aeabi_f2d
  74              		.global	__aeabi_dmul
  75              		.global	__aeabi_dadd
  76              		.global	__aeabi_d2f
  77              		.section	.text.calc_motor_vol_ctrl,"ax",%progbits
  78              		.align	1
  79              		.global	calc_motor_vol_ctrl
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	calc_motor_vol_ctrl:
  86              	.LFB5:
  28:Src/control.c **** 
  29:Src/control.c **** //機能	: 軌道制御により、左右のモータ印加電圧を計算する
  30:Src/control.c **** //引数	: なし
  31:Src/control.c **** //返り値	: なし
  32:Src/control.c **** //備考  : 1msタスク
  33:Src/control.c **** void calc_motor_vol_ctrl(void)
ARM GAS  C:\Temp\ccEgvbxA.s 			page 3


  34:Src/control.c **** {
  87              		.loc 1 34 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 70B5     		push	{r4, r5, r6, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 4, -16
  95              		.cfi_offset 5, -12
  96              		.cfi_offset 6, -8
  97              		.cfi_offset 14, -4
  98 0002 2DED048B 		vpush.64	{d8, d9}
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 32
 101              		.cfi_offset 80, -32
 102              		.cfi_offset 81, -28
 103              		.cfi_offset 82, -24
 104              		.cfi_offset 83, -20
  35:Src/control.c **** 	float move_speed_err = 0; 			        //移動速度偏差
 105              		.loc 1 35 2 view .LVU7
 106              	.LVL0:
  36:Src/control.c **** 	float rotate_speed_err = 0;	        		//角速度偏差
 107              		.loc 1 36 2 view .LVU8
  37:Src/control.c **** 
  38:Src/control.c **** 	float move_speed_err_PI = 0; 		//移動速度偏差によるPIコントローラ出力
 108              		.loc 1 38 2 view .LVU9
  39:Src/control.c **** 	float rotate_speed_err_PI = 0;		//角速度偏差によるPIコントローラ出力
 109              		.loc 1 39 2 view .LVU10
  40:Src/control.c **** 
  41:Src/control.c ****     static float post_target_rotation_speed = 0; //前回の回転速度目標値
 110              		.loc 1 41 5 view .LVU11
  42:Src/control.c ****     float target_rotation_accel = 0;        //目標回転角加速度
 111              		.loc 1 42 5 view .LVU12
  43:Src/control.c ****     float rotate_FF = 0;   //FFコントローラによる電圧差出力
 112              		.loc 1 43 5 view .LVU13
  44:Src/control.c **** 
  45:Src/control.c ****     /*FB制御*/
  46:Src/control.c ****     /*偏差取得*/
  47:Src/control.c ****     move_speed_err = get_target_move_speed() - get_move_speed_ave();
 113              		.loc 1 47 5 view .LVU14
 114              		.loc 1 47 22 is_stmt 0 view .LVU15
 115 0006 FFF7FEFF 		bl	get_target_move_speed
 116              	.LVL1:
 117 000a F0EE408A 		vmov.f32	s17, s0
 118              		.loc 1 47 48 view .LVU16
 119 000e FFF7FEFF 		bl	get_move_speed_ave
 120              	.LVL2:
 121              		.loc 1 47 20 view .LVU17
 122 0012 78EEC08A 		vsub.f32	s17, s17, s0
 123              	.LVL3:
  48:Src/control.c ****     rotate_speed_err = get_target_rotation_speed() - get_rotation_speed();
 124              		.loc 1 48 5 is_stmt 1 view .LVU18
 125              		.loc 1 48 24 is_stmt 0 view .LVU19
 126 0016 FFF7FEFF 		bl	get_target_rotation_speed
 127              	.LVL4:
 128 001a B0EE408A 		vmov.f32	s16, s0
ARM GAS  C:\Temp\ccEgvbxA.s 			page 4


 129              		.loc 1 48 54 view .LVU20
 130 001e FFF7FEFF 		bl	get_rotation_speed
 131              	.LVL5:
 132              		.loc 1 48 22 view .LVU21
 133 0022 38EE408A 		vsub.f32	s16, s16, s0
 134              	.LVL6:
  49:Src/control.c **** 
  50:Src/control.c ****     /*偏差積分*/
  51:Src/control.c ****     move_speed_err_I = move_speed_err_I + move_speed_I*0.001*move_speed_err;
 135              		.loc 1 51 5 is_stmt 1 view .LVU22
 136              		.loc 1 51 61 is_stmt 0 view .LVU23
 137 0026 18EE900A 		vmov	r0, s17
 138 002a FFF7FEFF 		bl	__aeabi_f2d
 139              	.LVL7:
 140 002e 55A3     		adr	r3, .L9+60
 141 0030 D3E90023 		ldrd	r2, [r3]
 142 0034 FFF7FEFF 		bl	__aeabi_dmul
 143              	.LVL8:
 144 0038 0446     		mov	r4, r0
 145 003a 0D46     		mov	r5, r1
 146              		.loc 1 51 41 view .LVU24
 147 003c 484E     		ldr	r6, .L9+24
 148 003e 3068     		ldr	r0, [r6]	@ float
 149 0040 FFF7FEFF 		bl	__aeabi_f2d
 150              	.LVL9:
 151 0044 2246     		mov	r2, r4
 152 0046 2B46     		mov	r3, r5
 153 0048 FFF7FEFF 		bl	__aeabi_dadd
 154              	.LVL10:
 155 004c FFF7FEFF 		bl	__aeabi_d2f
 156              	.LVL11:
 157 0050 09EE100A 		vmov	s18, r0
 158              		.loc 1 51 22 view .LVU25
 159 0054 3060     		str	r0, [r6]	@ float
  52:Src/control.c ****     rotate_speed_err_I = rotate_speed_err_I + rotate_speed_I*0.001*rotate_speed_err;
 160              		.loc 1 52 5 is_stmt 1 view .LVU26
 161              		.loc 1 52 67 is_stmt 0 view .LVU27
 162 0056 18EE100A 		vmov	r0, s16
 163 005a FFF7FEFF 		bl	__aeabi_f2d
 164              	.LVL12:
 165 005e 3AA3     		adr	r3, .L9
 166 0060 D3E90023 		ldrd	r2, [r3]
 167 0064 FFF7FEFF 		bl	__aeabi_dmul
 168              	.LVL13:
 169 0068 0446     		mov	r4, r0
 170 006a 0D46     		mov	r5, r1
 171              		.loc 1 52 45 view .LVU28
 172 006c 3D4E     		ldr	r6, .L9+28
 173 006e 3068     		ldr	r0, [r6]	@ float
 174 0070 FFF7FEFF 		bl	__aeabi_f2d
 175              	.LVL14:
 176 0074 2246     		mov	r2, r4
 177 0076 2B46     		mov	r3, r5
 178 0078 FFF7FEFF 		bl	__aeabi_dadd
 179              	.LVL15:
 180 007c FFF7FEFF 		bl	__aeabi_d2f
 181              	.LVL16:
ARM GAS  C:\Temp\ccEgvbxA.s 			page 5


 182 0080 07EE900A 		vmov	s15, r0
 183              		.loc 1 52 24 view .LVU29
 184 0084 3060     		str	r0, [r6]	@ float
  53:Src/control.c **** 
  54:Src/control.c ****     /*PIコントローラ出力計算*/
  55:Src/control.c ****     move_speed_err_PI = move_speed_P * move_speed_err + move_speed_err_I;
 185              		.loc 1 55 5 is_stmt 1 view .LVU30
 186              		.loc 1 55 38 is_stmt 0 view .LVU31
 187 0086 9FED380A 		vldr.32	s0, .L9+32
 188 008a 68EE808A 		vmul.f32	s17, s17, s0
 189              	.LVL17:
 190              		.loc 1 55 23 view .LVU32
 191 008e 79EE288A 		vadd.f32	s17, s18, s17
 192              	.LVL18:
  56:Src/control.c ****     rotate_speed_err_PI = rotate_speed_P * rotate_speed_err + rotate_speed_err_I;
 193              		.loc 1 56 5 is_stmt 1 view .LVU33
 194              		.loc 1 56 42 is_stmt 0 view .LVU34
 195 0092 9FED360A 		vldr.32	s0, .L9+36
 196 0096 28EE008A 		vmul.f32	s16, s16, s0
 197              	.LVL19:
 198              		.loc 1 56 25 view .LVU35
 199 009a 37EE888A 		vadd.f32	s16, s15, s16
 200              	.LVL20:
  57:Src/control.c **** 
  58:Src/control.c **** 
  59:Src/control.c ****     
  60:Src/control.c **** 
  61:Src/control.c ****     /*FF制御*/
  62:Src/control.c ****     target_rotation_accel = (get_target_rotation_speed() - post_target_rotation_speed) * Sampling_c
 201              		.loc 1 62 5 is_stmt 1 view .LVU36
 202              		.loc 1 62 30 is_stmt 0 view .LVU37
 203 009e FFF7FEFF 		bl	get_target_rotation_speed
 204              	.LVL21:
 205              		.loc 1 62 58 view .LVU38
 206 00a2 334E     		ldr	r6, .L9+40
 207 00a4 D6ED007A 		vldr.32	s15, [r6]
 208 00a8 70EE677A 		vsub.f32	s15, s0, s15
 209 00ac 17EE900A 		vmov	r0, s15
 210 00b0 FFF7FEFF 		bl	__aeabi_f2d
 211              	.LVL22:
 212              		.loc 1 62 88 view .LVU39
 213 00b4 26A3     		adr	r3, .L9+8
 214 00b6 D3E90023 		ldrd	r2, [r3]
 215 00ba FFF7FEFF 		bl	__aeabi_dmul
 216              	.LVL23:
 217              		.loc 1 62 27 view .LVU40
 218 00be FFF7FEFF 		bl	__aeabi_d2f
 219              	.LVL24:
 220 00c2 07EE100A 		vmov	s14, r0
 221              	.LVL25:
  63:Src/control.c ****     rotate_FF = ff_gain_a_w * target_rotation_accel + ff_gain_v_w * get_target_rotation_speed();
 222              		.loc 1 63 5 is_stmt 1 view .LVU41
 223              		.loc 1 63 29 is_stmt 0 view .LVU42
 224 00c6 DFED2B7A 		vldr.32	s15, .L9+44
 225 00ca 67EE277A 		vmul.f32	s15, s14, s15
 226 00ce 17EE900A 		vmov	r0, s15
 227              	.LVL26:
ARM GAS  C:\Temp\ccEgvbxA.s 			page 6


 228              		.loc 1 63 29 view .LVU43
 229 00d2 FFF7FEFF 		bl	__aeabi_f2d
 230              	.LVL27:
 231              		.loc 1 63 29 view .LVU44
 232 00d6 0446     		mov	r4, r0
 233 00d8 0D46     		mov	r5, r1
 234              		.loc 1 63 69 view .LVU45
 235 00da FFF7FEFF 		bl	get_target_rotation_speed
 236              	.LVL28:
 237 00de 10EE100A 		vmov	r0, s0
 238 00e2 FFF7FEFF 		bl	__aeabi_f2d
 239              	.LVL29:
 240              		.loc 1 63 67 view .LVU46
 241 00e6 1CA3     		adr	r3, .L9+16
 242 00e8 D3E90023 		ldrd	r2, [r3]
 243 00ec FFF7FEFF 		bl	__aeabi_dmul
 244              	.LVL30:
 245 00f0 0246     		mov	r2, r0
 246 00f2 0B46     		mov	r3, r1
 247              		.loc 1 63 53 view .LVU47
 248 00f4 2046     		mov	r0, r4
 249 00f6 2946     		mov	r1, r5
 250 00f8 FFF7FEFF 		bl	__aeabi_dadd
 251              	.LVL31:
 252              		.loc 1 63 15 view .LVU48
 253 00fc FFF7FEFF 		bl	__aeabi_d2f
 254              	.LVL32:
  64:Src/control.c **** 
  65:Src/control.c ****     
  66:Src/control.c **** 
  67:Src/control.c ****     /*モータ印加電圧計算*/
  68:Src/control.c ****     target_vol_sum_ctrl = move_speed_err_PI;
 255              		.loc 1 68 5 is_stmt 1 view .LVU49
 256              		.loc 1 68 25 is_stmt 0 view .LVU50
 257 0100 1D4B     		ldr	r3, .L9+48
 258 0102 C3ED008A 		vstr.32	s17, [r3]
  69:Src/control.c ****     target_vol_diff_ctrl = ff_rate_w * rotate_FF  +  (1.0 - ff_rate_w) * rotate_speed_err_PI;
 259              		.loc 1 69 5 is_stmt 1 view .LVU51
 260              		.loc 1 69 38 is_stmt 0 view .LVU52
 261 0106 FFF7FEFF 		bl	__aeabi_f2d
 262              	.LVL33:
 263              		.loc 1 69 38 view .LVU53
 264 010a 0022     		movs	r2, #0
 265 010c 1B4B     		ldr	r3, .L9+52
 266 010e FFF7FEFF 		bl	__aeabi_dmul
 267              	.LVL34:
 268 0112 0446     		mov	r4, r0
 269 0114 0D46     		mov	r5, r1
 270              		.loc 1 69 72 view .LVU54
 271 0116 18EE100A 		vmov	r0, s16
 272 011a FFF7FEFF 		bl	__aeabi_f2d
 273              	.LVL35:
 274 011e 0022     		movs	r2, #0
 275 0120 164B     		ldr	r3, .L9+52
 276 0122 FFF7FEFF 		bl	__aeabi_dmul
 277              	.LVL36:
 278 0126 0246     		mov	r2, r0
ARM GAS  C:\Temp\ccEgvbxA.s 			page 7


 279 0128 0B46     		mov	r3, r1
 280              		.loc 1 69 51 view .LVU55
 281 012a 2046     		mov	r0, r4
 282 012c 2946     		mov	r1, r5
 283 012e FFF7FEFF 		bl	__aeabi_dadd
 284              	.LVL37:
 285 0132 FFF7FEFF 		bl	__aeabi_d2f
 286              	.LVL38:
 287              		.loc 1 69 26 view .LVU56
 288 0136 124B     		ldr	r3, .L9+56
 289 0138 1860     		str	r0, [r3]	@ float
  70:Src/control.c **** 
  71:Src/control.c ****     /*パラメータ更新*/
  72:Src/control.c ****     post_target_rotation_speed = get_target_rotation_speed();
 290              		.loc 1 72 5 is_stmt 1 view .LVU57
 291              		.loc 1 72 34 is_stmt 0 view .LVU58
 292 013a FFF7FEFF 		bl	get_target_rotation_speed
 293              	.LVL39:
 294              		.loc 1 72 32 view .LVU59
 295 013e 86ED000A 		vstr.32	s0, [r6]
  73:Src/control.c **** 
  74:Src/control.c **** }
 296              		.loc 1 74 1 view .LVU60
 297 0142 BDEC048B 		vldm	sp!, {d8-d9}
 298              	.LCFI2:
 299              		.cfi_restore 82
 300              		.cfi_restore 83
 301              		.cfi_restore 80
 302              		.cfi_restore 81
 303              		.cfi_def_cfa_offset 16
 304              	.LVL40:
 305              		.loc 1 74 1 view .LVU61
 306 0146 70BD     		pop	{r4, r5, r6, pc}
 307              	.L10:
 308              		.align	3
 309              	.L9:
 310 0148 FCA9F1D2 		.word	-755914244
 311 014c 3DC9823F 		.word	1065535805
 312 0150 FCA9F1D2 		.word	-755914244
 313 0154 4D62503F 		.word	1062232653
 314 0158 7B14AE47 		.word	1202590843
 315 015c E17AA43F 		.word	1067743969
 316 0160 00000000 		.word	.LANCHOR2
 317 0164 00000000 		.word	.LANCHOR3
 318 0168 5A64A541 		.word	1101358170
 319 016c AD2FB23E 		.word	1051865005
 320 0170 00000000 		.word	.LANCHOR4
 321 0174 00007A45 		.word	1165623296
 322 0178 00000000 		.word	.LANCHOR0
 323 017c 0000E03F 		.word	1071644672
 324 0180 00000000 		.word	.LANCHOR1
 325 0184 77BE9F1A 		.word	446676599
 326 0188 8FB8B93F 		.word	1069136015
 327              		.cfi_endproc
 328              	.LFE5:
 330              		.section	.text.clr_trace_operate_history,"ax",%progbits
 331              		.align	1
ARM GAS  C:\Temp\ccEgvbxA.s 			page 8


 332              		.global	clr_trace_operate_history
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv4-sp-d16
 338              	clr_trace_operate_history:
 339              	.LFB6:
  75:Src/control.c **** 
  76:Src/control.c **** //機能	: 軌跡制御の操作履歴クリア
  77:Src/control.c **** //引数	: なし
  78:Src/control.c **** //返り値	: なし
  79:Src/control.c **** void clr_trace_operate_history ( void )
  80:Src/control.c **** {
 340              		.loc 1 80 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		@ link register save eliminated.
  81:Src/control.c ****     move_speed_err_I = 0; 		//移動速度偏差積分
 345              		.loc 1 81 5 view .LVU63
 346              		.loc 1 81 22 is_stmt 0 view .LVU64
 347 0000 0023     		movs	r3, #0
 348 0002 024A     		ldr	r2, .L12
 349 0004 1360     		str	r3, [r2]	@ float
  82:Src/control.c ****     rotate_speed_err_I = 0;	    //角速度偏差積分
 350              		.loc 1 82 5 is_stmt 1 view .LVU65
 351              		.loc 1 82 24 is_stmt 0 view .LVU66
 352 0006 024A     		ldr	r2, .L12+4
 353 0008 1360     		str	r3, [r2]	@ float
  83:Src/control.c **** }
 354              		.loc 1 83 1 view .LVU67
 355 000a 7047     		bx	lr
 356              	.L13:
 357              		.align	2
 358              	.L12:
 359 000c 00000000 		.word	.LANCHOR2
 360 0010 00000000 		.word	.LANCHOR3
 361              		.cfi_endproc
 362              	.LFE6:
 364              		.section	.text.adjust_trace_theta,"ax",%progbits
 365              		.align	1
 366              		.global	adjust_trace_theta
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv4-sp-d16
 372              	adjust_trace_theta:
 373              	.LFB7:
  84:Src/control.c **** 
  85:Src/control.c **** //機能	: 軌跡制御の角度履歴フィルタ
  86:Src/control.c **** //引数	: なし
  87:Src/control.c **** //返り値	: なし
  88:Src/control.c **** void adjust_trace_theta ( void )
  89:Src/control.c **** {
 374              		.loc 1 89 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Temp\ccEgvbxA.s 			page 9


 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0000 10B5     		push	{r4, lr}
 379              	.LCFI3:
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 4, -8
 382              		.cfi_offset 14, -4
  90:Src/control.c ****     rotate_speed_err_I = 0.99 * rotate_speed_err_I;	    //角速度偏差積分
 383              		.loc 1 90 5 view .LVU69
 384              		.loc 1 90 31 is_stmt 0 view .LVU70
 385 0002 094C     		ldr	r4, .L16+8
 386 0004 2068     		ldr	r0, [r4]	@ float
 387 0006 FFF7FEFF 		bl	__aeabi_f2d
 388              	.LVL41:
 389 000a 05A3     		adr	r3, .L16
 390 000c D3E90023 		ldrd	r2, [r3]
 391 0010 FFF7FEFF 		bl	__aeabi_dmul
 392              	.LVL42:
 393 0014 FFF7FEFF 		bl	__aeabi_d2f
 394              	.LVL43:
 395              		.loc 1 90 24 view .LVU71
 396 0018 2060     		str	r0, [r4]	@ float
  91:Src/control.c **** }...
 397              		.loc 1 91 1 view .LVU72
 398 001a 10BD     		pop	{r4, pc}
 399              	.L17:
 400 001c AFF30080 		.align	3
 401              	.L16:
 402 0020 AE47E17A 		.word	2061584302
 403 0024 14AEEF3F 		.word	1072672276
 404 0028 00000000 		.word	.LANCHOR3
 405              		.cfi_endproc
 406              	.LFE7:
 408              		.section	.bss.move_speed_err_I,"aw",%nobits
 409              		.align	2
 410              		.set	.LANCHOR2,. + 0
 413              	move_speed_err_I:
 414 0000 00000000 		.space	4
 415              		.section	.bss.post_target_rotation_speed.6684,"aw",%nobits
 416              		.align	2
 417              		.set	.LANCHOR4,. + 0
 420              	post_target_rotation_speed.6684:
 421 0000 00000000 		.space	4
 422              		.section	.bss.rotate_speed_err_I,"aw",%nobits
 423              		.align	2
 424              		.set	.LANCHOR3,. + 0
 427              	rotate_speed_err_I:
 428 0000 00000000 		.space	4
 429              		.section	.bss.target_vol_diff_ctrl,"aw",%nobits
 430              		.align	2
 431              		.set	.LANCHOR1,. + 0
 434              	target_vol_diff_ctrl:
 435 0000 00000000 		.space	4
 436              		.section	.bss.target_vol_sum_ctrl,"aw",%nobits
 437              		.align	2
 438              		.set	.LANCHOR0,. + 0
 441              	target_vol_sum_ctrl:
 442 0000 00000000 		.space	4
ARM GAS  C:\Temp\ccEgvbxA.s 			page 10


 443              		.text
 444              	.Letext0:
 445              		.file 2 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 446              		.file 3 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 447              		.file 4 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\st
 448              		.file 5 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 449              		.file 6 "Inc/target.h"
 450              		.file 7 "Inc/mouse_state.h"
ARM GAS  C:\Temp\ccEgvbxA.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 control.c
  C:\Temp\ccEgvbxA.s:18     .text.get_target_vol_sum_ctrl:00000000 $t
  C:\Temp\ccEgvbxA.s:26     .text.get_target_vol_sum_ctrl:00000000 get_target_vol_sum_ctrl
  C:\Temp\ccEgvbxA.s:42     .text.get_target_vol_sum_ctrl:00000008 $d
  C:\Temp\ccEgvbxA.s:47     .text.get_target_vol_diff_ctrl:00000000 $t
  C:\Temp\ccEgvbxA.s:54     .text.get_target_vol_diff_ctrl:00000000 get_target_vol_diff_ctrl
  C:\Temp\ccEgvbxA.s:69     .text.get_target_vol_diff_ctrl:00000008 $d
  C:\Temp\ccEgvbxA.s:78     .text.calc_motor_vol_ctrl:00000000 $t
  C:\Temp\ccEgvbxA.s:85     .text.calc_motor_vol_ctrl:00000000 calc_motor_vol_ctrl
  C:\Temp\ccEgvbxA.s:310    .text.calc_motor_vol_ctrl:00000148 $d
  C:\Temp\ccEgvbxA.s:331    .text.clr_trace_operate_history:00000000 $t
  C:\Temp\ccEgvbxA.s:338    .text.clr_trace_operate_history:00000000 clr_trace_operate_history
  C:\Temp\ccEgvbxA.s:359    .text.clr_trace_operate_history:0000000c $d
  C:\Temp\ccEgvbxA.s:365    .text.adjust_trace_theta:00000000 $t
  C:\Temp\ccEgvbxA.s:372    .text.adjust_trace_theta:00000000 adjust_trace_theta
  C:\Temp\ccEgvbxA.s:402    .text.adjust_trace_theta:00000020 $d
  C:\Temp\ccEgvbxA.s:409    .bss.move_speed_err_I:00000000 $d
  C:\Temp\ccEgvbxA.s:413    .bss.move_speed_err_I:00000000 move_speed_err_I
  C:\Temp\ccEgvbxA.s:416    .bss.post_target_rotation_speed.6684:00000000 $d
  C:\Temp\ccEgvbxA.s:420    .bss.post_target_rotation_speed.6684:00000000 post_target_rotation_speed.6684
  C:\Temp\ccEgvbxA.s:423    .bss.rotate_speed_err_I:00000000 $d
  C:\Temp\ccEgvbxA.s:427    .bss.rotate_speed_err_I:00000000 rotate_speed_err_I
  C:\Temp\ccEgvbxA.s:430    .bss.target_vol_diff_ctrl:00000000 $d
  C:\Temp\ccEgvbxA.s:434    .bss.target_vol_diff_ctrl:00000000 target_vol_diff_ctrl
  C:\Temp\ccEgvbxA.s:437    .bss.target_vol_sum_ctrl:00000000 $d
  C:\Temp\ccEgvbxA.s:441    .bss.target_vol_sum_ctrl:00000000 target_vol_sum_ctrl

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
get_target_move_speed
get_move_speed_ave
get_target_rotation_speed
get_rotation_speed
