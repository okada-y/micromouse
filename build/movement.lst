ARM GAS  C:\Temp\ccaFAzdI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"movement.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.move_comp_jud,"ax",%progbits
  18              		.align	1
  19              		.global	move_comp_jud
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	move_comp_jud:
  27              	.LFB133:
  28              		.file 1 "Src/movement.c"
   1:Src/movement.c **** //動作方法を記述予定(move_back)など
   2:Src/movement.c **** 
   3:Src/movement.c **** 
   4:Src/movement.c **** 
   5:Src/movement.c **** #include <stdio.h>
   6:Src/movement.c **** #include "param.h"
   7:Src/movement.c **** #include "target.h"
   8:Src/movement.c **** #include "movement.h"
   9:Src/movement.c **** #include "adjust.h"
  10:Src/movement.c **** #include "exvol.h"
  11:Src/movement.c **** #include "mouse_state.h"
  12:Src/movement.c **** #include "main.h"
  13:Src/movement.c **** 
  14:Src/movement.c **** static run_start run_first_flg = 0;			// 走行開始フラグ 0:走行開始時　1:それ以外
  15:Src/movement.c **** static wall_flg	front_wall_flg = nowall;	//　前壁の有無フラグ
  16:Src/movement.c **** static wall_flg	right_wall_flg = nowall;	//　右壁の有無フラグ
  17:Src/movement.c **** static wall_flg	left_wall_flg = nowall;		//　左壁の有無フラグ
  18:Src/movement.c **** 
  19:Src/movement.c **** 
  20:Src/movement.c **** //機能	: 移動完了判断
  21:Src/movement.c **** //引数	: なし
  22:Src/movement.c **** //返り値	: 判断結果(0:未完,1:完了)
  23:Src/movement.c **** uint8_t move_comp_jud ( void )
  24:Src/movement.c **** {
  29              		.loc 1 24 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 2


  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  38 0002 2DED028B 		vpush.64	{d8}
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 80, -16
  42              		.cfi_offset 81, -12
  25:Src/movement.c ****     return (uint8_t)((get_target_length() - get_move_length()) < 0);
  43              		.loc 1 25 5 view .LVU1
  44              		.loc 1 25 23 is_stmt 0 view .LVU2
  45 0006 FFF7FEFF 		bl	get_target_length
  46              	.LVL0:
  47 000a B0EE408A 		vmov.f32	s16, s0
  48              		.loc 1 25 45 view .LVU3
  49 000e FFF7FEFF 		bl	get_move_length
  50              	.LVL1:
  51              		.loc 1 25 43 view .LVU4
  52 0012 38EE408A 		vsub.f32	s16, s16, s0
  53              		.loc 1 25 12 view .LVU5
  54 0016 B5EEC08A 		vcmpe.f32	s16, #0
  55 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  26:Src/movement.c **** }
  56              		.loc 1 26 1 view .LVU6
  57 001e 4CBF     		ite	mi
  58 0020 0120     		movmi	r0, #1
  59 0022 0020     		movpl	r0, #0
  60 0024 BDEC028B 		vldm	sp!, {d8}
  61              	.LCFI2:
  62              		.cfi_restore 80
  63              		.cfi_restore 81
  64              		.cfi_def_cfa_offset 8
  65 0028 08BD     		pop	{r3, pc}
  66              		.cfi_endproc
  67              	.LFE133:
  69              		.section	.text.move_comp_jud_stop,"ax",%progbits
  70              		.align	1
  71              		.global	move_comp_jud_stop
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv4-sp-d16
  77              	move_comp_jud_stop:
  78              	.LFB134:
  27:Src/movement.c **** 
  28:Src/movement.c **** //機能	: 移動完了判断（停止時）
  29:Src/movement.c **** //引数	: なし
  30:Src/movement.c **** //返り値	: 判断結果(0:未完,1:完了)
  31:Src/movement.c **** uint8_t move_comp_jud_stop ( void )
  32:Src/movement.c **** {
  79              		.loc 1 32 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 08B5     		push	{r3, lr}
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 8
ARM GAS  C:\Temp\ccaFAzdI.s 			page 3


  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
  88 0002 2DED028B 		vpush.64	{d8}
  89              	.LCFI4:
  90              		.cfi_def_cfa_offset 16
  91              		.cfi_offset 80, -16
  92              		.cfi_offset 81, -12
  33:Src/movement.c ****     return (uint8_t)((get_target_length() - get_move_length()) 
  93              		.loc 1 33 5 view .LVU8
  94              		.loc 1 33 23 is_stmt 0 view .LVU9
  95 0006 FFF7FEFF 		bl	get_target_length
  96              	.LVL2:
  97 000a B0EE408A 		vmov.f32	s16, s0
  98              		.loc 1 33 45 view .LVU10
  99 000e FFF7FEFF 		bl	get_move_length
 100              	.LVL3:
 101              		.loc 1 33 43 view .LVU11
 102 0012 38EE408A 		vsub.f32	s16, s16, s0
  34:Src/movement.c **** 							< get_target_move_speed() * get_target_move_speed()/(2 * move_accel));
 103              		.loc 1 34 10 view .LVU12
 104 0016 FFF7FEFF 		bl	get_target_move_speed
 105              	.LVL4:
 106 001a F0EE408A 		vmov.f32	s17, s0
 107              		.loc 1 34 36 view .LVU13
 108 001e FFF7FEFF 		bl	get_target_move_speed
 109              	.LVL5:
 110              		.loc 1 34 34 view .LVU14
 111 0022 68EE808A 		vmul.f32	s17, s17, s0
 112              		.loc 1 34 59 view .LVU15
 113 0026 B0EE087A 		vmov.f32	s14, #3.0e+0
 114 002a C8EE877A 		vdiv.f32	s15, s17, s14
  33:Src/movement.c ****     return (uint8_t)((get_target_length() - get_move_length()) 
 115              		.loc 1 33 12 view .LVU16
 116 002e B4EEE78A 		vcmpe.f32	s16, s15
 117 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  35:Src/movement.c **** }
 118              		.loc 1 35 1 view .LVU17
 119 0036 4CBF     		ite	mi
 120 0038 0120     		movmi	r0, #1
 121 003a 0020     		movpl	r0, #0
 122 003c BDEC028B 		vldm	sp!, {d8}
 123              	.LCFI5:
 124              		.cfi_restore 80
 125              		.cfi_restore 81
 126              		.cfi_def_cfa_offset 8
 127 0040 08BD     		pop	{r3, pc}
 128              		.cfi_endproc
 129              	.LFE134:
 131              		.section	.text.rotate_comp_jud,"ax",%progbits
 132              		.align	1
 133              		.global	rotate_comp_jud
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	rotate_comp_jud:
 140              	.LFB135:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 4


  36:Src/movement.c **** 
  37:Src/movement.c **** 
  38:Src/movement.c **** //機能	: 回転完了判断
  39:Src/movement.c **** //引数	: なし
  40:Src/movement.c **** //返り値	: 判断結果(0:未完,1:完了)
  41:Src/movement.c **** uint8_t rotate_comp_jud ( void )
  42:Src/movement.c **** {
 141              		.loc 1 42 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              	.LCFI6:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
 150 0002 2DED028B 		vpush.64	{d8}
 151              	.LCFI7:
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 80, -16
 154              		.cfi_offset 81, -12
  43:Src/movement.c ****     return (uint8_t)(ABS(get_target_angle() - get_ideal_angle()) < rotate_comp_th);
 155              		.loc 1 43 5 view .LVU19
 156              		.loc 1 43 22 is_stmt 0 view .LVU20
 157 0006 FFF7FEFF 		bl	get_target_angle
 158              	.LVL6:
 159 000a B0EE408A 		vmov.f32	s16, s0
 160 000e FFF7FEFF 		bl	get_ideal_angle
 161              	.LVL7:
 162 0012 38EE408A 		vsub.f32	s16, s16, s0
 163              		.loc 1 43 12 view .LVU21
 164 0016 B5EEC08A 		vcmpe.f32	s16, #0
 165 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 166 001e 13D4     		bmi	.L12
 167              		.loc 1 43 22 discriminator 2 view .LVU22
 168 0020 FFF7FEFF 		bl	get_target_angle
 169              	.LVL8:
 170 0024 B0EE408A 		vmov.f32	s16, s0
 171 0028 FFF7FEFF 		bl	get_ideal_angle
 172              	.LVL9:
 173 002c 38EE408A 		vsub.f32	s16, s16, s0
 174              		.loc 1 43 12 discriminator 2 view .LVU23
 175 0030 DFED0E7A 		vldr.32	s15, .L13
 176 0034 B4EEE78A 		vcmpe.f32	s16, s15
 177 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 178 003c 4CBF     		ite	mi
 179 003e 0120     		movmi	r0, #1
 180 0040 0020     		movpl	r0, #0
 181              	.L8:
  44:Src/movement.c **** }
 182              		.loc 1 44 1 discriminator 4 view .LVU24
 183 0042 BDEC028B 		vldm	sp!, {d8}
 184              	.LCFI8:
 185              		.cfi_remember_state
 186              		.cfi_restore 80
 187              		.cfi_restore 81
 188              		.cfi_def_cfa_offset 8
ARM GAS  C:\Temp\ccaFAzdI.s 			page 5


 189 0046 08BD     		pop	{r3, pc}
 190              	.L12:
 191              	.LCFI9:
 192              		.cfi_restore_state
  43:Src/movement.c ****     return (uint8_t)(ABS(get_target_angle() - get_ideal_angle()) < rotate_comp_th);
 193              		.loc 1 43 22 discriminator 1 view .LVU25
 194 0048 FFF7FEFF 		bl	get_target_angle
 195              	.LVL10:
 196 004c B0EE408A 		vmov.f32	s16, s0
 197 0050 FFF7FEFF 		bl	get_ideal_angle
 198              	.LVL11:
 199 0054 38EE408A 		vsub.f32	s16, s16, s0
  43:Src/movement.c ****     return (uint8_t)(ABS(get_target_angle() - get_ideal_angle()) < rotate_comp_th);
 200              		.loc 1 43 12 discriminator 1 view .LVU26
 201 0058 DFED057A 		vldr.32	s15, .L13+4
 202 005c B4EEE78A 		vcmpe.f32	s16, s15
 203 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 204 0064 CCBF     		ite	gt
 205 0066 0120     		movgt	r0, #1
 206 0068 0020     		movle	r0, #0
 207 006a EAE7     		b	.L8
 208              	.L14:
 209              		.align	2
 210              	.L13:
 211 006c 6F12833A 		.word	981668463
 212 0070 6F1283BA 		.word	-1165815185
 213              		.cfi_endproc
 214              	.LFE135:
 216              		.section	.text.start_acceleration,"ax",%progbits
 217              		.align	1
 218              		.global	start_acceleration
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	start_acceleration:
 225              	.LFB136:
  45:Src/movement.c **** 
  46:Src/movement.c **** //機能	: スタート時加速
  47:Src/movement.c **** //引数	: なし
  48:Src/movement.c **** //返り値	: なし
  49:Src/movement.c **** void start_acceleration (void)
  50:Src/movement.c **** {
 226              		.loc 1 50 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI10:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
  51:Src/movement.c **** 	/*移動方向、加速モード設定*/
  52:Src/movement.c **** 	set_direction_mode(forward_mode);
 235              		.loc 1 52 2 view .LVU28
 236 0002 0020     		movs	r0, #0
 237 0004 FFF7FEFF 		bl	set_direction_mode
ARM GAS  C:\Temp\ccaFAzdI.s 			page 6


 238              	.LVL12:
  53:Src/movement.c **** 	set_accel_mode(acceleration);
 239              		.loc 1 53 2 view .LVU29
 240 0008 0020     		movs	r0, #0
 241 000a FFF7FEFF 		bl	set_accel_mode
 242              	.LVL13:
  54:Src/movement.c ****     set_target_length(0.060286-0.045);
 243              		.loc 1 54 5 view .LVU30
 244 000e 9FED040A 		vldr.32	s0, .L18
 245 0012 FFF7FEFF 		bl	set_target_length
 246              	.LVL14:
 247              	.L16:
  55:Src/movement.c **** 
  56:Src/movement.c ****     /*半区画進むまで待機*/
  57:Src/movement.c ****     while (1)
 248              		.loc 1 57 5 view .LVU31
  58:Src/movement.c ****     {
  59:Src/movement.c ****     	if(move_comp_jud())
 249              		.loc 1 59 6 view .LVU32
 250              		.loc 1 59 9 is_stmt 0 view .LVU33
 251 0016 FFF7FEFF 		bl	move_comp_jud
 252              	.LVL15:
 253              		.loc 1 59 8 view .LVU34
 254 001a 0028     		cmp	r0, #0
 255 001c FBD0     		beq	.L16
  60:Src/movement.c **** 	 	{
  61:Src/movement.c ****     		break;
  62:Src/movement.c ****     	}
  63:Src/movement.c ****     }
  64:Src/movement.c **** }
 256              		.loc 1 64 1 view .LVU35
 257 001e 08BD     		pop	{r3, pc}
 258              	.L19:
 259              		.align	2
 260              	.L18:
 261 0020 22727A3C 		.word	1014657570
 262              		.cfi_endproc
 263              	.LFE136:
 265              		.section	.text.half_acceleration,"ax",%progbits
 266              		.align	1
 267              		.global	half_acceleration
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu fpv4-sp-d16
 273              	half_acceleration:
 274              	.LFB137:
  65:Src/movement.c **** 
  66:Src/movement.c **** //機能	: 半分区画加速
  67:Src/movement.c **** //引数	: なし
  68:Src/movement.c **** //返り値	: なし
  69:Src/movement.c **** void half_acceleration (void)
  70:Src/movement.c **** {
 275              		.loc 1 70 1 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Temp\ccaFAzdI.s 			page 7


 279 0000 08B5     		push	{r3, lr}
 280              	.LCFI11:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
  71:Src/movement.c **** 	/*移動方向、加速モード設定*/
  72:Src/movement.c **** 	set_direction_mode(forward_mode);
 284              		.loc 1 72 2 view .LVU37
 285 0002 0020     		movs	r0, #0
 286 0004 FFF7FEFF 		bl	set_direction_mode
 287              	.LVL16:
  73:Src/movement.c **** 	set_accel_mode(acceleration);
 288              		.loc 1 73 2 view .LVU38
 289 0008 0020     		movs	r0, #0
 290 000a FFF7FEFF 		bl	set_accel_mode
 291              	.LVL17:
  74:Src/movement.c ****     set_target_length(0.045);
 292              		.loc 1 74 5 view .LVU39
 293 000e 9FED040A 		vldr.32	s0, .L23
 294 0012 FFF7FEFF 		bl	set_target_length
 295              	.LVL18:
 296              	.L21:
  75:Src/movement.c **** 
  76:Src/movement.c ****     /*半区画進むまで待機*/
  77:Src/movement.c ****     while (1)
 297              		.loc 1 77 5 view .LVU40
  78:Src/movement.c ****     {
  79:Src/movement.c ****     	if(move_comp_jud())
 298              		.loc 1 79 6 view .LVU41
 299              		.loc 1 79 9 is_stmt 0 view .LVU42
 300 0016 FFF7FEFF 		bl	move_comp_jud
 301              	.LVL19:
 302              		.loc 1 79 8 view .LVU43
 303 001a 0028     		cmp	r0, #0
 304 001c FBD0     		beq	.L21
  80:Src/movement.c ****     	{
  81:Src/movement.c ****     		break;
  82:Src/movement.c ****     	}
  83:Src/movement.c ****     }
  84:Src/movement.c **** }
 305              		.loc 1 84 1 view .LVU44
 306 001e 08BD     		pop	{r3, pc}
 307              	.L24:
 308              		.align	2
 309              	.L23:
 310 0020 EC51383D 		.word	1027101164
 311              		.cfi_endproc
 312              	.LFE137:
 314              		.section	.text.half_deceleration,"ax",%progbits
 315              		.align	1
 316              		.global	half_deceleration
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	half_deceleration:
 323              	.LFB138:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 8


  85:Src/movement.c **** 
  86:Src/movement.c **** 
  87:Src/movement.c **** //機能	: 反区画減速
  88:Src/movement.c **** //引数	: なし
  89:Src/movement.c **** //返り値	: なし
  90:Src/movement.c **** void half_deceleration (void)
  91:Src/movement.c **** {
 324              		.loc 1 91 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 08B5     		push	{r3, lr}
 329              	.LCFI12:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 3, -8
 332              		.cfi_offset 14, -4
  92:Src/movement.c **** 	/*移動方向、加速モード設定*/
  93:Src/movement.c **** 	set_direction_mode(forward_mode);
 333              		.loc 1 93 2 view .LVU46
 334 0002 0020     		movs	r0, #0
 335 0004 FFF7FEFF 		bl	set_direction_mode
 336              	.LVL20:
  94:Src/movement.c **** 	set_accel_mode(deceleration);
 337              		.loc 1 94 2 view .LVU47
 338 0008 0120     		movs	r0, #1
 339 000a FFF7FEFF 		bl	set_accel_mode
 340              	.LVL21:
  95:Src/movement.c ****     set_target_length(0.045);
 341              		.loc 1 95 5 view .LVU48
 342 000e 9FED090A 		vldr.32	s0, .L28
 343 0012 FFF7FEFF 		bl	set_target_length
 344              	.LVL22:
  96:Src/movement.c **** 	set_speed_under_lim_flg(slow);
 345              		.loc 1 96 2 view .LVU49
 346 0016 0120     		movs	r0, #1
 347 0018 FFF7FEFF 		bl	set_speed_under_lim_flg
 348              	.LVL23:
 349              	.L26:
  97:Src/movement.c ****     /*半区画進むまで待機*/
  98:Src/movement.c ****     while (1)
 350              		.loc 1 98 5 view .LVU50
  99:Src/movement.c ****     {
 100:Src/movement.c ****     	if(move_comp_jud_stop())
 351              		.loc 1 100 6 view .LVU51
 352              		.loc 1 100 9 is_stmt 0 view .LVU52
 353 001c FFF7FEFF 		bl	move_comp_jud_stop
 354              	.LVL24:
 355              		.loc 1 100 8 view .LVU53
 356 0020 0028     		cmp	r0, #0
 357 0022 FBD0     		beq	.L26
 101:Src/movement.c ****     	{
 102:Src/movement.c **** 			set_speed_under_lim_flg(zero);
 358              		.loc 1 102 4 is_stmt 1 view .LVU54
 359 0024 0020     		movs	r0, #0
 360 0026 FFF7FEFF 		bl	set_speed_under_lim_flg
 361              	.LVL25:
 103:Src/movement.c **** 			HAL_Delay(100);
ARM GAS  C:\Temp\ccaFAzdI.s 			page 9


 362              		.loc 1 103 4 view .LVU55
 363 002a 6420     		movs	r0, #100
 364 002c FFF7FEFF 		bl	HAL_Delay
 365              	.LVL26:
 104:Src/movement.c ****     		break;
 366              		.loc 1 104 7 view .LVU56
 105:Src/movement.c ****     	}
 106:Src/movement.c ****     }
 107:Src/movement.c **** }
 367              		.loc 1 107 1 is_stmt 0 view .LVU57
 368 0030 08BD     		pop	{r3, pc}
 369              	.L29:
 370 0032 00BF     		.align	2
 371              	.L28:
 372 0034 EC51383D 		.word	1027101164
 373              		.cfi_endproc
 374              	.LFE138:
 376              		.section	.text.constant_speed,"ax",%progbits
 377              		.align	1
 378              		.global	constant_speed
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv4-sp-d16
 384              	constant_speed:
 385              	.LFB139:
 108:Src/movement.c **** 
 109:Src/movement.c **** //機能	: 一区画定速
 110:Src/movement.c **** //引数	: なし
 111:Src/movement.c **** //返り値	: なし
 112:Src/movement.c **** void constant_speed (void)
 113:Src/movement.c **** {
 386              		.loc 1 113 1 is_stmt 1 view -0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 08B5     		push	{r3, lr}
 391              	.LCFI13:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 3, -8
 394              		.cfi_offset 14, -4
 114:Src/movement.c **** 	/*移動方向、加速モード設定*/
 115:Src/movement.c **** 	set_direction_mode(forward_mode);
 395              		.loc 1 115 2 view .LVU59
 396 0002 0020     		movs	r0, #0
 397 0004 FFF7FEFF 		bl	set_direction_mode
 398              	.LVL27:
 116:Src/movement.c ****     set_accel_mode(acceleration);
 399              		.loc 1 116 5 view .LVU60
 400 0008 0020     		movs	r0, #0
 401 000a FFF7FEFF 		bl	set_accel_mode
 402              	.LVL28:
 117:Src/movement.c ****     set_target_length(0.09);
 403              		.loc 1 117 5 view .LVU61
 404 000e 9FED040A 		vldr.32	s0, .L33
 405 0012 FFF7FEFF 		bl	set_target_length
 406              	.LVL29:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 10


 407              	.L31:
 118:Src/movement.c **** 
 119:Src/movement.c ****     /*一区画進むまで待機*/
 120:Src/movement.c ****     while (1)
 408              		.loc 1 120 5 view .LVU62
 121:Src/movement.c ****     {
 122:Src/movement.c ****     	if(move_comp_jud())
 409              		.loc 1 122 6 view .LVU63
 410              		.loc 1 122 9 is_stmt 0 view .LVU64
 411 0016 FFF7FEFF 		bl	move_comp_jud
 412              	.LVL30:
 413              		.loc 1 122 8 view .LVU65
 414 001a 0028     		cmp	r0, #0
 415 001c FBD0     		beq	.L31
 123:Src/movement.c ****     	{
 124:Src/movement.c ****     		break;
 125:Src/movement.c ****     	}
 126:Src/movement.c ****     }
 127:Src/movement.c **** }
 416              		.loc 1 127 1 view .LVU66
 417 001e 08BD     		pop	{r3, pc}
 418              	.L34:
 419              		.align	2
 420              	.L33:
 421 0020 EC51B83D 		.word	1035489772
 422              		.cfi_endproc
 423              	.LFE139:
 425              		.section	.text.constant_speed_offset,"ax",%progbits
 426              		.align	1
 427              		.global	constant_speed_offset
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	constant_speed_offset:
 434              	.LVL31:
 435              	.LFB140:
 128:Src/movement.c **** 
 129:Src/movement.c **** //機能	: 一定距離定速
 130:Src/movement.c **** //引数	: なし
 131:Src/movement.c **** //返り値	: なし
 132:Src/movement.c **** void constant_speed_offset (float offset_length)
 133:Src/movement.c **** {
 436              		.loc 1 133 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		.loc 1 133 1 is_stmt 0 view .LVU68
 441 0000 08B5     		push	{r3, lr}
 442              	.LCFI14:
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 3, -8
 445              		.cfi_offset 14, -4
 446 0002 2DED028B 		vpush.64	{d8}
 447              	.LCFI15:
 448              		.cfi_def_cfa_offset 16
 449              		.cfi_offset 80, -16
ARM GAS  C:\Temp\ccaFAzdI.s 			page 11


 450              		.cfi_offset 81, -12
 451 0006 B0EE408A 		vmov.f32	s16, s0
 134:Src/movement.c **** 	/*移動方向、加速モード設定*/
 135:Src/movement.c **** 	set_direction_mode(forward_mode);
 452              		.loc 1 135 2 is_stmt 1 view .LVU69
 453 000a 0020     		movs	r0, #0
 454 000c FFF7FEFF 		bl	set_direction_mode
 455              	.LVL32:
 136:Src/movement.c ****     set_accel_mode(acceleration);
 456              		.loc 1 136 5 view .LVU70
 457 0010 0020     		movs	r0, #0
 458 0012 FFF7FEFF 		bl	set_accel_mode
 459              	.LVL33:
 137:Src/movement.c ****     set_target_length(offset_length);
 460              		.loc 1 137 5 view .LVU71
 461 0016 B0EE480A 		vmov.f32	s0, s16
 462 001a FFF7FEFF 		bl	set_target_length
 463              	.LVL34:
 464              	.L36:
 138:Src/movement.c **** 
 139:Src/movement.c ****     /*一区画進むまで待機*/
 140:Src/movement.c ****     while (1)
 465              		.loc 1 140 5 view .LVU72
 141:Src/movement.c ****     {
 142:Src/movement.c ****     	if(move_comp_jud())
 466              		.loc 1 142 6 view .LVU73
 467              		.loc 1 142 9 is_stmt 0 view .LVU74
 468 001e FFF7FEFF 		bl	move_comp_jud
 469              	.LVL35:
 470              		.loc 1 142 8 view .LVU75
 471 0022 0028     		cmp	r0, #0
 472 0024 FBD0     		beq	.L36
 143:Src/movement.c ****     	{
 144:Src/movement.c ****     		break;
 145:Src/movement.c ****     	}
 146:Src/movement.c ****     }
 147:Src/movement.c **** }
 473              		.loc 1 147 1 view .LVU76
 474 0026 BDEC028B 		vldm	sp!, {d8}
 475              	.LCFI16:
 476              		.cfi_restore 80
 477              		.cfi_restore 81
 478              		.cfi_def_cfa_offset 8
 479              	.LVL36:
 480              		.loc 1 147 1 view .LVU77
 481 002a 08BD     		pop	{r3, pc}
 482              		.cfi_endproc
 483              	.LFE140:
 485              		.section	.text.turn_clk_90,"ax",%progbits
 486              		.align	1
 487              		.global	turn_clk_90
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu fpv4-sp-d16
 493              	turn_clk_90:
 494              	.LFB141:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 12


 148:Src/movement.c **** 
 149:Src/movement.c **** //機能	: 時計回りに90度回転
 150:Src/movement.c **** //引数	: なし
 151:Src/movement.c **** //返り値	: なし
 152:Src/movement.c **** void turn_clk_90 (void)
 153:Src/movement.c **** {
 495              		.loc 1 153 1 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 08B5     		push	{r3, lr}
 500              	.LCFI17:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 3, -8
 503              		.cfi_offset 14, -4
 154:Src/movement.c **** 	/*回転方向設定*/
 155:Src/movement.c **** 	set_rotation_mode(clockwise);
 504              		.loc 1 155 2 view .LVU79
 505 0002 0120     		movs	r0, #1
 506 0004 FFF7FEFF 		bl	set_rotation_mode
 507              	.LVL37:
 156:Src/movement.c ****     set_target_angle(-PI/2);
 508              		.loc 1 156 5 view .LVU80
 509 0008 9FED040A 		vldr.32	s0, .L41
 510 000c FFF7FEFF 		bl	set_target_angle
 511              	.LVL38:
 512              	.L39:
 157:Src/movement.c **** 
 158:Src/movement.c ****     /*90度回転するまで待機*/
 159:Src/movement.c ****     while (1)
 513              		.loc 1 159 5 view .LVU81
 160:Src/movement.c ****     {
 161:Src/movement.c ****     	if(rotate_comp_jud())
 514              		.loc 1 161 6 view .LVU82
 515              		.loc 1 161 9 is_stmt 0 view .LVU83
 516 0010 FFF7FEFF 		bl	rotate_comp_jud
 517              	.LVL39:
 518              		.loc 1 161 8 view .LVU84
 519 0014 0028     		cmp	r0, #0
 520 0016 FBD0     		beq	.L39
 162:Src/movement.c ****     	{
 163:Src/movement.c ****     		break;
 164:Src/movement.c ****     	}
 165:Src/movement.c ****     }
 166:Src/movement.c **** 
 167:Src/movement.c **** }
 521              		.loc 1 167 1 view .LVU85
 522 0018 08BD     		pop	{r3, pc}
 523              	.L42:
 524 001a 00BF     		.align	2
 525              	.L41:
 526 001c DA0FC9BF 		.word	-1077342246
 527              		.cfi_endproc
 528              	.LFE141:
 530              		.section	.text.turn_conclk_90,"ax",%progbits
 531              		.align	1
 532              		.global	turn_conclk_90
ARM GAS  C:\Temp\ccaFAzdI.s 			page 13


 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	turn_conclk_90:
 539              	.LFB142:
 168:Src/movement.c **** 
 169:Src/movement.c **** //機能	: 反時計回りに90度回転
 170:Src/movement.c **** //引数	: なし
 171:Src/movement.c **** //返り値	: なし
 172:Src/movement.c **** void turn_conclk_90 (void)
 173:Src/movement.c **** {
 540              		.loc 1 173 1 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 08B5     		push	{r3, lr}
 545              	.LCFI18:
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 3, -8
 548              		.cfi_offset 14, -4
 174:Src/movement.c **** 	/*回転方向設定*/
 175:Src/movement.c **** 	set_rotation_mode(counter_clockwise);
 549              		.loc 1 175 2 view .LVU87
 550 0002 0020     		movs	r0, #0
 551 0004 FFF7FEFF 		bl	set_rotation_mode
 552              	.LVL40:
 176:Src/movement.c ****     set_target_angle(PI/2);
 553              		.loc 1 176 5 view .LVU88
 554 0008 9FED040A 		vldr.32	s0, .L46
 555 000c FFF7FEFF 		bl	set_target_angle
 556              	.LVL41:
 557              	.L44:
 177:Src/movement.c **** 
 178:Src/movement.c ****     /*90度回転するまで待機*/
 179:Src/movement.c ****     while (1)
 558              		.loc 1 179 5 view .LVU89
 180:Src/movement.c ****     {
 181:Src/movement.c ****     	if(rotate_comp_jud())
 559              		.loc 1 181 6 view .LVU90
 560              		.loc 1 181 9 is_stmt 0 view .LVU91
 561 0010 FFF7FEFF 		bl	rotate_comp_jud
 562              	.LVL42:
 563              		.loc 1 181 8 view .LVU92
 564 0014 0028     		cmp	r0, #0
 565 0016 FBD0     		beq	.L44
 182:Src/movement.c ****     	{
 183:Src/movement.c ****     		break;
 184:Src/movement.c ****     	}
 185:Src/movement.c ****     }
 186:Src/movement.c **** 
 187:Src/movement.c **** }
 566              		.loc 1 187 1 view .LVU93
 567 0018 08BD     		pop	{r3, pc}
 568              	.L47:
 569 001a 00BF     		.align	2
 570              	.L46:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 14


 571 001c DA0FC93F 		.word	1070141402
 572              		.cfi_endproc
 573              	.LFE142:
 575              		.section	.text.turn_conclk_180,"ax",%progbits
 576              		.align	1
 577              		.global	turn_conclk_180
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv4-sp-d16
 583              	turn_conclk_180:
 584              	.LFB143:
 188:Src/movement.c **** 
 189:Src/movement.c **** //機能	: 反時計回りに180度回転
 190:Src/movement.c **** //引数	: なし
 191:Src/movement.c **** //返り値	: なし
 192:Src/movement.c **** void turn_conclk_180 (void)
 193:Src/movement.c **** {
 585              		.loc 1 193 1 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 08B5     		push	{r3, lr}
 590              	.LCFI19:
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 3, -8
 593              		.cfi_offset 14, -4
 194:Src/movement.c **** 	/*回転方向設定*/
 195:Src/movement.c **** 	set_rotation_mode(counter_clockwise);
 594              		.loc 1 195 2 view .LVU95
 595 0002 0020     		movs	r0, #0
 596 0004 FFF7FEFF 		bl	set_rotation_mode
 597              	.LVL43:
 196:Src/movement.c ****     set_target_angle(PI);
 598              		.loc 1 196 5 view .LVU96
 599 0008 9FED040A 		vldr.32	s0, .L51
 600 000c FFF7FEFF 		bl	set_target_angle
 601              	.LVL44:
 602              	.L49:
 197:Src/movement.c **** 
 198:Src/movement.c ****     /*180度回転するまで待機*/
 199:Src/movement.c ****     while (1)
 603              		.loc 1 199 5 view .LVU97
 200:Src/movement.c ****     {
 201:Src/movement.c ****     	if(rotate_comp_jud())//0.3deg手前まできたらブレイク
 604              		.loc 1 201 6 view .LVU98
 605              		.loc 1 201 9 is_stmt 0 view .LVU99
 606 0010 FFF7FEFF 		bl	rotate_comp_jud
 607              	.LVL45:
 608              		.loc 1 201 8 view .LVU100
 609 0014 0028     		cmp	r0, #0
 610 0016 FBD0     		beq	.L49
 202:Src/movement.c ****     	{
 203:Src/movement.c ****     		break;
 204:Src/movement.c ****     	}
 205:Src/movement.c ****     }
 206:Src/movement.c **** 
ARM GAS  C:\Temp\ccaFAzdI.s 			page 15


 207:Src/movement.c **** }
 611              		.loc 1 207 1 view .LVU101
 612 0018 08BD     		pop	{r3, pc}
 613              	.L52:
 614 001a 00BF     		.align	2
 615              	.L51:
 616 001c DA0F4940 		.word	1078530010
 617              		.cfi_endproc
 618              	.LFE143:
 620              		.section	.text.clr_run_first_flg,"ax",%progbits
 621              		.align	1
 622              		.global	clr_run_first_flg
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv4-sp-d16
 628              	clr_run_first_flg:
 629              	.LFB144:
 208:Src/movement.c **** 
 209:Src/movement.c **** //機能	: 走行開始フラグのクリア
 210:Src/movement.c **** //引数	: なし
 211:Src/movement.c **** //返り値	: なし
 212:Src/movement.c **** void clr_run_first_flg (void)
 213:Src/movement.c **** {
 630              		.loc 1 213 1 is_stmt 1 view -0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 214:Src/movement.c **** 	run_first_flg = start;
 635              		.loc 1 214 2 view .LVU103
 636              		.loc 1 214 16 is_stmt 0 view .LVU104
 637 0000 014B     		ldr	r3, .L54
 638 0002 0022     		movs	r2, #0
 639 0004 1A70     		strb	r2, [r3]
 215:Src/movement.c **** }
 640              		.loc 1 215 1 view .LVU105
 641 0006 7047     		bx	lr
 642              	.L55:
 643              		.align	2
 644              	.L54:
 645 0008 00000000 		.word	.LANCHOR0
 646              		.cfi_endproc
 647              	.LFE144:
 649              		.section	.text.set_run_first_flg,"ax",%progbits
 650              		.align	1
 651              		.global	set_run_first_flg
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu fpv4-sp-d16
 657              	set_run_first_flg:
 658              	.LFB145:
 216:Src/movement.c **** 
 217:Src/movement.c **** //機能	: 走行開始フラグセット
 218:Src/movement.c **** //引数	: なし
 219:Src/movement.c **** //返り値	: なし
ARM GAS  C:\Temp\ccaFAzdI.s 			page 16


 220:Src/movement.c **** void set_run_first_flg (void)
 221:Src/movement.c **** {
 659              		.loc 1 221 1 is_stmt 1 view -0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 222:Src/movement.c **** 	run_first_flg = already;
 664              		.loc 1 222 2 view .LVU107
 665              		.loc 1 222 16 is_stmt 0 view .LVU108
 666 0000 014B     		ldr	r3, .L57
 667 0002 0122     		movs	r2, #1
 668 0004 1A70     		strb	r2, [r3]
 223:Src/movement.c **** }
 669              		.loc 1 223 1 view .LVU109
 670 0006 7047     		bx	lr
 671              	.L58:
 672              		.align	2
 673              	.L57:
 674 0008 00000000 		.word	.LANCHOR0
 675              		.cfi_endproc
 676              	.LFE145:
 678              		.section	.text.clr_wall_flg,"ax",%progbits
 679              		.align	1
 680              		.global	clr_wall_flg
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	clr_wall_flg:
 687              	.LFB146:
 224:Src/movement.c **** 
 225:Src/movement.c **** 
 226:Src/movement.c **** //機能	: 壁の有無フラグのクリア
 227:Src/movement.c **** //引数	: なし
 228:Src/movement.c **** //返り値	: なし
 229:Src/movement.c **** void clr_wall_flg (void)
 230:Src/movement.c **** {
 688              		.loc 1 230 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 231:Src/movement.c **** 	front_wall_flg = nowall;
 693              		.loc 1 231 2 view .LVU111
 694              		.loc 1 231 17 is_stmt 0 view .LVU112
 695 0000 0023     		movs	r3, #0
 696 0002 034A     		ldr	r2, .L60
 697 0004 1370     		strb	r3, [r2]
 232:Src/movement.c **** 	right_wall_flg = nowall;
 698              		.loc 1 232 2 is_stmt 1 view .LVU113
 699              		.loc 1 232 17 is_stmt 0 view .LVU114
 700 0006 034A     		ldr	r2, .L60+4
 701 0008 1370     		strb	r3, [r2]
 233:Src/movement.c **** 	left_wall_flg = nowall;
 702              		.loc 1 233 2 is_stmt 1 view .LVU115
 703              		.loc 1 233 16 is_stmt 0 view .LVU116
ARM GAS  C:\Temp\ccaFAzdI.s 			page 17


 704 000a 034A     		ldr	r2, .L60+8
 705 000c 1370     		strb	r3, [r2]
 234:Src/movement.c **** }
 706              		.loc 1 234 1 view .LVU117
 707 000e 7047     		bx	lr
 708              	.L61:
 709              		.align	2
 710              	.L60:
 711 0010 00000000 		.word	.LANCHOR1
 712 0014 00000000 		.word	.LANCHOR2
 713 0018 00000000 		.word	.LANCHOR3
 714              		.cfi_endproc
 715              	.LFE146:
 717              		.section	.text.set_front_wall_flg,"ax",%progbits
 718              		.align	1
 719              		.global	set_front_wall_flg
 720              		.syntax unified
 721              		.thumb
 722              		.thumb_func
 723              		.fpu fpv4-sp-d16
 725              	set_front_wall_flg:
 726              	.LFB147:
 235:Src/movement.c **** 
 236:Src/movement.c **** //機能	: 前壁フラグセット
 237:Src/movement.c **** //引数	: なし
 238:Src/movement.c **** //返り値	: なし
 239:Src/movement.c **** void set_front_wall_flg ( void )
 240:Src/movement.c **** {
 727              		.loc 1 240 1 is_stmt 1 view -0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 241:Src/movement.c **** 	front_wall_flg = wall;
 732              		.loc 1 241 2 view .LVU119
 733              		.loc 1 241 17 is_stmt 0 view .LVU120
 734 0000 014B     		ldr	r3, .L63
 735 0002 0122     		movs	r2, #1
 736 0004 1A70     		strb	r2, [r3]
 242:Src/movement.c **** }
 737              		.loc 1 242 1 view .LVU121
 738 0006 7047     		bx	lr
 739              	.L64:
 740              		.align	2
 741              	.L63:
 742 0008 00000000 		.word	.LANCHOR1
 743              		.cfi_endproc
 744              	.LFE147:
 746              		.section	.text.set_rigth_wall_flg,"ax",%progbits
 747              		.align	1
 748              		.global	set_rigth_wall_flg
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 752              		.fpu fpv4-sp-d16
 754              	set_rigth_wall_flg:
 755              	.LFB148:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 18


 243:Src/movement.c **** 
 244:Src/movement.c **** //機能	: 右壁フラグセット
 245:Src/movement.c **** //引数	: なし
 246:Src/movement.c **** //返り値	: なし
 247:Src/movement.c **** void set_rigth_wall_flg ( void )
 248:Src/movement.c **** {
 756              		.loc 1 248 1 is_stmt 1 view -0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 249:Src/movement.c **** 	right_wall_flg = wall;
 761              		.loc 1 249 2 view .LVU123
 762              		.loc 1 249 17 is_stmt 0 view .LVU124
 763 0000 014B     		ldr	r3, .L66
 764 0002 0122     		movs	r2, #1
 765 0004 1A70     		strb	r2, [r3]
 250:Src/movement.c **** }
 766              		.loc 1 250 1 view .LVU125
 767 0006 7047     		bx	lr
 768              	.L67:
 769              		.align	2
 770              	.L66:
 771 0008 00000000 		.word	.LANCHOR2
 772              		.cfi_endproc
 773              	.LFE148:
 775              		.section	.text.set_left_wall_flg,"ax",%progbits
 776              		.align	1
 777              		.global	set_left_wall_flg
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu fpv4-sp-d16
 783              	set_left_wall_flg:
 784              	.LFB149:
 251:Src/movement.c **** 
 252:Src/movement.c **** //機能	: 左壁フラグセット
 253:Src/movement.c **** //引数	: なし
 254:Src/movement.c **** //返り値	: なし
 255:Src/movement.c **** void set_left_wall_flg ( void )
 256:Src/movement.c **** {
 785              		.loc 1 256 1 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 257:Src/movement.c **** 	left_wall_flg = wall;
 790              		.loc 1 257 2 view .LVU127
 791              		.loc 1 257 16 is_stmt 0 view .LVU128
 792 0000 014B     		ldr	r3, .L69
 793 0002 0122     		movs	r2, #1
 794 0004 1A70     		strb	r2, [r3]
 258:Src/movement.c **** }
 795              		.loc 1 258 1 view .LVU129
 796 0006 7047     		bx	lr
 797              	.L70:
 798              		.align	2
ARM GAS  C:\Temp\ccaFAzdI.s 			page 19


 799              	.L69:
 800 0008 00000000 		.word	.LANCHOR3
 801              		.cfi_endproc
 802              	.LFE149:
 804              		.section	.text.slalom_clock_90,"ax",%progbits
 805              		.align	1
 806              		.global	slalom_clock_90
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 810              		.fpu fpv4-sp-d16
 812              	slalom_clock_90:
 813              	.LFB150:
 259:Src/movement.c **** 
 260:Src/movement.c **** ////////////////////////////////////////
 261:Src/movement.c **** /* スラローム軌跡生成関数			   */
 262:Src/movement.c **** ////////////////////////////////////////
 263:Src/movement.c **** 
 264:Src/movement.c **** //機能	: 時計回り90度のスラローム軌跡
 265:Src/movement.c **** //引数	: なし
 266:Src/movement.c **** //返り値	: なし
 267:Src/movement.c **** void slalom_clock_90 (void)
 268:Src/movement.c **** {
 814              		.loc 1 268 1 is_stmt 1 view -0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818 0000 08B5     		push	{r3, lr}
 819              	.LCFI20:
 820              		.cfi_def_cfa_offset 8
 821              		.cfi_offset 3, -8
 822              		.cfi_offset 14, -4
 823 0002 2DED028B 		vpush.64	{d8}
 824              	.LCFI21:
 825              		.cfi_def_cfa_offset 16
 826              		.cfi_offset 80, -16
 827              		.cfi_offset 81, -12
 269:Src/movement.c **** 	constant_speed_offset(slalom_clk_90_before_offset);
 828              		.loc 1 269 2 view .LVU131
 829 0006 9FED098A 		vldr.32	s16, .L73
 830 000a B0EE480A 		vmov.f32	s0, s16
 831 000e FFF7FEFF 		bl	constant_speed_offset
 832              	.LVL46:
 270:Src/movement.c **** 	turn_clk_90();
 833              		.loc 1 270 2 view .LVU132
 834 0012 FFF7FEFF 		bl	turn_clk_90
 835              	.LVL47:
 271:Src/movement.c **** 	set_target_length(slalom_clk_90_offset); //並進距離を目標距離に加算
 836              		.loc 1 271 2 view .LVU133
 837 0016 9FED060A 		vldr.32	s0, .L73+4
 838 001a FFF7FEFF 		bl	set_target_length
 839              	.LVL48:
 272:Src/movement.c **** 	constant_speed_offset(slalom_clk_90_after_offset);
 840              		.loc 1 272 2 view .LVU134
 841 001e B0EE480A 		vmov.f32	s0, s16
 842 0022 FFF7FEFF 		bl	constant_speed_offset
 843              	.LVL49:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 20


 273:Src/movement.c **** }
 844              		.loc 1 273 1 is_stmt 0 view .LVU135
 845 0026 BDEC028B 		vldm	sp!, {d8}
 846              	.LCFI22:
 847              		.cfi_restore 80
 848              		.cfi_restore 81
 849              		.cfi_def_cfa_offset 8
 850 002a 08BD     		pop	{r3, pc}
 851              	.L74:
 852              		.align	2
 853              	.L73:
 854 002c 5839343C 		.word	1010055512
 855 0030 68B36A3D 		.word	1030402920
 856              		.cfi_endproc
 857              	.LFE150:
 859              		.section	.text.slalom_conclock_90,"ax",%progbits
 860              		.align	1
 861              		.global	slalom_conclock_90
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 865              		.fpu fpv4-sp-d16
 867              	slalom_conclock_90:
 868              	.LFB151:
 274:Src/movement.c **** 
 275:Src/movement.c **** //機能	: 反時計回り90度のスラローム軌跡
 276:Src/movement.c **** //引数	: なし
 277:Src/movement.c **** //返り値	: なし
 278:Src/movement.c **** void slalom_conclock_90 (void)
 279:Src/movement.c **** {
 869              		.loc 1 279 1 is_stmt 1 view -0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873 0000 08B5     		push	{r3, lr}
 874              	.LCFI23:
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 3, -8
 877              		.cfi_offset 14, -4
 878 0002 2DED028B 		vpush.64	{d8}
 879              	.LCFI24:
 880              		.cfi_def_cfa_offset 16
 881              		.cfi_offset 80, -16
 882              		.cfi_offset 81, -12
 280:Src/movement.c **** 	constant_speed_offset(slalom_conclk_90_before_offset);
 883              		.loc 1 280 2 view .LVU137
 884 0006 9FED098A 		vldr.32	s16, .L77
 885 000a B0EE480A 		vmov.f32	s0, s16
 886 000e FFF7FEFF 		bl	constant_speed_offset
 887              	.LVL50:
 281:Src/movement.c **** 	turn_conclk_90();
 888              		.loc 1 281 2 view .LVU138
 889 0012 FFF7FEFF 		bl	turn_conclk_90
 890              	.LVL51:
 282:Src/movement.c **** 	set_target_length(slalom_conclk_90_offset); //並進距離を目標距離に加算
 891              		.loc 1 282 2 view .LVU139
 892 0016 9FED060A 		vldr.32	s0, .L77+4
ARM GAS  C:\Temp\ccaFAzdI.s 			page 21


 893 001a FFF7FEFF 		bl	set_target_length
 894              	.LVL52:
 283:Src/movement.c **** 	constant_speed_offset(slalom_conclk_90_after_offset);
 895              		.loc 1 283 2 view .LVU140
 896 001e B0EE480A 		vmov.f32	s0, s16
 897 0022 FFF7FEFF 		bl	constant_speed_offset
 898              	.LVL53:
 284:Src/movement.c **** }
 899              		.loc 1 284 1 is_stmt 0 view .LVU141
 900 0026 BDEC028B 		vldm	sp!, {d8}
 901              	.LCFI25:
 902              		.cfi_restore 80
 903              		.cfi_restore 81
 904              		.cfi_def_cfa_offset 8
 905 002a 08BD     		pop	{r3, pc}
 906              	.L78:
 907              		.align	2
 908              	.L77:
 909 002c 5839343C 		.word	1010055512
 910 0030 68B36A3D 		.word	1030402920
 911              		.cfi_endproc
 912              	.LFE151:
 914              		.section	.text.move_front,"ax",%progbits
 915              		.align	1
 916              		.global	move_front
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 920              		.fpu fpv4-sp-d16
 922              	move_front:
 923              	.LFB152:
 285:Src/movement.c **** 
 286:Src/movement.c **** 
 287:Src/movement.c **** 
 288:Src/movement.c **** ////////////////////////////////////////
 289:Src/movement.c **** /* 軌跡生成関数						   */
 290:Src/movement.c **** ////////////////////////////////////////
 291:Src/movement.c **** 
 292:Src/movement.c **** 
 293:Src/movement.c **** //機能	: 前進
 294:Src/movement.c **** //引数	: なし
 295:Src/movement.c **** //返り値	: なし
 296:Src/movement.c **** void move_front (void)
 297:Src/movement.c **** {
 924              		.loc 1 297 1 is_stmt 1 view -0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928 0000 08B5     		push	{r3, lr}
 929              	.LCFI26:
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 3, -8
 932              		.cfi_offset 14, -4
 298:Src/movement.c **** 	if(run_first_flg == start)
 933              		.loc 1 298 2 view .LVU143
 934              		.loc 1 298 19 is_stmt 0 view .LVU144
 935 0002 0F4B     		ldr	r3, .L85
ARM GAS  C:\Temp\ccaFAzdI.s 			page 22


 936 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937              		.loc 1 298 4 view .LVU145
 938 0006 4BB1     		cbz	r3, .L83
 939              	.L80:
 299:Src/movement.c **** 	{
 300:Src/movement.c **** 		set_mode_ctrl(side_wall);
 301:Src/movement.c **** 		half_acceleration();//半区画加速
 302:Src/movement.c **** 		set_mode_ctrl(trace);
 303:Src/movement.c **** 	}
 304:Src/movement.c **** 	if(run_first_flg == already)
 940              		.loc 1 304 2 is_stmt 1 view .LVU146
 941              		.loc 1 304 19 is_stmt 0 view .LVU147
 942 0008 0D4B     		ldr	r3, .L85
 943 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 944              		.loc 1 304 4 view .LVU148
 945 000c 012B     		cmp	r3, #1
 946 000e 0ED0     		beq	.L84
 947              	.L81:
 305:Src/movement.c **** 	{
 306:Src/movement.c **** 		set_mode_ctrl(side_wall);
 307:Src/movement.c **** 		constant_speed();//定速で一マス前進
 308:Src/movement.c **** 		set_mode_ctrl(trace);
 309:Src/movement.c **** 	}
 310:Src/movement.c **** 	run_first_flg = already;
 948              		.loc 1 310 2 is_stmt 1 view .LVU149
 949              		.loc 1 310 16 is_stmt 0 view .LVU150
 950 0010 0B4B     		ldr	r3, .L85
 951 0012 0122     		movs	r2, #1
 952 0014 1A70     		strb	r2, [r3]
 311:Src/movement.c **** 	clr_wall_flg();
 953              		.loc 1 311 2 is_stmt 1 view .LVU151
 954 0016 FFF7FEFF 		bl	clr_wall_flg
 955              	.LVL54:
 312:Src/movement.c **** }
 956              		.loc 1 312 1 is_stmt 0 view .LVU152
 957 001a 08BD     		pop	{r3, pc}
 958              	.L83:
 300:Src/movement.c **** 		half_acceleration();//半区画加速
 959              		.loc 1 300 3 is_stmt 1 view .LVU153
 960 001c 0220     		movs	r0, #2
 961 001e FFF7FEFF 		bl	set_mode_ctrl
 962              	.LVL55:
 301:Src/movement.c **** 		set_mode_ctrl(trace);
 963              		.loc 1 301 3 view .LVU154
 964 0022 FFF7FEFF 		bl	half_acceleration
 965              	.LVL56:
 302:Src/movement.c **** 	}
 966              		.loc 1 302 3 view .LVU155
 967 0026 0020     		movs	r0, #0
 968 0028 FFF7FEFF 		bl	set_mode_ctrl
 969              	.LVL57:
 970 002c ECE7     		b	.L80
 971              	.L84:
 306:Src/movement.c **** 		constant_speed();//定速で一マス前進
 972              		.loc 1 306 3 view .LVU156
 973 002e 0220     		movs	r0, #2
 974 0030 FFF7FEFF 		bl	set_mode_ctrl
ARM GAS  C:\Temp\ccaFAzdI.s 			page 23


 975              	.LVL58:
 307:Src/movement.c **** 		set_mode_ctrl(trace);
 976              		.loc 1 307 3 view .LVU157
 977 0034 FFF7FEFF 		bl	constant_speed
 978              	.LVL59:
 308:Src/movement.c **** 	}
 979              		.loc 1 308 3 view .LVU158
 980 0038 0020     		movs	r0, #0
 981 003a FFF7FEFF 		bl	set_mode_ctrl
 982              	.LVL60:
 983 003e E7E7     		b	.L81
 984              	.L86:
 985              		.align	2
 986              	.L85:
 987 0040 00000000 		.word	.LANCHOR0
 988              		.cfi_endproc
 989              	.LFE152:
 991              		.section	.text.move_right,"ax",%progbits
 992              		.align	1
 993              		.global	move_right
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu fpv4-sp-d16
 999              	move_right:
 1000              	.LFB153:
 313:Src/movement.c **** 
 314:Src/movement.c **** //機能	: 右折
 315:Src/movement.c **** //引数	: なし
 316:Src/movement.c **** //返り値	: なし
 317:Src/movement.c **** void move_right (void)
 318:Src/movement.c **** {
 1001              		.loc 1 318 1 view -0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005 0000 08B5     		push	{r3, lr}
 1006              	.LCFI27:
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 3, -8
 1009              		.cfi_offset 14, -4
 319:Src/movement.c **** 	if(run_first_flg == start){
 1010              		.loc 1 319 2 view .LVU160
 1011              		.loc 1 319 19 is_stmt 0 view .LVU161
 1012 0002 104B     		ldr	r3, .L94
 1013 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1014              		.loc 1 319 4 view .LVU162
 1015 0006 6BB9     		cbnz	r3, .L88
 320:Src/movement.c **** 		if(front_wall_flg == wall){
 1016              		.loc 1 320 3 is_stmt 1 view .LVU163
 1017              		.loc 1 320 21 is_stmt 0 view .LVU164
 1018 0008 0F4B     		ldr	r3, .L94+4
 1019 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1020              		.loc 1 320 5 view .LVU165
 1021 000c 012B     		cmp	r3, #1
 1022 000e 13D0     		beq	.L92
 1023              	.L89:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 24


 321:Src/movement.c **** 			fornt_wall_calibrate();
 322:Src/movement.c **** 		}
 323:Src/movement.c **** 		turn_clk_90();		//時計回りに90度回転
 1024              		.loc 1 323 3 is_stmt 1 view .LVU166
 1025 0010 FFF7FEFF 		bl	turn_clk_90
 1026              	.LVL61:
 324:Src/movement.c **** 		set_mode_ctrl(side_wall);
 1027              		.loc 1 324 3 view .LVU167
 1028 0014 0220     		movs	r0, #2
 1029 0016 FFF7FEFF 		bl	set_mode_ctrl
 1030              	.LVL62:
 325:Src/movement.c **** 		half_acceleration();//半区画加速
 1031              		.loc 1 325 3 view .LVU168
 1032 001a FFF7FEFF 		bl	half_acceleration
 1033              	.LVL63:
 326:Src/movement.c **** 		set_mode_ctrl(trace);
 1034              		.loc 1 326 3 view .LVU169
 1035 001e 0020     		movs	r0, #0
 1036 0020 FFF7FEFF 		bl	set_mode_ctrl
 1037              	.LVL64:
 1038              	.L88:
 327:Src/movement.c **** 	}
 328:Src/movement.c **** 	if(run_first_flg == already){
 1039              		.loc 1 328 2 view .LVU170
 1040              		.loc 1 328 19 is_stmt 0 view .LVU171
 1041 0024 074B     		ldr	r3, .L94
 1042 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1043              		.loc 1 328 4 view .LVU172
 1044 0028 012B     		cmp	r3, #1
 1045 002a 08D0     		beq	.L93
 1046              	.L90:
 329:Src/movement.c **** 		// half_deceleration();//半区画減速で中央に停止
 330:Src/movement.c **** 		// if(front_wall_flg == wall){
 331:Src/movement.c **** 		// 	fornt_wall_calibrate();
 332:Src/movement.c **** 		// }
 333:Src/movement.c **** 		// turn_clk_90();		//時計回りに90度回転
 334:Src/movement.c **** 		// set_mode_ctrl(side_wall);
 335:Src/movement.c **** 		// half_acceleration();//半区画加速
 336:Src/movement.c **** 		// set_mode_ctrl(trace);
 337:Src/movement.c **** 		slalom_clock_90 ();
 338:Src/movement.c **** 	}
 339:Src/movement.c **** 	run_first_flg = already;
 1047              		.loc 1 339 2 is_stmt 1 view .LVU173
 1048              		.loc 1 339 16 is_stmt 0 view .LVU174
 1049 002c 054B     		ldr	r3, .L94
 1050 002e 0122     		movs	r2, #1
 1051 0030 1A70     		strb	r2, [r3]
 340:Src/movement.c **** 	clr_wall_flg();
 1052              		.loc 1 340 2 is_stmt 1 view .LVU175
 1053 0032 FFF7FEFF 		bl	clr_wall_flg
 1054              	.LVL65:
 341:Src/movement.c **** }
 1055              		.loc 1 341 1 is_stmt 0 view .LVU176
 1056 0036 08BD     		pop	{r3, pc}
 1057              	.L92:
 321:Src/movement.c **** 		}
 1058              		.loc 1 321 4 is_stmt 1 view .LVU177
ARM GAS  C:\Temp\ccaFAzdI.s 			page 25


 1059 0038 FFF7FEFF 		bl	fornt_wall_calibrate
 1060              	.LVL66:
 1061 003c E8E7     		b	.L89
 1062              	.L93:
 337:Src/movement.c **** 	}
 1063              		.loc 1 337 3 view .LVU178
 1064 003e FFF7FEFF 		bl	slalom_clock_90
 1065              	.LVL67:
 1066 0042 F3E7     		b	.L90
 1067              	.L95:
 1068              		.align	2
 1069              	.L94:
 1070 0044 00000000 		.word	.LANCHOR0
 1071 0048 00000000 		.word	.LANCHOR1
 1072              		.cfi_endproc
 1073              	.LFE153:
 1075              		.section	.text.move_left,"ax",%progbits
 1076              		.align	1
 1077              		.global	move_left
 1078              		.syntax unified
 1079              		.thumb
 1080              		.thumb_func
 1081              		.fpu fpv4-sp-d16
 1083              	move_left:
 1084              	.LFB154:
 342:Src/movement.c **** 
 343:Src/movement.c **** //機能	: 左折
 344:Src/movement.c **** //引数	: なし
 345:Src/movement.c **** //返り値	: なし
 346:Src/movement.c **** void move_left (void)
 347:Src/movement.c **** {
 1085              		.loc 1 347 1 view -0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089 0000 08B5     		push	{r3, lr}
 1090              	.LCFI28:
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 3, -8
 1093              		.cfi_offset 14, -4
 348:Src/movement.c **** 	if(run_first_flg == start){
 1094              		.loc 1 348 2 view .LVU180
 1095              		.loc 1 348 19 is_stmt 0 view .LVU181
 1096 0002 104B     		ldr	r3, .L103
 1097 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1098              		.loc 1 348 4 view .LVU182
 1099 0006 6BB9     		cbnz	r3, .L97
 349:Src/movement.c **** 		if(front_wall_flg == wall){
 1100              		.loc 1 349 3 is_stmt 1 view .LVU183
 1101              		.loc 1 349 21 is_stmt 0 view .LVU184
 1102 0008 0F4B     		ldr	r3, .L103+4
 1103 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104              		.loc 1 349 5 view .LVU185
 1105 000c 012B     		cmp	r3, #1
 1106 000e 13D0     		beq	.L101
 1107              	.L98:
 350:Src/movement.c **** 			fornt_wall_calibrate();
ARM GAS  C:\Temp\ccaFAzdI.s 			page 26


 351:Src/movement.c **** 		}
 352:Src/movement.c **** 		turn_conclk_90();	//m反時計回りに90度回転
 1108              		.loc 1 352 3 is_stmt 1 view .LVU186
 1109 0010 FFF7FEFF 		bl	turn_conclk_90
 1110              	.LVL68:
 353:Src/movement.c **** 		set_mode_ctrl(side_wall);
 1111              		.loc 1 353 3 view .LVU187
 1112 0014 0220     		movs	r0, #2
 1113 0016 FFF7FEFF 		bl	set_mode_ctrl
 1114              	.LVL69:
 354:Src/movement.c **** 		half_acceleration();//m半区画加速
 1115              		.loc 1 354 3 view .LVU188
 1116 001a FFF7FEFF 		bl	half_acceleration
 1117              	.LVL70:
 355:Src/movement.c **** 		set_mode_ctrl(trace);
 1118              		.loc 1 355 3 view .LVU189
 1119 001e 0020     		movs	r0, #0
 1120 0020 FFF7FEFF 		bl	set_mode_ctrl
 1121              	.LVL71:
 1122              	.L97:
 356:Src/movement.c **** 	}
 357:Src/movement.c **** 	if(run_first_flg == already){
 1123              		.loc 1 357 2 view .LVU190
 1124              		.loc 1 357 19 is_stmt 0 view .LVU191
 1125 0024 074B     		ldr	r3, .L103
 1126 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127              		.loc 1 357 4 view .LVU192
 1128 0028 012B     		cmp	r3, #1
 1129 002a 08D0     		beq	.L102
 1130              	.L99:
 358:Src/movement.c **** 		// half_deceleration();//m半区画減速で中央に停止
 359:Src/movement.c **** 		// if(front_wall_flg == wall){
 360:Src/movement.c **** 		// 	fornt_wall_calibrate();
 361:Src/movement.c **** 		// }
 362:Src/movement.c **** 		// turn_conclk_90();	//m反時計回りに90度回転
 363:Src/movement.c **** 		// set_mode_ctrl(side_wall);
 364:Src/movement.c **** 		// half_acceleration();//m半区画加速
 365:Src/movement.c **** 		// set_mode_ctrl(trace);
 366:Src/movement.c **** 		slalom_conclock_90 ();
 367:Src/movement.c **** 	}
 368:Src/movement.c **** 	run_first_flg = already;
 1131              		.loc 1 368 2 is_stmt 1 view .LVU193
 1132              		.loc 1 368 16 is_stmt 0 view .LVU194
 1133 002c 054B     		ldr	r3, .L103
 1134 002e 0122     		movs	r2, #1
 1135 0030 1A70     		strb	r2, [r3]
 369:Src/movement.c **** 	clr_wall_flg();
 1136              		.loc 1 369 2 is_stmt 1 view .LVU195
 1137 0032 FFF7FEFF 		bl	clr_wall_flg
 1138              	.LVL72:
 370:Src/movement.c **** }
 1139              		.loc 1 370 1 is_stmt 0 view .LVU196
 1140 0036 08BD     		pop	{r3, pc}
 1141              	.L101:
 350:Src/movement.c **** 		}
 1142              		.loc 1 350 4 is_stmt 1 view .LVU197
 1143 0038 FFF7FEFF 		bl	fornt_wall_calibrate
ARM GAS  C:\Temp\ccaFAzdI.s 			page 27


 1144              	.LVL73:
 1145 003c E8E7     		b	.L98
 1146              	.L102:
 366:Src/movement.c **** 	}
 1147              		.loc 1 366 3 view .LVU198
 1148 003e FFF7FEFF 		bl	slalom_conclock_90
 1149              	.LVL74:
 1150 0042 F3E7     		b	.L99
 1151              	.L104:
 1152              		.align	2
 1153              	.L103:
 1154 0044 00000000 		.word	.LANCHOR0
 1155 0048 00000000 		.word	.LANCHOR1
 1156              		.cfi_endproc
 1157              	.LFE154:
 1159              		.section	.text.move_back,"ax",%progbits
 1160              		.align	1
 1161              		.global	move_back
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1165              		.fpu fpv4-sp-d16
 1167              	move_back:
 1168              	.LFB155:
 371:Src/movement.c **** 
 372:Src/movement.c **** //機能	: 後進
 373:Src/movement.c **** //引数	: なし
 374:Src/movement.c **** //返り値	: なし
 375:Src/movement.c **** void move_back (void)
 376:Src/movement.c **** {
 1169              		.loc 1 376 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173 0000 08B5     		push	{r3, lr}
 1174              	.LCFI29:
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 3, -8
 1177              		.cfi_offset 14, -4
 377:Src/movement.c **** 	if(run_first_flg == start){
 1178              		.loc 1 377 2 view .LVU200
 1179              		.loc 1 377 19 is_stmt 0 view .LVU201
 1180 0002 344B     		ldr	r3, .L124
 1181 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1182              		.loc 1 377 4 view .LVU202
 1183 0006 6BB9     		cbnz	r3, .L106
 378:Src/movement.c **** 
 379:Src/movement.c **** 		if(front_wall_flg == wall){
 1184              		.loc 1 379 3 is_stmt 1 view .LVU203
 1185              		.loc 1 379 21 is_stmt 0 view .LVU204
 1186 0008 334B     		ldr	r3, .L124+4
 1187 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1188              		.loc 1 379 5 view .LVU205
 1189 000c 012B     		cmp	r3, #1
 1190 000e 13D0     		beq	.L117
 380:Src/movement.c **** 			fornt_wall_calibrate();
 381:Src/movement.c **** 			if(right_wall_flg == wall){
ARM GAS  C:\Temp\ccaFAzdI.s 			page 28


 382:Src/movement.c **** 				turn_clk_90();
 383:Src/movement.c **** 				fornt_wall_calibrate();
 384:Src/movement.c **** 				turn_clk_90();
 385:Src/movement.c **** 			}
 386:Src/movement.c **** 			else if(left_wall_flg == wall){
 387:Src/movement.c **** 					turn_conclk_90();
 388:Src/movement.c **** 					fornt_wall_calibrate();
 389:Src/movement.c **** 					turn_conclk_90();
 390:Src/movement.c **** 			}
 391:Src/movement.c **** 			else {
 392:Src/movement.c **** 				turn_conclk_180();	//反時計回りに180度回転
 393:Src/movement.c **** 			}
 394:Src/movement.c **** 		}
 395:Src/movement.c **** 		else{
 396:Src/movement.c **** 			turn_conclk_180();	//反時計回りに180度回転
 1191              		.loc 1 396 4 is_stmt 1 view .LVU206
 1192 0010 FFF7FEFF 		bl	turn_conclk_180
 1193              	.LVL75:
 1194              	.L109:
 397:Src/movement.c **** 		}
 398:Src/movement.c **** 		set_mode_ctrl(side_wall);
 1195              		.loc 1 398 3 view .LVU207
 1196 0014 0220     		movs	r0, #2
 1197 0016 FFF7FEFF 		bl	set_mode_ctrl
 1198              	.LVL76:
 399:Src/movement.c **** 		half_acceleration();//半区画加速
 1199              		.loc 1 399 3 view .LVU208
 1200 001a FFF7FEFF 		bl	half_acceleration
 1201              	.LVL77:
 400:Src/movement.c **** 		set_mode_ctrl(trace);
 1202              		.loc 1 400 3 view .LVU209
 1203 001e 0020     		movs	r0, #0
 1204 0020 FFF7FEFF 		bl	set_mode_ctrl
 1205              	.LVL78:
 1206              	.L106:
 401:Src/movement.c **** 	}
 402:Src/movement.c **** 	if(run_first_flg == already){
 1207              		.loc 1 402 2 view .LVU210
 1208              		.loc 1 402 19 is_stmt 0 view .LVU211
 1209 0024 2B4B     		ldr	r3, .L124
 1210 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1211              		.loc 1 402 4 view .LVU212
 1212 0028 012B     		cmp	r3, #1
 1213 002a 20D0     		beq	.L118
 1214              	.L111:
 403:Src/movement.c **** 		set_mode_ctrl(side_wall);
 404:Src/movement.c **** 		half_deceleration();//m半区画減速で中央に停止
 405:Src/movement.c **** 		set_mode_ctrl(trace);
 406:Src/movement.c **** 		if(front_wall_flg == wall){
 407:Src/movement.c **** 			fornt_wall_calibrate();
 408:Src/movement.c **** 			if(right_wall_flg == wall){
 409:Src/movement.c **** 				turn_clk_90();
 410:Src/movement.c **** 				fornt_wall_calibrate();
 411:Src/movement.c **** 				turn_clk_90();
 412:Src/movement.c **** 			}
 413:Src/movement.c **** 			else if(left_wall_flg == wall){
 414:Src/movement.c **** 				turn_conclk_90();
ARM GAS  C:\Temp\ccaFAzdI.s 			page 29


 415:Src/movement.c **** 				fornt_wall_calibrate();
 416:Src/movement.c **** 				turn_conclk_90();
 417:Src/movement.c **** 			}
 418:Src/movement.c **** 			else {
 419:Src/movement.c **** 				turn_conclk_180();	//反時計回りに180度回転
 420:Src/movement.c **** 			}
 421:Src/movement.c **** 		}
 422:Src/movement.c **** 		else{
 423:Src/movement.c **** 			turn_conclk_180();	//m反時計回りに180度回転
 424:Src/movement.c **** 		}
 425:Src/movement.c **** 		set_mode_ctrl(side_wall);
 426:Src/movement.c **** 		half_acceleration();//半区画加速
 427:Src/movement.c **** 		set_mode_ctrl(trace);
 428:Src/movement.c **** 	}
 429:Src/movement.c **** 	run_first_flg = already;
 1215              		.loc 1 429 2 is_stmt 1 view .LVU213
 1216              		.loc 1 429 16 is_stmt 0 view .LVU214
 1217 002c 294B     		ldr	r3, .L124
 1218 002e 0122     		movs	r2, #1
 1219 0030 1A70     		strb	r2, [r3]
 430:Src/movement.c **** 	clr_wall_flg();
 1220              		.loc 1 430 2 is_stmt 1 view .LVU215
 1221 0032 FFF7FEFF 		bl	clr_wall_flg
 1222              	.LVL79:
 431:Src/movement.c **** }
 1223              		.loc 1 431 1 is_stmt 0 view .LVU216
 1224 0036 08BD     		pop	{r3, pc}
 1225              	.L117:
 380:Src/movement.c **** 			if(right_wall_flg == wall){
 1226              		.loc 1 380 4 is_stmt 1 view .LVU217
 1227 0038 FFF7FEFF 		bl	fornt_wall_calibrate
 1228              	.LVL80:
 381:Src/movement.c **** 				turn_clk_90();
 1229              		.loc 1 381 4 view .LVU218
 381:Src/movement.c **** 				turn_clk_90();
 1230              		.loc 1 381 22 is_stmt 0 view .LVU219
 1231 003c 274B     		ldr	r3, .L124+8
 1232 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381:Src/movement.c **** 				turn_clk_90();
 1233              		.loc 1 381 6 view .LVU220
 1234 0040 012B     		cmp	r3, #1
 1235 0042 06D0     		beq	.L119
 386:Src/movement.c **** 					turn_conclk_90();
 1236              		.loc 1 386 9 is_stmt 1 view .LVU221
 386:Src/movement.c **** 					turn_conclk_90();
 1237              		.loc 1 386 26 is_stmt 0 view .LVU222
 1238 0044 264B     		ldr	r3, .L124+12
 1239 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 386:Src/movement.c **** 					turn_conclk_90();
 1240              		.loc 1 386 11 view .LVU223
 1241 0048 012B     		cmp	r3, #1
 1242 004a 09D0     		beq	.L120
 392:Src/movement.c **** 			}
 1243              		.loc 1 392 5 is_stmt 1 view .LVU224
 1244 004c FFF7FEFF 		bl	turn_conclk_180
 1245              	.LVL81:
 1246 0050 E0E7     		b	.L109
ARM GAS  C:\Temp\ccaFAzdI.s 			page 30


 1247              	.L119:
 382:Src/movement.c **** 				fornt_wall_calibrate();
 1248              		.loc 1 382 5 view .LVU225
 1249 0052 FFF7FEFF 		bl	turn_clk_90
 1250              	.LVL82:
 383:Src/movement.c **** 				turn_clk_90();
 1251              		.loc 1 383 5 view .LVU226
 1252 0056 FFF7FEFF 		bl	fornt_wall_calibrate
 1253              	.LVL83:
 384:Src/movement.c **** 			}
 1254              		.loc 1 384 5 view .LVU227
 1255 005a FFF7FEFF 		bl	turn_clk_90
 1256              	.LVL84:
 1257 005e D9E7     		b	.L109
 1258              	.L120:
 387:Src/movement.c **** 					fornt_wall_calibrate();
 1259              		.loc 1 387 6 view .LVU228
 1260 0060 FFF7FEFF 		bl	turn_conclk_90
 1261              	.LVL85:
 388:Src/movement.c **** 					turn_conclk_90();
 1262              		.loc 1 388 6 view .LVU229
 1263 0064 FFF7FEFF 		bl	fornt_wall_calibrate
 1264              	.LVL86:
 389:Src/movement.c **** 			}
 1265              		.loc 1 389 6 view .LVU230
 1266 0068 FFF7FEFF 		bl	turn_conclk_90
 1267              	.LVL87:
 1268 006c D2E7     		b	.L109
 1269              	.L118:
 403:Src/movement.c **** 		half_deceleration();//m半区画減速で中央に停止
 1270              		.loc 1 403 3 view .LVU231
 1271 006e 0220     		movs	r0, #2
 1272 0070 FFF7FEFF 		bl	set_mode_ctrl
 1273              	.LVL88:
 404:Src/movement.c **** 		set_mode_ctrl(trace);
 1274              		.loc 1 404 3 view .LVU232
 1275 0074 FFF7FEFF 		bl	half_deceleration
 1276              	.LVL89:
 405:Src/movement.c **** 		if(front_wall_flg == wall){
 1277              		.loc 1 405 3 view .LVU233
 1278 0078 0020     		movs	r0, #0
 1279 007a FFF7FEFF 		bl	set_mode_ctrl
 1280              	.LVL90:
 406:Src/movement.c **** 			fornt_wall_calibrate();
 1281              		.loc 1 406 3 view .LVU234
 406:Src/movement.c **** 			fornt_wall_calibrate();
 1282              		.loc 1 406 21 is_stmt 0 view .LVU235
 1283 007e 164B     		ldr	r3, .L124+4
 1284 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 406:Src/movement.c **** 			fornt_wall_calibrate();
 1285              		.loc 1 406 5 view .LVU236
 1286 0082 012B     		cmp	r3, #1
 1287 0084 0AD0     		beq	.L121
 423:Src/movement.c **** 		}
 1288              		.loc 1 423 4 is_stmt 1 view .LVU237
 1289 0086 FFF7FEFF 		bl	turn_conclk_180
 1290              	.LVL91:
ARM GAS  C:\Temp\ccaFAzdI.s 			page 31


 1291              	.L114:
 425:Src/movement.c **** 		half_acceleration();//半区画加速
 1292              		.loc 1 425 3 view .LVU238
 1293 008a 0220     		movs	r0, #2
 1294 008c FFF7FEFF 		bl	set_mode_ctrl
 1295              	.LVL92:
 426:Src/movement.c **** 		set_mode_ctrl(trace);
 1296              		.loc 1 426 3 view .LVU239
 1297 0090 FFF7FEFF 		bl	half_acceleration
 1298              	.LVL93:
 427:Src/movement.c **** 	}
 1299              		.loc 1 427 3 view .LVU240
 1300 0094 0020     		movs	r0, #0
 1301 0096 FFF7FEFF 		bl	set_mode_ctrl
 1302              	.LVL94:
 1303 009a C7E7     		b	.L111
 1304              	.L121:
 407:Src/movement.c **** 			if(right_wall_flg == wall){
 1305              		.loc 1 407 4 view .LVU241
 1306 009c FFF7FEFF 		bl	fornt_wall_calibrate
 1307              	.LVL95:
 408:Src/movement.c **** 				turn_clk_90();
 1308              		.loc 1 408 4 view .LVU242
 408:Src/movement.c **** 				turn_clk_90();
 1309              		.loc 1 408 22 is_stmt 0 view .LVU243
 1310 00a0 0E4B     		ldr	r3, .L124+8
 1311 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408:Src/movement.c **** 				turn_clk_90();
 1312              		.loc 1 408 6 view .LVU244
 1313 00a4 012B     		cmp	r3, #1
 1314 00a6 06D0     		beq	.L122
 413:Src/movement.c **** 				turn_conclk_90();
 1315              		.loc 1 413 9 is_stmt 1 view .LVU245
 413:Src/movement.c **** 				turn_conclk_90();
 1316              		.loc 1 413 26 is_stmt 0 view .LVU246
 1317 00a8 0D4B     		ldr	r3, .L124+12
 1318 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 413:Src/movement.c **** 				turn_conclk_90();
 1319              		.loc 1 413 11 view .LVU247
 1320 00ac 012B     		cmp	r3, #1
 1321 00ae 09D0     		beq	.L123
 419:Src/movement.c **** 			}
 1322              		.loc 1 419 5 is_stmt 1 view .LVU248
 1323 00b0 FFF7FEFF 		bl	turn_conclk_180
 1324              	.LVL96:
 1325 00b4 E9E7     		b	.L114
 1326              	.L122:
 409:Src/movement.c **** 				fornt_wall_calibrate();
 1327              		.loc 1 409 5 view .LVU249
 1328 00b6 FFF7FEFF 		bl	turn_clk_90
 1329              	.LVL97:
 410:Src/movement.c **** 				turn_clk_90();
 1330              		.loc 1 410 5 view .LVU250
 1331 00ba FFF7FEFF 		bl	fornt_wall_calibrate
 1332              	.LVL98:
 411:Src/movement.c **** 			}
 1333              		.loc 1 411 5 view .LVU251
ARM GAS  C:\Temp\ccaFAzdI.s 			page 32


 1334 00be FFF7FEFF 		bl	turn_clk_90
 1335              	.LVL99:
 1336 00c2 E2E7     		b	.L114
 1337              	.L123:
 414:Src/movement.c **** 				fornt_wall_calibrate();
 1338              		.loc 1 414 5 view .LVU252
 1339 00c4 FFF7FEFF 		bl	turn_conclk_90
 1340              	.LVL100:
 415:Src/movement.c **** 				turn_conclk_90();
 1341              		.loc 1 415 5 view .LVU253
 1342 00c8 FFF7FEFF 		bl	fornt_wall_calibrate
 1343              	.LVL101:
 416:Src/movement.c **** 			}
 1344              		.loc 1 416 5 view .LVU254
 1345 00cc FFF7FEFF 		bl	turn_conclk_90
 1346              	.LVL102:
 1347 00d0 DBE7     		b	.L114
 1348              	.L125:
 1349 00d2 00BF     		.align	2
 1350              	.L124:
 1351 00d4 00000000 		.word	.LANCHOR0
 1352 00d8 00000000 		.word	.LANCHOR1
 1353 00dc 00000000 		.word	.LANCHOR2
 1354 00e0 00000000 		.word	.LANCHOR3
 1355              		.cfi_endproc
 1356              	.LFE155:
 1358              		.section	.bss.front_wall_flg,"aw",%nobits
 1359              		.set	.LANCHOR1,. + 0
 1362              	front_wall_flg:
 1363 0000 00       		.space	1
 1364              		.section	.bss.left_wall_flg,"aw",%nobits
 1365              		.set	.LANCHOR3,. + 0
 1368              	left_wall_flg:
 1369 0000 00       		.space	1
 1370              		.section	.bss.right_wall_flg,"aw",%nobits
 1371              		.set	.LANCHOR2,. + 0
 1374              	right_wall_flg:
 1375 0000 00       		.space	1
 1376              		.section	.bss.run_first_flg,"aw",%nobits
 1377              		.set	.LANCHOR0,. + 0
 1380              	run_first_flg:
 1381 0000 00       		.space	1
 1382              		.text
 1383              	.Letext0:
 1384              		.file 2 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\machine\\_default_t
 1385              		.file 3 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 1386              		.file 4 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 1387              		.file 5 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\st
 1388              		.file 6 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 1389              		.file 7 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1390              		.file 8 "Inc/target.h"
 1391              		.file 9 "Inc/movement.h"
 1392              		.file 10 "Inc/exvol.h"
 1393              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 1394              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1395              		.file 13 "Inc/adjust.h"
 1396              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Temp\ccaFAzdI.s 			page 33


 1397              		.file 15 "Inc/mouse_state.h"
ARM GAS  C:\Temp\ccaFAzdI.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 movement.c
  C:\Temp\ccaFAzdI.s:18     .text.move_comp_jud:00000000 $t
  C:\Temp\ccaFAzdI.s:26     .text.move_comp_jud:00000000 move_comp_jud
  C:\Temp\ccaFAzdI.s:70     .text.move_comp_jud_stop:00000000 $t
  C:\Temp\ccaFAzdI.s:77     .text.move_comp_jud_stop:00000000 move_comp_jud_stop
  C:\Temp\ccaFAzdI.s:132    .text.rotate_comp_jud:00000000 $t
  C:\Temp\ccaFAzdI.s:139    .text.rotate_comp_jud:00000000 rotate_comp_jud
  C:\Temp\ccaFAzdI.s:211    .text.rotate_comp_jud:0000006c $d
  C:\Temp\ccaFAzdI.s:217    .text.start_acceleration:00000000 $t
  C:\Temp\ccaFAzdI.s:224    .text.start_acceleration:00000000 start_acceleration
  C:\Temp\ccaFAzdI.s:261    .text.start_acceleration:00000020 $d
  C:\Temp\ccaFAzdI.s:266    .text.half_acceleration:00000000 $t
  C:\Temp\ccaFAzdI.s:273    .text.half_acceleration:00000000 half_acceleration
  C:\Temp\ccaFAzdI.s:310    .text.half_acceleration:00000020 $d
  C:\Temp\ccaFAzdI.s:315    .text.half_deceleration:00000000 $t
  C:\Temp\ccaFAzdI.s:322    .text.half_deceleration:00000000 half_deceleration
  C:\Temp\ccaFAzdI.s:372    .text.half_deceleration:00000034 $d
  C:\Temp\ccaFAzdI.s:377    .text.constant_speed:00000000 $t
  C:\Temp\ccaFAzdI.s:384    .text.constant_speed:00000000 constant_speed
  C:\Temp\ccaFAzdI.s:421    .text.constant_speed:00000020 $d
  C:\Temp\ccaFAzdI.s:426    .text.constant_speed_offset:00000000 $t
  C:\Temp\ccaFAzdI.s:433    .text.constant_speed_offset:00000000 constant_speed_offset
  C:\Temp\ccaFAzdI.s:486    .text.turn_clk_90:00000000 $t
  C:\Temp\ccaFAzdI.s:493    .text.turn_clk_90:00000000 turn_clk_90
  C:\Temp\ccaFAzdI.s:526    .text.turn_clk_90:0000001c $d
  C:\Temp\ccaFAzdI.s:531    .text.turn_conclk_90:00000000 $t
  C:\Temp\ccaFAzdI.s:538    .text.turn_conclk_90:00000000 turn_conclk_90
  C:\Temp\ccaFAzdI.s:571    .text.turn_conclk_90:0000001c $d
  C:\Temp\ccaFAzdI.s:576    .text.turn_conclk_180:00000000 $t
  C:\Temp\ccaFAzdI.s:583    .text.turn_conclk_180:00000000 turn_conclk_180
  C:\Temp\ccaFAzdI.s:616    .text.turn_conclk_180:0000001c $d
  C:\Temp\ccaFAzdI.s:621    .text.clr_run_first_flg:00000000 $t
  C:\Temp\ccaFAzdI.s:628    .text.clr_run_first_flg:00000000 clr_run_first_flg
  C:\Temp\ccaFAzdI.s:645    .text.clr_run_first_flg:00000008 $d
  C:\Temp\ccaFAzdI.s:650    .text.set_run_first_flg:00000000 $t
  C:\Temp\ccaFAzdI.s:657    .text.set_run_first_flg:00000000 set_run_first_flg
  C:\Temp\ccaFAzdI.s:674    .text.set_run_first_flg:00000008 $d
  C:\Temp\ccaFAzdI.s:679    .text.clr_wall_flg:00000000 $t
  C:\Temp\ccaFAzdI.s:686    .text.clr_wall_flg:00000000 clr_wall_flg
  C:\Temp\ccaFAzdI.s:711    .text.clr_wall_flg:00000010 $d
  C:\Temp\ccaFAzdI.s:718    .text.set_front_wall_flg:00000000 $t
  C:\Temp\ccaFAzdI.s:725    .text.set_front_wall_flg:00000000 set_front_wall_flg
  C:\Temp\ccaFAzdI.s:742    .text.set_front_wall_flg:00000008 $d
  C:\Temp\ccaFAzdI.s:747    .text.set_rigth_wall_flg:00000000 $t
  C:\Temp\ccaFAzdI.s:754    .text.set_rigth_wall_flg:00000000 set_rigth_wall_flg
  C:\Temp\ccaFAzdI.s:771    .text.set_rigth_wall_flg:00000008 $d
  C:\Temp\ccaFAzdI.s:776    .text.set_left_wall_flg:00000000 $t
  C:\Temp\ccaFAzdI.s:783    .text.set_left_wall_flg:00000000 set_left_wall_flg
  C:\Temp\ccaFAzdI.s:800    .text.set_left_wall_flg:00000008 $d
  C:\Temp\ccaFAzdI.s:805    .text.slalom_clock_90:00000000 $t
  C:\Temp\ccaFAzdI.s:812    .text.slalom_clock_90:00000000 slalom_clock_90
  C:\Temp\ccaFAzdI.s:854    .text.slalom_clock_90:0000002c $d
  C:\Temp\ccaFAzdI.s:860    .text.slalom_conclock_90:00000000 $t
  C:\Temp\ccaFAzdI.s:867    .text.slalom_conclock_90:00000000 slalom_conclock_90
  C:\Temp\ccaFAzdI.s:909    .text.slalom_conclock_90:0000002c $d
  C:\Temp\ccaFAzdI.s:915    .text.move_front:00000000 $t
ARM GAS  C:\Temp\ccaFAzdI.s 			page 35


  C:\Temp\ccaFAzdI.s:922    .text.move_front:00000000 move_front
  C:\Temp\ccaFAzdI.s:987    .text.move_front:00000040 $d
  C:\Temp\ccaFAzdI.s:992    .text.move_right:00000000 $t
  C:\Temp\ccaFAzdI.s:999    .text.move_right:00000000 move_right
  C:\Temp\ccaFAzdI.s:1070   .text.move_right:00000044 $d
  C:\Temp\ccaFAzdI.s:1076   .text.move_left:00000000 $t
  C:\Temp\ccaFAzdI.s:1083   .text.move_left:00000000 move_left
  C:\Temp\ccaFAzdI.s:1154   .text.move_left:00000044 $d
  C:\Temp\ccaFAzdI.s:1160   .text.move_back:00000000 $t
  C:\Temp\ccaFAzdI.s:1167   .text.move_back:00000000 move_back
  C:\Temp\ccaFAzdI.s:1351   .text.move_back:000000d4 $d
  C:\Temp\ccaFAzdI.s:1362   .bss.front_wall_flg:00000000 front_wall_flg
  C:\Temp\ccaFAzdI.s:1363   .bss.front_wall_flg:00000000 $d
  C:\Temp\ccaFAzdI.s:1368   .bss.left_wall_flg:00000000 left_wall_flg
  C:\Temp\ccaFAzdI.s:1369   .bss.left_wall_flg:00000000 $d
  C:\Temp\ccaFAzdI.s:1374   .bss.right_wall_flg:00000000 right_wall_flg
  C:\Temp\ccaFAzdI.s:1375   .bss.right_wall_flg:00000000 $d
  C:\Temp\ccaFAzdI.s:1380   .bss.run_first_flg:00000000 run_first_flg
  C:\Temp\ccaFAzdI.s:1381   .bss.run_first_flg:00000000 $d

UNDEFINED SYMBOLS
get_target_length
get_move_length
get_target_move_speed
get_target_angle
get_ideal_angle
set_direction_mode
set_accel_mode
set_target_length
set_speed_under_lim_flg
HAL_Delay
set_rotation_mode
set_target_angle
set_mode_ctrl
fornt_wall_calibrate
