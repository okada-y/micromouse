ARM GAS  C:\Temp\ccIcxLxB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB134:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "dma.h"
  25:Src/main.c    **** #include "spi.h"
  26:Src/main.c    **** #include "tim.h"
  27:Src/main.c    **** #include "usart.h"
  28:Src/main.c    **** #include "gpio.h"
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
ARM GAS  C:\Temp\ccIcxLxB.s 			page 2


  31:Src/main.c    **** /* USER CODE BEGIN Includes */
  32:Src/main.c    **** #include "index.h"
  33:Src/main.c    **** 
  34:Src/main.c    **** //目指せindex脱却
  35:Src/main.c    **** #include "mode.h"
  36:Src/main.c    **** 
  37:Src/main.c    **** /*from matlab*/
  38:Src/main.c    **** #include "maze_init.h"
  39:Src/main.c    **** #include "maze_solve.h"
  40:Src/main.c    **** #include "matlab_code_gen_data.h"
  41:Src/main.c    **** /* USER CODE END Includes */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PTD */
  45:Src/main.c    **** typedef enum {
  46:Src/main.c    **** 	search_mode 	= 0,
  47:Src/main.c    ****  	fust_run_mode 	= 1,
  48:Src/main.c    **** } maze_search_flg;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PTD */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  53:Src/main.c    **** /* USER CODE BEGIN PD */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN PM */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PM */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN PV */
  65:Src/main.c    **** /*迷路パラメータ設定*/
  66:Src/main.c    **** uint8_t maze_x_size = 8;//x方向の壁の枚数(x方向のマスの数+1)
  67:Src/main.c    **** uint8_t maze_y_size = 17;//y方向の壁の枚数(y方向のマスの数+1)
  68:Src/main.c    **** uint8_t goal_size = 4; //m ゴールのマスの数
  69:Src/main.c    **** uint8_t maze_goal[18] = {2, 2, 3, 3, 0, 0, 0, 0, 0,    	 //mゴールのx座標
  70:Src/main.c    **** 		  	  	  	  	 1, 2, 1, 2, 0, 0, 0, 0, 0};	 //mゴールのy座標
  71:Src/main.c    **** uint8_t m_wall_tmp[1024];//迷路情報格納用配列
  72:Src/main.c    **** uint8_t m_search_tmp[1024];//探索情報格納用配列
  73:Src/main.c    **** 
  74:Src/main.c    **** uint8_t run_mode = search_mode;
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PV */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  79:Src/main.c    **** void SystemClock_Config(void);
  80:Src/main.c    **** /* USER CODE BEGIN PFP */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE END PFP */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  85:Src/main.c    **** /* USER CODE BEGIN 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** 
ARM GAS  C:\Temp\ccIcxLxB.s 			page 3


  88:Src/main.c    **** /* USER CODE END 0 */
  89:Src/main.c    **** 
  90:Src/main.c    **** /**
  91:Src/main.c    ****   * @brief  The application entry point.
  92:Src/main.c    ****   * @retval int
  93:Src/main.c    ****   */
  94:Src/main.c    **** int main(void)
  95:Src/main.c    **** {
  96:Src/main.c    ****   /* USER CODE BEGIN 1 */
  97:Src/main.c    **** 	  int16_t i = 0; //簡易タイマ
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE END 1 */
 100:Src/main.c    ****   
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Src/main.c    ****   HAL_Init();
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN Init */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END Init */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Configure the system clock */
 112:Src/main.c    ****   SystemClock_Config();
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE END SysInit */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* Initialize all configured peripherals */
 119:Src/main.c    ****   MX_GPIO_Init();
 120:Src/main.c    ****   MX_DMA_Init();
 121:Src/main.c    ****   MX_USART1_UART_Init();
 122:Src/main.c    ****   MX_TIM4_Init();
 123:Src/main.c    ****   MX_SPI2_Init();
 124:Src/main.c    ****   MX_ADC1_Init();
 125:Src/main.c    ****   MX_TIM2_Init();
 126:Src/main.c    ****   MX_TIM3_Init();
 127:Src/main.c    ****   MX_TIM6_Init();
 128:Src/main.c    ****   MX_TIM1_Init();
 129:Src/main.c    ****   /* USER CODE BEGIN 2 */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* m 各関数初期化　*/
 132:Src/main.c    ****   Motor_Initialize(); 			/*m モータ用タイマ設定*/
 133:Src/main.c    ****   Communication_Initialize( );	/*printf,scanf用の設定*/
 134:Src/main.c    ****   IMU_Initialize();				/*IMU初期設定*/
 135:Src/main.c    ****   Encoder_Initialize();			/*Encoderタイマ設定、位相初期化*/
 136:Src/main.c    ****   Interrupt_Initialize( );		/*interrupt処理用タイマ(TIM6)初期化*/
 137:Src/main.c    ****   //Battery_LimiterVoltage();		/*a バッテリー下限処理*/
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* USER CODE END 2 */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* Infinite loop */
 142:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 143:Src/main.c    ****   while (1)
 144:Src/main.c    ****   {
ARM GAS  C:\Temp\ccIcxLxB.s 			page 4


 145:Src/main.c    ****     /* USER CODE END WHILE */
 146:Src/main.c    **** 
 147:Src/main.c    ****     /* USER CODE BEGIN 3 */
 148:Src/main.c    **** 	  mode_main();//モードの選定、開始処理
 149:Src/main.c    **** 	
 150:Src/main.c    **** 	/*ここからモードごとの処理に移行*/
 151:Src/main.c    **** 	  switch(get_mode_number()){
 152:Src/main.c    **** 
 153:Src/main.c    **** 	    case 0://データ吐き出し用
 154:Src/main.c    ****   	  data_read();
 155:Src/main.c    **** 	    break;
 156:Src/main.c    **** 
 157:Src/main.c    **** 	  case 1:
 158:Src/main.c    **** 	    accel_dir_flg = 1; //減速モード
 159:Src/main.c    **** 	    fornt_wall_calibrate();
 160:Src/main.c    **** 		  break;
 161:Src/main.c    **** 
 162:Src/main.c    **** 	  case 2:
 163:Src/main.c    ****       accel_dir_flg = 1; //減速モード
 164:Src/main.c    **** 		  move_dir_flg = 0; //前進モード
 165:Src/main.c    **** 		  real_distance_m_clr();
 166:Src/main.c    **** 		  real_distance_w_clr();
 167:Src/main.c    **** 		  log_init();
 168:Src/main.c    **** 		  target_distance_m_set(0.45);
 169:Src/main.c    **** 		  HAL_Delay(4000);
 170:Src/main.c    **** 		  break;
 171:Src/main.c    **** 
 172:Src/main.c    **** 	  case 3:
 173:Src/main.c    ****     
 174:Src/main.c    **** 		  accel_dir_flg = 1; //減速モード
 175:Src/main.c    **** 		  rotation_dir_flg = 0;///m反時計モード
 176:Src/main.c    **** 
 177:Src/main.c    **** 		  real_distance_m_clr();
 178:Src/main.c    **** 		  real_distance_w_clr();
 179:Src/main.c    **** 		  log_init();
 180:Src/main.c    **** 		  target_distance_w_set(2*PI);
 181:Src/main.c    **** 		  HAL_Delay(20000);
 182:Src/main.c    **** 
 183:Src/main.c    **** //		  rotation_dir_flg = 1;//m時計モード
 184:Src/main.c    **** //		  target_distance_w_set(-PI/2);
 185:Src/main.c    **** //		  HAL_Delay(2000);
 186:Src/main.c    **** 
 187:Src/main.c    **** //		  target_distance_w_set(PI/2);
 188:Src/main.c    **** //		  HAL_Delay(500);
 189:Src/main.c    **** //		  target_distance_m_set(0.18);
 190:Src/main.c    **** //		  HAL_Delay(1000);
 191:Src/main.c    **** 		  break;
 192:Src/main.c    **** 
 193:Src/main.c    **** 	  case 4:
 194:Src/main.c    **** //		  Motor_SetDuty_Right(60);
 195:Src/main.c    **** //		  Motor_SetDuty_Left(-60);
 196:Src/main.c    **** 		  HAL_Delay(500);
 197:Src/main.c    **** 		  log_init();
 198:Src/main.c    **** //		  for(i=0; i<=100; i += 1){
 199:Src/main.c    **** ////			  Motor_SetDuty_Right(-i);
 200:Src/main.c    **** //			  Motor_SetDuty_Left(-i);
 201:Src/main.c    **** //			  HAL_Delay(10);
ARM GAS  C:\Temp\ccIcxLxB.s 			page 5


 202:Src/main.c    **** //		  }
 203:Src/main.c    **** //		  HAL_Delay(200);
 204:Src/main.c    **** //		  for(i=100; i>=60; i -= 1){
 205:Src/main.c    **** //			  Motor_SetDuty_Right(i);
 206:Src/main.c    **** //			  Motor_SetDuty_Left(-i);
 207:Src/main.c    **** //			  HAL_Delay(10);
 208:Src/main.c    **** //		  }
 209:Src/main.c    **** 
 210:Src/main.c    **** 		  Motor_SetDuty_Right(100);
 211:Src/main.c    **** 		  Motor_SetDuty_Left(-100);
 212:Src/main.c    **** 
 213:Src/main.c    **** 		  HAL_Delay(2000);
 214:Src/main.c    **** //		  printf("mode4_start\r\n");
 215:Src/main.c    **** 		  break;
 216:Src/main.c    **** 
 217:Src/main.c    **** 	  case 5:
 218:Src/main.c    **** //		  printf("mode5_start\r\n");
 219:Src/main.c    **** 		  Motor_SetDuty_Right(60);
 220:Src/main.c    **** 		  Motor_SetDuty_Left(60);
 221:Src/main.c    **** 		  HAL_Delay(200);
 222:Src/main.c    **** 		  log_init();
 223:Src/main.c    **** 		  for(i=60; i<=200; i += 10){
 224:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 225:Src/main.c    **** 			  Motor_SetDuty_Left(i);
 226:Src/main.c    **** 			  HAL_Delay(10);
 227:Src/main.c    **** 		  }
 228:Src/main.c    **** 		  HAL_Delay(500);
 229:Src/main.c    **** 		  for(i=200; i>=60; i -= 10){
 230:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 231:Src/main.c    **** 			  Motor_SetDuty_Left(i);
 232:Src/main.c    **** 			  HAL_Delay(10);
 233:Src/main.c    **** 		  }
 234:Src/main.c    **** 		  HAL_Delay(500);
 235:Src/main.c    **** 
 236:Src/main.c    **** 		  break;
 237:Src/main.c    **** 
 238:Src/main.c    **** 	  case 6:
 239:Src/main.c    **** //		  printf("mode6_start\r\n");
 240:Src/main.c    **** 		  accel_dir_flg = 1; //m減速モード
 241:Src/main.c    **** 		  correction_mode = 0;
 242:Src/main.c    **** 		  HAL_Delay(10000);
 243:Src/main.c    **** 
 244:Src/main.c    **** 		  break;
 245:Src/main.c    **** 
 246:Src/main.c    **** 	  case 7:
 247:Src/main.c    **** //		  printf("mode7_start\r\n");
 248:Src/main.c    **** //		  correction_mode = 1;
 249:Src/main.c    **** 		  accel_dir_flg = 1; //m減速モード
 250:Src/main.c    **** 		  module_test( );
 251:Src/main.c    **** 		  break;
 252:Src/main.c    **** 
 253:Src/main.c    **** 	  /*m最短走行*/
 254:Src/main.c    **** 	  case 14:
 255:Src/main.c    **** 
 256:Src/main.c    **** 		  break;
 257:Src/main.c    **** 
 258:Src/main.c    **** 	  /*m迷路探索*/
ARM GAS  C:\Temp\ccIcxLxB.s 			page 6


 259:Src/main.c    **** 	  case 15:
 260:Src/main.c    **** 		  /*m迷路データの初期化*/
 261:Src/main.c    **** 		  maze_init(maze_y_size, maze_x_size, m_wall_tmp, m_search_tmp);
 262:Src/main.c    **** 
 263:Src/main.c    **** 		  /*m探索モードで走行*/
 264:Src/main.c    **** 		  run_mode = search_mode;
 265:Src/main.c    **** 		  maze_solve(m_wall_tmp, m_search_tmp, maze_y_size, maze_x_size, maze_goal, goal_size, run_mode);
 266:Src/main.c    **** 
 267:Src/main.c    **** 		  break;
 268:Src/main.c    **** 
 269:Src/main.c    **** 
 270:Src/main.c    **** 
 271:Src/main.c    **** 
 272:Src/main.c    **** 	  }
 273:Src/main.c    **** 
 274:Src/main.c    **** 	  Motor_SetDuty_Right(0);	//motor_r 停止
 275:Src/main.c    **** 	  Motor_SetDuty_Left(0);	//motor_l 停止
 276:Src/main.c    **** 
 277:Src/main.c    **** 	  for(int i=0; i<3; i++){ //m モード処理終了時、LEDを3回点灯
 278:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 279:Src/main.c    **** 	  HAL_Delay(700);
 280:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_RESET);
 281:Src/main.c    **** 	  HAL_Delay(300);
 282:Src/main.c    **** 	  }
 283:Src/main.c    **** 
 284:Src/main.c    ****   }
 285:Src/main.c    ****   /* USER CODE END 3 */
 286:Src/main.c    **** }
 287:Src/main.c    **** 
 288:Src/main.c    **** /**
 289:Src/main.c    ****   * @brief System Clock Configuration
 290:Src/main.c    ****   * @retval None
 291:Src/main.c    ****   */
 292:Src/main.c    **** void SystemClock_Config(void)
 293:Src/main.c    **** {
  29              		.loc 1 293 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 96
 294:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 294 3 view .LVU1
  43              		.loc 1 294 22 is_stmt 0 view .LVU2
  44 0004 3422     		movs	r2, #52
  45 0006 0021     		movs	r1, #0
  46 0008 07A8     		add	r0, sp, #28
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 295:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  C:\Temp\ccIcxLxB.s 			page 7


  49              		.loc 1 295 3 is_stmt 1 view .LVU3
  50              		.loc 1 295 22 is_stmt 0 view .LVU4
  51 000e 0024     		movs	r4, #0
  52 0010 0294     		str	r4, [sp, #8]
  53 0012 0394     		str	r4, [sp, #12]
  54 0014 0494     		str	r4, [sp, #16]
  55 0016 0594     		str	r4, [sp, #20]
  56 0018 0694     		str	r4, [sp, #24]
 296:Src/main.c    **** 
 297:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 298:Src/main.c    ****   */
 299:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  57              		.loc 1 299 3 is_stmt 1 view .LVU5
  58              	.LBB2:
  59              		.loc 1 299 3 view .LVU6
  60 001a 0094     		str	r4, [sp]
  61              		.loc 1 299 3 view .LVU7
  62 001c 194B     		ldr	r3, .L3
  63 001e 1A6C     		ldr	r2, [r3, #64]
  64 0020 42F08052 		orr	r2, r2, #268435456
  65 0024 1A64     		str	r2, [r3, #64]
  66              		.loc 1 299 3 view .LVU8
  67 0026 1B6C     		ldr	r3, [r3, #64]
  68 0028 03F08053 		and	r3, r3, #268435456
  69 002c 0093     		str	r3, [sp]
  70              		.loc 1 299 3 view .LVU9
  71 002e 009B     		ldr	r3, [sp]
  72              	.LBE2:
  73              		.loc 1 299 3 view .LVU10
 300:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  74              		.loc 1 300 3 view .LVU11
  75              	.LBB3:
  76              		.loc 1 300 3 view .LVU12
  77 0030 0194     		str	r4, [sp, #4]
  78              		.loc 1 300 3 view .LVU13
  79 0032 154B     		ldr	r3, .L3+4
  80 0034 1A68     		ldr	r2, [r3]
  81 0036 42F44042 		orr	r2, r2, #49152
  82 003a 1A60     		str	r2, [r3]
  83              		.loc 1 300 3 view .LVU14
  84 003c 1B68     		ldr	r3, [r3]
  85 003e 03F44043 		and	r3, r3, #49152
  86 0042 0193     		str	r3, [sp, #4]
  87              		.loc 1 300 3 view .LVU15
  88 0044 019B     		ldr	r3, [sp, #4]
  89              	.LBE3:
  90              		.loc 1 300 3 view .LVU16
 301:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 302:Src/main.c    ****   */
 303:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  91              		.loc 1 303 3 view .LVU17
  92              		.loc 1 303 36 is_stmt 0 view .LVU18
  93 0046 0225     		movs	r5, #2
  94 0048 0795     		str	r5, [sp, #28]
 304:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  95              		.loc 1 304 3 is_stmt 1 view .LVU19
  96              		.loc 1 304 30 is_stmt 0 view .LVU20
ARM GAS  C:\Temp\ccIcxLxB.s 			page 8


  97 004a 0123     		movs	r3, #1
  98 004c 0A93     		str	r3, [sp, #40]
 305:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  99              		.loc 1 305 3 is_stmt 1 view .LVU21
 100              		.loc 1 305 41 is_stmt 0 view .LVU22
 101 004e 1023     		movs	r3, #16
 102 0050 0B93     		str	r3, [sp, #44]
 306:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 103              		.loc 1 306 3 is_stmt 1 view .LVU23
 104              		.loc 1 306 34 is_stmt 0 view .LVU24
 105 0052 0D95     		str	r5, [sp, #52]
 307:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 106              		.loc 1 307 3 is_stmt 1 view .LVU25
 107              		.loc 1 307 35 is_stmt 0 view .LVU26
 108 0054 0E94     		str	r4, [sp, #56]
 308:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 109              		.loc 1 308 3 is_stmt 1 view .LVU27
 110              		.loc 1 308 30 is_stmt 0 view .LVU28
 111 0056 0F93     		str	r3, [sp, #60]
 309:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 192;
 112              		.loc 1 309 3 is_stmt 1 view .LVU29
 113              		.loc 1 309 30 is_stmt 0 view .LVU30
 114 0058 C023     		movs	r3, #192
 115 005a 1093     		str	r3, [sp, #64]
 310:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 116              		.loc 1 310 3 is_stmt 1 view .LVU31
 117              		.loc 1 310 30 is_stmt 0 view .LVU32
 118 005c 1195     		str	r5, [sp, #68]
 311:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 119              		.loc 1 311 3 is_stmt 1 view .LVU33
 120              		.loc 1 311 30 is_stmt 0 view .LVU34
 121 005e 1295     		str	r5, [sp, #72]
 312:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 122              		.loc 1 312 3 is_stmt 1 view .LVU35
 123              		.loc 1 312 30 is_stmt 0 view .LVU36
 124 0060 1395     		str	r5, [sp, #76]
 313:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 125              		.loc 1 313 3 is_stmt 1 view .LVU37
 126              		.loc 1 313 7 is_stmt 0 view .LVU38
 127 0062 07A8     		add	r0, sp, #28
 128 0064 FFF7FEFF 		bl	HAL_RCC_OscConfig
 129              	.LVL1:
 314:Src/main.c    ****   {
 315:Src/main.c    ****     Error_Handler();
 316:Src/main.c    ****   }
 317:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 318:Src/main.c    ****   */
 319:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 130              		.loc 1 319 3 is_stmt 1 view .LVU39
 131              		.loc 1 319 31 is_stmt 0 view .LVU40
 132 0068 0F23     		movs	r3, #15
 133 006a 0293     		str	r3, [sp, #8]
 320:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 321:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 134              		.loc 1 321 3 is_stmt 1 view .LVU41
 135              		.loc 1 321 34 is_stmt 0 view .LVU42
 136 006c 0395     		str	r5, [sp, #12]
ARM GAS  C:\Temp\ccIcxLxB.s 			page 9


 322:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 137              		.loc 1 322 3 is_stmt 1 view .LVU43
 138              		.loc 1 322 35 is_stmt 0 view .LVU44
 139 006e 0494     		str	r4, [sp, #16]
 323:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 140              		.loc 1 323 3 is_stmt 1 view .LVU45
 141              		.loc 1 323 36 is_stmt 0 view .LVU46
 142 0070 4FF48053 		mov	r3, #4096
 143 0074 0593     		str	r3, [sp, #20]
 324:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 144              		.loc 1 324 3 is_stmt 1 view .LVU47
 145              		.loc 1 324 36 is_stmt 0 view .LVU48
 146 0076 0694     		str	r4, [sp, #24]
 325:Src/main.c    **** 
 326:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 147              		.loc 1 326 3 is_stmt 1 view .LVU49
 148              		.loc 1 326 7 is_stmt 0 view .LVU50
 149 0078 0321     		movs	r1, #3
 150 007a 02A8     		add	r0, sp, #8
 151 007c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 152              	.LVL2:
 327:Src/main.c    ****   {
 328:Src/main.c    ****     Error_Handler();
 329:Src/main.c    ****   }
 330:Src/main.c    **** }
 153              		.loc 1 330 1 view .LVU51
 154 0080 15B0     		add	sp, sp, #84
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 12
 157              		@ sp needed
 158 0082 30BD     		pop	{r4, r5, pc}
 159              	.L4:
 160              		.align	2
 161              	.L3:
 162 0084 00380240 		.word	1073887232
 163 0088 00700040 		.word	1073770496
 164              		.cfi_endproc
 165              	.LFE134:
 167              		.section	.text.main,"ax",%progbits
 168              		.align	1
 169              		.global	main
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	main:
 176              	.LFB133:
  95:Src/main.c    ****   /* USER CODE BEGIN 1 */
 177              		.loc 1 95 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 20
 184              		.cfi_offset 4, -20
 185              		.cfi_offset 5, -16
ARM GAS  C:\Temp\ccIcxLxB.s 			page 10


 186              		.cfi_offset 6, -12
 187              		.cfi_offset 7, -8
 188              		.cfi_offset 14, -4
 189 0002 85B0     		sub	sp, sp, #20
 190              	.LCFI4:
 191              		.cfi_def_cfa_offset 40
  97:Src/main.c    **** 
 192              		.loc 1 97 4 view .LVU53
 193              	.LVL3:
 105:Src/main.c    **** 
 194              		.loc 1 105 3 view .LVU54
 195 0004 FFF7FEFF 		bl	HAL_Init
 196              	.LVL4:
 112:Src/main.c    **** 
 197              		.loc 1 112 3 view .LVU55
 198 0008 FFF7FEFF 		bl	SystemClock_Config
 199              	.LVL5:
 119:Src/main.c    ****   MX_DMA_Init();
 200              		.loc 1 119 3 view .LVU56
 201 000c FFF7FEFF 		bl	MX_GPIO_Init
 202              	.LVL6:
 120:Src/main.c    ****   MX_USART1_UART_Init();
 203              		.loc 1 120 3 view .LVU57
 204 0010 FFF7FEFF 		bl	MX_DMA_Init
 205              	.LVL7:
 121:Src/main.c    ****   MX_TIM4_Init();
 206              		.loc 1 121 3 view .LVU58
 207 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 208              	.LVL8:
 122:Src/main.c    ****   MX_SPI2_Init();
 209              		.loc 1 122 3 view .LVU59
 210 0018 FFF7FEFF 		bl	MX_TIM4_Init
 211              	.LVL9:
 123:Src/main.c    ****   MX_ADC1_Init();
 212              		.loc 1 123 3 view .LVU60
 213 001c FFF7FEFF 		bl	MX_SPI2_Init
 214              	.LVL10:
 124:Src/main.c    ****   MX_TIM2_Init();
 215              		.loc 1 124 3 view .LVU61
 216 0020 FFF7FEFF 		bl	MX_ADC1_Init
 217              	.LVL11:
 125:Src/main.c    ****   MX_TIM3_Init();
 218              		.loc 1 125 3 view .LVU62
 219 0024 FFF7FEFF 		bl	MX_TIM2_Init
 220              	.LVL12:
 126:Src/main.c    ****   MX_TIM6_Init();
 221              		.loc 1 126 3 view .LVU63
 222 0028 FFF7FEFF 		bl	MX_TIM3_Init
 223              	.LVL13:
 127:Src/main.c    ****   MX_TIM1_Init();
 224              		.loc 1 127 3 view .LVU64
 225 002c FFF7FEFF 		bl	MX_TIM6_Init
 226              	.LVL14:
 128:Src/main.c    ****   /* USER CODE BEGIN 2 */
 227              		.loc 1 128 3 view .LVU65
 228 0030 FFF7FEFF 		bl	MX_TIM1_Init
 229              	.LVL15:
ARM GAS  C:\Temp\ccIcxLxB.s 			page 11


 132:Src/main.c    ****   Communication_Initialize( );	/*printf,scanf用の設定*/
 230              		.loc 1 132 3 view .LVU66
 231 0034 FFF7FEFF 		bl	Motor_Initialize
 232              	.LVL16:
 133:Src/main.c    ****   IMU_Initialize();				/*IMU初期設定*/
 233              		.loc 1 133 3 view .LVU67
 234 0038 FFF7FEFF 		bl	Communication_Initialize
 235              	.LVL17:
 134:Src/main.c    ****   Encoder_Initialize();			/*Encoderタイマ設定、位相初期化*/
 236              		.loc 1 134 3 view .LVU68
 237 003c FFF7FEFF 		bl	IMU_Initialize
 238              	.LVL18:
 135:Src/main.c    ****   Interrupt_Initialize( );		/*interrupt処理用タイマ(TIM6)初期化*/
 239              		.loc 1 135 3 view .LVU69
 240 0040 FFF7FEFF 		bl	Encoder_Initialize
 241              	.LVL19:
 136:Src/main.c    ****   //Battery_LimiterVoltage();		/*a バッテリー下限処理*/
 242              		.loc 1 136 3 view .LVU70
 243 0044 FFF7FEFF 		bl	Interrupt_Initialize
 244              	.LVL20:
 245 0048 C0E0     		b	.L23
 246              	.LVL21:
 247              	.L16:
 154:Src/main.c    **** 	    break;
 248              		.loc 1 154 6 view .LVU71
 249 004a FFF7FEFF 		bl	data_read
 250              	.LVL22:
 155:Src/main.c    **** 
 251              		.loc 1 155 6 view .LVU72
 252              	.L6:
 274:Src/main.c    **** 	  Motor_SetDuty_Left(0);	//motor_l 停止
 253              		.loc 1 274 4 view .LVU73
 254 004e 0020     		movs	r0, #0
 255 0050 FFF7FEFF 		bl	Motor_SetDuty_Right
 256              	.LVL23:
 275:Src/main.c    **** 
 257              		.loc 1 275 4 view .LVU74
 258 0054 0020     		movs	r0, #0
 259 0056 FFF7FEFF 		bl	Motor_SetDuty_Left
 260              	.LVL24:
 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 261              		.loc 1 277 4 view .LVU75
 262              	.LBB4:
 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 263              		.loc 1 277 8 view .LVU76
 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 264              		.loc 1 277 12 is_stmt 0 view .LVU77
 265 005a 0024     		movs	r4, #0
 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 266              		.loc 1 277 4 view .LVU78
 267 005c B4E0     		b	.L21
 268              	.LVL25:
 269              	.L15:
 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 270              		.loc 1 277 4 view .LVU79
 271              	.LBE4:
 158:Src/main.c    **** 	    fornt_wall_calibrate();
ARM GAS  C:\Temp\ccIcxLxB.s 			page 12


 272              		.loc 1 158 6 is_stmt 1 view .LVU80
 158:Src/main.c    **** 	    fornt_wall_calibrate();
 273              		.loc 1 158 20 is_stmt 0 view .LVU81
 274 005e 704B     		ldr	r3, .L25
 275 0060 0122     		movs	r2, #1
 276 0062 1A70     		strb	r2, [r3]
 159:Src/main.c    **** 		  break;
 277              		.loc 1 159 6 is_stmt 1 view .LVU82
 278 0064 FFF7FEFF 		bl	fornt_wall_calibrate
 279              	.LVL26:
 160:Src/main.c    **** 
 280              		.loc 1 160 5 view .LVU83
 281 0068 F1E7     		b	.L6
 282              	.L14:
 163:Src/main.c    **** 		  move_dir_flg = 0; //前進モード
 283              		.loc 1 163 7 view .LVU84
 163:Src/main.c    **** 		  move_dir_flg = 0; //前進モード
 284              		.loc 1 163 21 is_stmt 0 view .LVU85
 285 006a 6D4B     		ldr	r3, .L25
 286 006c 0122     		movs	r2, #1
 287 006e 1A70     		strb	r2, [r3]
 164:Src/main.c    **** 		  real_distance_m_clr();
 288              		.loc 1 164 5 is_stmt 1 view .LVU86
 164:Src/main.c    **** 		  real_distance_m_clr();
 289              		.loc 1 164 18 is_stmt 0 view .LVU87
 290 0070 6C4B     		ldr	r3, .L25+4
 291 0072 0022     		movs	r2, #0
 292 0074 1A70     		strb	r2, [r3]
 165:Src/main.c    **** 		  real_distance_w_clr();
 293              		.loc 1 165 5 is_stmt 1 view .LVU88
 294 0076 FFF7FEFF 		bl	real_distance_m_clr
 295              	.LVL27:
 166:Src/main.c    **** 		  log_init();
 296              		.loc 1 166 5 view .LVU89
 297 007a FFF7FEFF 		bl	real_distance_w_clr
 298              	.LVL28:
 167:Src/main.c    **** 		  target_distance_m_set(0.45);
 299              		.loc 1 167 5 view .LVU90
 300 007e FFF7FEFF 		bl	log_init
 301              	.LVL29:
 168:Src/main.c    **** 		  HAL_Delay(4000);
 302              		.loc 1 168 5 view .LVU91
 303 0082 9FED690A 		vldr.32	s0, .L25+8
 304 0086 FFF7FEFF 		bl	target_distance_m_set
 305              	.LVL30:
 169:Src/main.c    **** 		  break;
 306              		.loc 1 169 5 view .LVU92
 307 008a 4FF47A60 		mov	r0, #4000
 308 008e FFF7FEFF 		bl	HAL_Delay
 309              	.LVL31:
 170:Src/main.c    **** 
 310              		.loc 1 170 5 view .LVU93
 311 0092 DCE7     		b	.L6
 312              	.L13:
 174:Src/main.c    **** 		  rotation_dir_flg = 0;///m反時計モード
 313              		.loc 1 174 5 view .LVU94
 174:Src/main.c    **** 		  rotation_dir_flg = 0;///m反時計モード
ARM GAS  C:\Temp\ccIcxLxB.s 			page 13


 314              		.loc 1 174 19 is_stmt 0 view .LVU95
 315 0094 624B     		ldr	r3, .L25
 316 0096 0122     		movs	r2, #1
 317 0098 1A70     		strb	r2, [r3]
 175:Src/main.c    **** 
 318              		.loc 1 175 5 is_stmt 1 view .LVU96
 175:Src/main.c    **** 
 319              		.loc 1 175 22 is_stmt 0 view .LVU97
 320 009a 644B     		ldr	r3, .L25+12
 321 009c 0022     		movs	r2, #0
 322 009e 1A70     		strb	r2, [r3]
 177:Src/main.c    **** 		  real_distance_w_clr();
 323              		.loc 1 177 5 is_stmt 1 view .LVU98
 324 00a0 FFF7FEFF 		bl	real_distance_m_clr
 325              	.LVL32:
 178:Src/main.c    **** 		  log_init();
 326              		.loc 1 178 5 view .LVU99
 327 00a4 FFF7FEFF 		bl	real_distance_w_clr
 328              	.LVL33:
 179:Src/main.c    **** 		  target_distance_w_set(2*PI);
 329              		.loc 1 179 5 view .LVU100
 330 00a8 FFF7FEFF 		bl	log_init
 331              	.LVL34:
 180:Src/main.c    **** 		  HAL_Delay(20000);
 332              		.loc 1 180 5 view .LVU101
 333 00ac 9FED600A 		vldr.32	s0, .L25+16
 334 00b0 FFF7FEFF 		bl	target_distance_w_set
 335              	.LVL35:
 181:Src/main.c    **** 
 336              		.loc 1 181 5 view .LVU102
 337 00b4 44F62060 		movw	r0, #20000
 338 00b8 FFF7FEFF 		bl	HAL_Delay
 339              	.LVL36:
 191:Src/main.c    **** 
 340              		.loc 1 191 5 view .LVU103
 341 00bc C7E7     		b	.L6
 342              	.L12:
 196:Src/main.c    **** 		  log_init();
 343              		.loc 1 196 5 view .LVU104
 344 00be 4FF4FA70 		mov	r0, #500
 345 00c2 FFF7FEFF 		bl	HAL_Delay
 346              	.LVL37:
 197:Src/main.c    **** //		  for(i=0; i<=100; i += 1){
 347              		.loc 1 197 5 view .LVU105
 348 00c6 FFF7FEFF 		bl	log_init
 349              	.LVL38:
 210:Src/main.c    **** 		  Motor_SetDuty_Left(-100);
 350              		.loc 1 210 5 view .LVU106
 351 00ca 6420     		movs	r0, #100
 352 00cc FFF7FEFF 		bl	Motor_SetDuty_Right
 353              	.LVL39:
 211:Src/main.c    **** 
 354              		.loc 1 211 5 view .LVU107
 355 00d0 6FF06300 		mvn	r0, #99
 356 00d4 FFF7FEFF 		bl	Motor_SetDuty_Left
 357              	.LVL40:
 213:Src/main.c    **** //		  printf("mode4_start\r\n");
ARM GAS  C:\Temp\ccIcxLxB.s 			page 14


 358              		.loc 1 213 5 view .LVU108
 359 00d8 4FF4FA60 		mov	r0, #2000
 360 00dc FFF7FEFF 		bl	HAL_Delay
 361              	.LVL41:
 215:Src/main.c    **** 
 362              		.loc 1 215 5 view .LVU109
 363 00e0 B5E7     		b	.L6
 364              	.L11:
 219:Src/main.c    **** 		  Motor_SetDuty_Left(60);
 365              		.loc 1 219 5 view .LVU110
 366 00e2 3C20     		movs	r0, #60
 367 00e4 FFF7FEFF 		bl	Motor_SetDuty_Right
 368              	.LVL42:
 220:Src/main.c    **** 		  HAL_Delay(200);
 369              		.loc 1 220 5 view .LVU111
 370 00e8 3C20     		movs	r0, #60
 371 00ea FFF7FEFF 		bl	Motor_SetDuty_Left
 372              	.LVL43:
 221:Src/main.c    **** 		  log_init();
 373              		.loc 1 221 5 view .LVU112
 374 00ee C820     		movs	r0, #200
 375 00f0 FFF7FEFF 		bl	HAL_Delay
 376              	.LVL44:
 222:Src/main.c    **** 		  for(i=60; i<=200; i += 10){
 377              		.loc 1 222 5 view .LVU113
 378 00f4 FFF7FEFF 		bl	log_init
 379              	.LVL45:
 223:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 380              		.loc 1 223 5 view .LVU114
 223:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 381              		.loc 1 223 10 is_stmt 0 view .LVU115
 382 00f8 3C24     		movs	r4, #60
 223:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 383              		.loc 1 223 5 view .LVU116
 384 00fa 0AE0     		b	.L17
 385              	.LVL46:
 386              	.L18:
 224:Src/main.c    **** 			  Motor_SetDuty_Left(i);
 387              		.loc 1 224 6 is_stmt 1 discriminator 3 view .LVU117
 388 00fc 2046     		mov	r0, r4
 389 00fe FFF7FEFF 		bl	Motor_SetDuty_Right
 390              	.LVL47:
 225:Src/main.c    **** 			  HAL_Delay(10);
 391              		.loc 1 225 6 discriminator 3 view .LVU118
 392 0102 2046     		mov	r0, r4
 393 0104 FFF7FEFF 		bl	Motor_SetDuty_Left
 394              	.LVL48:
 226:Src/main.c    **** 		  }
 395              		.loc 1 226 6 discriminator 3 view .LVU119
 396 0108 0A20     		movs	r0, #10
 397 010a FFF7FEFF 		bl	HAL_Delay
 398              	.LVL49:
 223:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 399              		.loc 1 223 23 discriminator 3 view .LVU120
 223:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 400              		.loc 1 223 25 is_stmt 0 discriminator 3 view .LVU121
 401 010e 0A34     		adds	r4, r4, #10
ARM GAS  C:\Temp\ccIcxLxB.s 			page 15


 402              	.LVL50:
 223:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 403              		.loc 1 223 25 discriminator 3 view .LVU122
 404 0110 24B2     		sxth	r4, r4
 405              	.LVL51:
 406              	.L17:
 223:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 407              		.loc 1 223 15 is_stmt 1 discriminator 1 view .LVU123
 223:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 408              		.loc 1 223 5 is_stmt 0 discriminator 1 view .LVU124
 409 0112 C82C     		cmp	r4, #200
 410 0114 F2DD     		ble	.L18
 228:Src/main.c    **** 		  for(i=200; i>=60; i -= 10){
 411              		.loc 1 228 5 is_stmt 1 view .LVU125
 412 0116 4FF4FA70 		mov	r0, #500
 413 011a FFF7FEFF 		bl	HAL_Delay
 414              	.LVL52:
 229:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 415              		.loc 1 229 5 view .LVU126
 229:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 416              		.loc 1 229 10 is_stmt 0 view .LVU127
 417 011e C824     		movs	r4, #200
 229:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 418              		.loc 1 229 5 view .LVU128
 419 0120 0AE0     		b	.L19
 420              	.LVL53:
 421              	.L20:
 230:Src/main.c    **** 			  Motor_SetDuty_Left(i);
 422              		.loc 1 230 6 is_stmt 1 discriminator 3 view .LVU129
 423 0122 2046     		mov	r0, r4
 424 0124 FFF7FEFF 		bl	Motor_SetDuty_Right
 425              	.LVL54:
 231:Src/main.c    **** 			  HAL_Delay(10);
 426              		.loc 1 231 6 discriminator 3 view .LVU130
 427 0128 2046     		mov	r0, r4
 428 012a FFF7FEFF 		bl	Motor_SetDuty_Left
 429              	.LVL55:
 232:Src/main.c    **** 		  }
 430              		.loc 1 232 6 discriminator 3 view .LVU131
 431 012e 0A20     		movs	r0, #10
 432 0130 FFF7FEFF 		bl	HAL_Delay
 433              	.LVL56:
 229:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 434              		.loc 1 229 23 discriminator 3 view .LVU132
 229:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 435              		.loc 1 229 25 is_stmt 0 discriminator 3 view .LVU133
 436 0134 0A3C     		subs	r4, r4, #10
 437              	.LVL57:
 229:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 438              		.loc 1 229 25 discriminator 3 view .LVU134
 439 0136 24B2     		sxth	r4, r4
 440              	.LVL58:
 441              	.L19:
 229:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 442              		.loc 1 229 16 is_stmt 1 discriminator 1 view .LVU135
 229:Src/main.c    **** 			  Motor_SetDuty_Right(i);
 443              		.loc 1 229 5 is_stmt 0 discriminator 1 view .LVU136
ARM GAS  C:\Temp\ccIcxLxB.s 			page 16


 444 0138 3B2C     		cmp	r4, #59
 445 013a F2DC     		bgt	.L20
 234:Src/main.c    **** 
 446              		.loc 1 234 5 is_stmt 1 view .LVU137
 447 013c 4FF4FA70 		mov	r0, #500
 448 0140 FFF7FEFF 		bl	HAL_Delay
 449              	.LVL59:
 236:Src/main.c    **** 
 450              		.loc 1 236 5 view .LVU138
 451 0144 83E7     		b	.L6
 452              	.LVL60:
 453              	.L10:
 240:Src/main.c    **** 		  correction_mode = 0;
 454              		.loc 1 240 5 view .LVU139
 240:Src/main.c    **** 		  correction_mode = 0;
 455              		.loc 1 240 19 is_stmt 0 view .LVU140
 456 0146 364B     		ldr	r3, .L25
 457 0148 0122     		movs	r2, #1
 458 014a 1A70     		strb	r2, [r3]
 241:Src/main.c    **** 		  HAL_Delay(10000);
 459              		.loc 1 241 5 is_stmt 1 view .LVU141
 241:Src/main.c    **** 		  HAL_Delay(10000);
 460              		.loc 1 241 21 is_stmt 0 view .LVU142
 461 014c 394B     		ldr	r3, .L25+20
 462 014e 0022     		movs	r2, #0
 463 0150 1A70     		strb	r2, [r3]
 242:Src/main.c    **** 
 464              		.loc 1 242 5 is_stmt 1 view .LVU143
 465 0152 42F21070 		movw	r0, #10000
 466 0156 FFF7FEFF 		bl	HAL_Delay
 467              	.LVL61:
 244:Src/main.c    **** 
 468              		.loc 1 244 5 view .LVU144
 469 015a 78E7     		b	.L6
 470              	.L9:
 249:Src/main.c    **** 		  module_test( );
 471              		.loc 1 249 5 view .LVU145
 249:Src/main.c    **** 		  module_test( );
 472              		.loc 1 249 19 is_stmt 0 view .LVU146
 473 015c 304B     		ldr	r3, .L25
 474 015e 0122     		movs	r2, #1
 475 0160 1A70     		strb	r2, [r3]
 250:Src/main.c    **** 		  break;
 476              		.loc 1 250 5 is_stmt 1 view .LVU147
 477 0162 FFF7FEFF 		bl	module_test
 478              	.LVL62:
 251:Src/main.c    **** 
 479              		.loc 1 251 5 view .LVU148
 480 0166 72E7     		b	.L6
 481              	.L7:
 261:Src/main.c    **** 
 482              		.loc 1 261 5 view .LVU149
 483 0168 334D     		ldr	r5, .L25+24
 484 016a 344C     		ldr	r4, .L25+28
 485 016c 344F     		ldr	r7, .L25+32
 486 016e 354E     		ldr	r6, .L25+36
 487 0170 2B46     		mov	r3, r5
ARM GAS  C:\Temp\ccIcxLxB.s 			page 17


 488 0172 2246     		mov	r2, r4
 489 0174 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 490 0176 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 491 0178 FFF7FEFF 		bl	maze_init
 492              	.LVL63:
 264:Src/main.c    **** 		  maze_solve(m_wall_tmp, m_search_tmp, maze_y_size, maze_x_size, maze_goal, goal_size, run_mode);
 493              		.loc 1 264 5 view .LVU150
 264:Src/main.c    **** 		  maze_solve(m_wall_tmp, m_search_tmp, maze_y_size, maze_x_size, maze_goal, goal_size, run_mode);
 494              		.loc 1 264 14 is_stmt 0 view .LVU151
 495 017c 0023     		movs	r3, #0
 496 017e 324A     		ldr	r2, .L25+40
 497 0180 1370     		strb	r3, [r2]
 265:Src/main.c    **** 
 498              		.loc 1 265 5 is_stmt 1 view .LVU152
 499 0182 0293     		str	r3, [sp, #8]
 500 0184 314B     		ldr	r3, .L25+44
 501 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 502 0188 0193     		str	r3, [sp, #4]
 503 018a 314B     		ldr	r3, .L25+48
 504 018c 0093     		str	r3, [sp]
 505 018e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 506 0190 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 507 0192 2946     		mov	r1, r5
 508 0194 2046     		mov	r0, r4
 509 0196 FFF7FEFF 		bl	maze_solve
 510              	.LVL64:
 267:Src/main.c    **** 
 511              		.loc 1 267 5 view .LVU153
 512 019a 58E7     		b	.L6
 513              	.LVL65:
 514              	.L22:
 515              	.LBB5:
 278:Src/main.c    **** 	  HAL_Delay(700);
 516              		.loc 1 278 4 discriminator 3 view .LVU154
 517 019c 2D4D     		ldr	r5, .L25+52
 518 019e 0122     		movs	r2, #1
 519 01a0 4FF46451 		mov	r1, #14592
 520 01a4 2846     		mov	r0, r5
 521 01a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 522              	.LVL66:
 279:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_RESET);
 523              		.loc 1 279 4 discriminator 3 view .LVU155
 524 01aa 4FF42F70 		mov	r0, #700
 525 01ae FFF7FEFF 		bl	HAL_Delay
 526              	.LVL67:
 280:Src/main.c    **** 	  HAL_Delay(300);
 527              		.loc 1 280 4 discriminator 3 view .LVU156
 528 01b2 0022     		movs	r2, #0
 529 01b4 4FF46451 		mov	r1, #14592
 530 01b8 2846     		mov	r0, r5
 531 01ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 532              	.LVL68:
 281:Src/main.c    **** 	  }
 533              		.loc 1 281 4 discriminator 3 view .LVU157
 534 01be 4FF49670 		mov	r0, #300
 535 01c2 FFF7FEFF 		bl	HAL_Delay
 536              	.LVL69:
ARM GAS  C:\Temp\ccIcxLxB.s 			page 18


 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 537              		.loc 1 277 22 discriminator 3 view .LVU158
 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 538              		.loc 1 277 23 is_stmt 0 discriminator 3 view .LVU159
 539 01c6 0134     		adds	r4, r4, #1
 540              	.LVL70:
 541              	.L21:
 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 542              		.loc 1 277 17 is_stmt 1 discriminator 1 view .LVU160
 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 543              		.loc 1 277 4 is_stmt 0 discriminator 1 view .LVU161
 544 01c8 022C     		cmp	r4, #2
 545 01ca E7DD     		ble	.L22
 546              	.LVL71:
 547              	.L23:
 277:Src/main.c    **** 	  HAL_GPIO_WritePin(GPIOA,LED2_Pin|LED3_Pin|LED4_Pin|LED5_Pin, GPIO_PIN_SET);
 548              		.loc 1 277 4 discriminator 1 view .LVU162
 549              	.LBE5:
 143:Src/main.c    ****   {
 550              		.loc 1 143 3 is_stmt 1 view .LVU163
 148:Src/main.c    **** 	
 551              		.loc 1 148 4 view .LVU164
 552 01cc FFF7FEFF 		bl	mode_main
 553              	.LVL72:
 151:Src/main.c    **** 
 554              		.loc 1 151 4 view .LVU165
 151:Src/main.c    **** 
 555              		.loc 1 151 11 is_stmt 0 view .LVU166
 556 01d0 FFF7FEFF 		bl	get_mode_number
 557              	.LVL73:
 558 01d4 0F28     		cmp	r0, #15
 559 01d6 3FF63AAF 		bhi	.L6
 560 01da 01A3     		adr	r3, .L8
 561 01dc 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 562              		.p2align 2
 563              	.L8:
 564 01e0 4B000000 		.word	.L16+1
 565 01e4 5F000000 		.word	.L15+1
 566 01e8 6B000000 		.word	.L14+1
 567 01ec 95000000 		.word	.L13+1
 568 01f0 BF000000 		.word	.L12+1
 569 01f4 E3000000 		.word	.L11+1
 570 01f8 47010000 		.word	.L10+1
 571 01fc 5D010000 		.word	.L9+1
 572 0200 4F000000 		.word	.L6+1
 573 0204 4F000000 		.word	.L6+1
 574 0208 4F000000 		.word	.L6+1
 575 020c 4F000000 		.word	.L6+1
 576 0210 4F000000 		.word	.L6+1
 577 0214 4F000000 		.word	.L6+1
 578 0218 4F000000 		.word	.L6+1
 579 021c 69010000 		.word	.L7+1
 580              		.p2align 1
 581              	.L26:
 582              		.align	2
 583              	.L25:
 584 0220 00000000 		.word	accel_dir_flg
ARM GAS  C:\Temp\ccIcxLxB.s 			page 19


 585 0224 00000000 		.word	move_dir_flg
 586 0228 6666E63E 		.word	1055286886
 587 022c 00000000 		.word	rotation_dir_flg
 588 0230 DA0FC940 		.word	1086918618
 589 0234 00000000 		.word	correction_mode
 590 0238 00000000 		.word	m_search_tmp
 591 023c 00000000 		.word	m_wall_tmp
 592 0240 00000000 		.word	.LANCHOR0
 593 0244 00000000 		.word	.LANCHOR1
 594 0248 00000000 		.word	.LANCHOR2
 595 024c 00000000 		.word	.LANCHOR3
 596 0250 00000000 		.word	.LANCHOR4
 597 0254 00000240 		.word	1073872896
 598              		.cfi_endproc
 599              	.LFE133:
 601              		.section	.text.Error_Handler,"ax",%progbits
 602              		.align	1
 603              		.global	Error_Handler
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv4-sp-d16
 609              	Error_Handler:
 610              	.LFB135:
 331:Src/main.c    **** 
 332:Src/main.c    **** /* USER CODE BEGIN 4 */
 333:Src/main.c    **** 
 334:Src/main.c    **** /* USER CODE END 4 */
 335:Src/main.c    **** 
 336:Src/main.c    **** /**
 337:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 338:Src/main.c    ****   * @retval None
 339:Src/main.c    ****   */
 340:Src/main.c    **** void Error_Handler(void)
 341:Src/main.c    **** {
 611              		.loc 1 341 1 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 342:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 343:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 344:Src/main.c    **** 
 345:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 346:Src/main.c    **** }
 616              		.loc 1 346 1 view .LVU168
 617 0000 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE135:
 621              		.global	run_mode
 622              		.comm	m_search_tmp,1024,4
 623              		.comm	m_wall_tmp,1024,4
 624              		.global	maze_goal
 625              		.global	goal_size
 626              		.global	maze_y_size
 627              		.global	maze_x_size
 628              		.section	.bss.run_mode,"aw",%nobits
ARM GAS  C:\Temp\ccIcxLxB.s 			page 20


 629              		.set	.LANCHOR2,. + 0
 632              	run_mode:
 633 0000 00       		.space	1
 634              		.section	.data.goal_size,"aw"
 635              		.set	.LANCHOR3,. + 0
 638              	goal_size:
 639 0000 04       		.byte	4
 640              		.section	.data.maze_goal,"aw"
 641              		.align	2
 642              		.set	.LANCHOR4,. + 0
 645              	maze_goal:
 646 0000 02020303 		.ascii	"\002\002\003\003\000\000\000\000\000\001\002\001\002"
 646      00000000 
 646      00010201 
 646      02
 647 000d 00000000 		.ascii	"\000\000\000\000\000"
 647      00
 648              		.section	.data.maze_x_size,"aw"
 649              		.set	.LANCHOR0,. + 0
 652              	maze_x_size:
 653 0000 08       		.byte	8
 654              		.section	.data.maze_y_size,"aw"
 655              		.set	.LANCHOR1,. + 0
 658              	maze_y_size:
 659 0000 11       		.byte	17
 660              		.text
 661              	.Letext0:
 662              		.file 2 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\machine\\_default_t
 663              		.file 3 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 664              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 665              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 666              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 667              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 668              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 669              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 670              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 671              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 672              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 673              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 674              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 675              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 676              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 677              		.file 17 "Inc/adc.h"
 678              		.file 18 "Inc/spi.h"
 679              		.file 19 "Inc/tim.h"
 680              		.file 20 "Inc/usart.h"
 681              		.file 21 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 682              		.file 22 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 683              		.file 23 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\s
 684              		.file 24 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 685              		.file 25 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\math.h"
 686              		.file 26 "Inc/index.h"
 687              		.file 27 "c:\\tools\\gcc-arm-none-eabi-9-2019-q4-major\\arm-none-eabi\\include\\stdlib.h"
 688              		.file 28 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 689              		.file 29 "Inc/gpio.h"
 690              		.file 30 "Inc/dma.h"
 691              		.file 31 "Inc/maze_init.h"
ARM GAS  C:\Temp\ccIcxLxB.s 			page 21


 692              		.file 32 "Inc/maze_solve.h"
 693              		.file 33 "Inc/mode.h"
 694              		.file 34 "<built-in>"
ARM GAS  C:\Temp\ccIcxLxB.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
  C:\Temp\ccIcxLxB.s:18     .text.SystemClock_Config:00000000 $t
  C:\Temp\ccIcxLxB.s:26     .text.SystemClock_Config:00000000 SystemClock_Config
  C:\Temp\ccIcxLxB.s:162    .text.SystemClock_Config:00000084 $d
  C:\Temp\ccIcxLxB.s:168    .text.main:00000000 $t
  C:\Temp\ccIcxLxB.s:175    .text.main:00000000 main
  C:\Temp\ccIcxLxB.s:564    .text.main:000001e0 $d
  C:\Temp\ccIcxLxB.s:584    .text.main:00000220 $d
                            *COM*:00000400 m_search_tmp
                            *COM*:00000400 m_wall_tmp
  C:\Temp\ccIcxLxB.s:602    .text.Error_Handler:00000000 $t
  C:\Temp\ccIcxLxB.s:609    .text.Error_Handler:00000000 Error_Handler
  C:\Temp\ccIcxLxB.s:632    .bss.run_mode:00000000 run_mode
  C:\Temp\ccIcxLxB.s:645    .data.maze_goal:00000000 maze_goal
  C:\Temp\ccIcxLxB.s:638    .data.goal_size:00000000 goal_size
  C:\Temp\ccIcxLxB.s:658    .data.maze_y_size:00000000 maze_y_size
  C:\Temp\ccIcxLxB.s:652    .data.maze_x_size:00000000 maze_x_size
  C:\Temp\ccIcxLxB.s:633    .bss.run_mode:00000000 $d
  C:\Temp\ccIcxLxB.s:641    .data.maze_goal:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART1_UART_Init
MX_TIM4_Init
MX_SPI2_Init
MX_ADC1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM6_Init
MX_TIM1_Init
Motor_Initialize
Communication_Initialize
IMU_Initialize
Encoder_Initialize
Interrupt_Initialize
data_read
Motor_SetDuty_Right
Motor_SetDuty_Left
fornt_wall_calibrate
real_distance_m_clr
real_distance_w_clr
log_init
target_distance_m_set
HAL_Delay
target_distance_w_set
module_test
maze_init
maze_solve
HAL_GPIO_WritePin
mode_main
get_mode_number
ARM GAS  C:\Temp\ccIcxLxB.s 			page 23


accel_dir_flg
move_dir_flg
rotation_dir_flg
correction_mode
